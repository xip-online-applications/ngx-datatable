{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/body-cell.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/body-group-header-template.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/body-group-header.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/body-row-wrapper.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/body-row.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/body.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/progress-bar.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/scroller.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/selection.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/body/summary/summary-row.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/columns/column-cell.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/columns/column-header.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/columns/column.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/columns/tree.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/datatable.component.html","webpack:///projects/swimlane/ngx-datatable/src/lib/components/datatable.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/footer/footer-template.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/footer/footer.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/footer/footer.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/footer/pager.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/header/header-cell.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/header/header.component.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/row-detail/row-detail-template.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/components/row-detail/row-detail.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/directives/draggable.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/directives/long-press.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/directives/orderable.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/directives/resizeable.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/directives/visibility.directive.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/ngx-datatable.module.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/services/column-changes.service.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/services/dimensions-helper.service.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/services/scrollbar-helper.service.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/types/click.type.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/types/column-mode.type.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/types/contextmenu.type.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/types/selection.type.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/types/sort-direction.type.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/types/sort.type.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/camel-case.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/column-helper.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/column-prop-getters.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/column.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/elm-from-point.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/id.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/keys.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/math.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/prefixes.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/row-height-cache.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/selection.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/sort.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/throttle.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/translate.ts","webpack:///projects/swimlane/ngx-datatable/src/lib/utils/tree.ts","webpack:///projects/swimlane/ngx-datatable/src/public-api.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/basic/basic-auto.component.ts","webpack:///src/app/basic/basic-fixed.component.ts","webpack:///src/app/basic/bootstrap.component.ts","webpack:///src/app/basic/contextmenu.component.ts","webpack:///src/app/basic/css.component.ts","webpack:///src/app/basic/dark-theme.component.ts","webpack:///src/app/basic/dynamic-height.component.ts","webpack:///src/app/basic/filter.component.ts","webpack:///src/app/basic/footer.component.ts","webpack:///src/app/basic/fullscreen.component.ts","webpack:///src/app/basic/inline.component.ts","webpack:///src/app/basic/live.component.ts","webpack:///src/app/basic/multiple.component.ts","webpack:///src/app/basic/responsive.component.ts","webpack:///src/app/basic/row-detail.component.ts","webpack:///src/app/basic/row-grouping.component.ts","webpack:///src/app/basic/rx.component.ts","webpack:///src/app/basic/scrolling.component.ts","webpack:///src/app/basic/tabs.component.ts","webpack:///src/app/basic/virtual.component.ts","webpack:///src/app/columns/column-flex.component.ts","webpack:///src/app/columns/column-force.component.ts","webpack:///src/app/columns/column-reorder.component.ts","webpack:///src/app/columns/column-standard.component.ts","webpack:///src/app/columns/column-toggle.component.ts","webpack:///src/app/columns/pinning.component.ts","webpack:///src/app/paging/mock-server-results-service.ts","webpack:///src/app/paging/model/corporate-employee.ts","webpack:///src/app/paging/model/page.ts","webpack:///src/app/paging/model/paged-data.ts","webpack:///src/app/paging/paging-client.component.ts","webpack:///src/app/paging/paging-scrolling-novirtualization.component.ts","webpack:///src/app/paging/paging-server.component.ts","webpack:///src/app/paging/paging-virtual.component.ts","webpack:///src/app/paging/scrolling-server.component.ts","webpack:///src/app/selection/selection-cell.component.ts","webpack:///src/app/selection/selection-chkbox-template.component.ts","webpack:///src/app/selection/selection-chkbox.component.ts","webpack:///src/app/selection/selection-disabled.component.ts","webpack:///src/app/selection/selection-multi-click.component.ts","webpack:///src/app/selection/selection-multi.component.ts","webpack:///src/app/selection/selection-single.component.ts","webpack:///src/app/sorting/sorting-client.component.ts","webpack:///src/app/sorting/sorting-comparator.component.ts","webpack:///src/app/sorting/sorting-default.component.ts","webpack:///src/app/sorting/sorting-server.component.ts","webpack:///src/app/summary/summary-row-custom-template.component.ts","webpack:///src/app/summary/summary-row-inline-html.component.ts","webpack:///src/app/summary/summary-row-server-paging.component.ts","webpack:///src/app/summary/summary-row-simple.component.ts","webpack:///src/app/templates/template-dom.component.ts","webpack:///src/app/templates/template-obj.component.ts","webpack:///src/app/tree/client-tree.component.ts","webpack:///src/app/tree/fullscreen.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","DataTableBodyCellComponent","element","cd","activate","EventEmitter","treeAction","isFocused","onCheckboxChangeFn","onCheckboxChange","bind","activateFn","emit","cellContext","row","group","value","column","rowHeight","isSelected","rowIndex","treeStatus","onTreeAction","_element","nativeElement","_group","checkValueUpdates","markForCheck","_rowHeight","val","_isSelected","_expanded","expanded","_rowIndex","_column","_row","_sorts","calcSortDir","_treeStatus","status","cls","cellClass","res","Object","k","sortDir","SortDirection","width","minWidth","maxWidth","height","isNaN","cellTemplate","clear","$$valueGetter","prop","userPipe","pipe","transform","undefined","sanitizedValue","stripHtml","event","type","cellElement","keyCode","isTargetCell","target","isAction","Keys","preventDefault","stopPropagation","sorts","sort","find","s","dir","html","replace","levelIndent","treeLevelIndent","isTreeColumn","level","ViewContainerRef","DatatableGroupHeaderTemplateDirective","template","DatatableGroupHeaderDirective","toggle","_templateInput","_templateQuery","TemplateRef","DataTableRowWrapperComponent","differs","rowContextmenu","groupContext","rowContext","rowDiffer","create","diff","$event","styles","offsetX","innerWidth","DataTableBodyRowComponent","scrollbarHelper","_groupStyles","left","center","right","_rowDiffer","_columns","recalculateColumns","buildStylesByGroup","_innerWidth","colByPin","columnsByPin","_columnGroupWidths","columnGroupWidths","_offsetX","rowClass","toString","index","colGroup","$$id","calcStylesByGroup","widths","translateXY","bodyWidth","parseInt","totalDiff","total","offsetDiff","offset","cellIndex","rowElement","isTargetRow","columns","colsByPin","_columnsByPin","columnsByPinArr","DataTableBodyComponent","selected","scroll","page","select","detailToggle","rowHeightsCache","RowHeightCache","temp","offsetY","indexes","rowIndexes","WeakMap","rowExpansions","getDetailRowHeight","rowDetail","rowTrackingFn","idx","getRowIndex","trackByProp","_pageSize","recalcLayout","_rows","_offset","scrollbarV","virtualization","_rowCount","scrollbarH","_bodyHeight","selectionType","rowCount","query","listener","subscribe","toggleRowExpansion","toggleAllRows","updateIndexes","updateRows","groupHeader","unsubscribe","scroller","pageSize","setOffset","scrollYPos","scrollXPos","updatePage","direction","first","Math","ceil","floor","last","groupedRows","maxRowsPerGroup","length","set","forEach","g","i","_idx","rows","getRowAndDetailHeight","getRowHeight","getRowExpanded","pos","position","setTimeout","loadingIndicator","bodyHeight","externalPaging","max","min","clearCache","Set","add","initCache","detailRowHeight","externalVirtual","viewPortFirstRowIndex","offsetScroll","getAdjustedViewPortIndex","rowExpandedIdx","getRowExpandedIdx","update","splice","push","currentIndex","refreshRowHeightCache","groupExpansionDefault","rowId","rowIdentity","findIndex","r","get","ScrollerComponent","ProgressBarComponent","ngZone","renderer","prevScrollYPos","prevScrollXPos","_scrollEventListener","parentElement","parentNode","onScrolled","addEventListener","removeEventListener","scrollTop","dom","currentTarget","requestAnimationFrame","scrollLeft","updateOffset","DataTableSelectionComponent","selectEnabled","chkbox","SelectionType","multi","multiClick","shiftKey","selectRowsBetween","prevIndex","getRowSelectedIdx","ctrlKey","metaKey","selectRows","selectCheck","filter","model","selectRow","onKeyboardFocus","shouldFocus","isCellSelection","focusRow","focusCell","nextRowElement","getPrevNextRow","focus","focusElement","previousElementSibling","nextElementSibling","children","nextCellElement","getElementsByClassName","defaultSumFunc","cells","cellsWithValues","cell","some","reduce","noopSumFunc","DataTableSummaryRowComponent","summaryRow","updateInternalColumns","updateValues","_internalColumns","map","col","summaryTemplate","cellsFromSingleColumn","sumFunc","getSummaryFunction","summaryFunc","DataTableColumnCellDirective","DataTableColumnHeaderDirective","DataTableColumnDirective","columnChangesService","isFirstChange","_cellTemplateInput","_cellTemplateQuery","_headerTemplateInput","_headerTemplateQuery","_treeToggleTemplateInput","_treeToggleTemplateQuery","onInputChange","DataTableColumnCellTreeToggle","DatatableComponent","dimensionsHelper","configuration","columnMode","ColumnMode","headerHeight","footerHeight","externalSorting","reorderable","swapColumns","sortType","SortType","cssClasses","sortAscending","sortDescending","sortUnset","pagerLeftArrow","pagerRightArrow","pagerPrevious","pagerNext","messages","emptyMessage","totalMessage","selectedMessage","selectAllRowsOnPage","summaryHeight","summaryPosition","reorder","resize","tableContextmenu","BehaviorSubject","_count","_subscriptions","x","_groupRowsBy","key","_internalRows","sortInternalRows","groupRowsByParents","optionalGetterForProp","treeFromRelation","treeToRelation","recalculate","groupArrayBy","setColumnDefaults","_limit","_columnTemplates","translateColumns","allRowsSelected","bodyComponent","rowsOnPage","count","limit","columnTemplates","changes","v","listenForColumnInputChanges","arr","toArray","translateTemplates","originalArray","groupBy","Map","item","has","addGroup","Array","from","recalculatePages","recalculateDims","forceIdx","allowBleed","forceFillColumnWidths","adjustColumnWidths","dims","getDimensions","calcPageSize","calcRowCount","next","detectChanges","updateOffsetY","size","ContextmenuType","content","newValue","cols","c","$$oldWidth","prevValue","prevCol","movedCol","allSelected","slice","subscription","columnInputChanges$","notifyOnChanges","sortRows","DatatableRowDetailDirective","DatatableFooterDirective","DataTableHeaderComponent","onBodyPage","onRowContextmenu","onBodySelect","onBodyScroll","throttleable","DataTableFooterTemplateDirective","DataTableFooterComponent","selectedCount","DataTablePagerComponent","change","_page","_size","pages","calcPages","totalPages","selectPage","startPage","endPage","maxSize","isMaxSized","num","number","text","prevPage","nextPage","DataTableHeaderCellComponent","columnContextmenu","sortFn","onSort","selectFn","_allRowsSelected","sortClass","calcSortClass","sortable","resizeable","headerClass","headerTemplate","name","checkboxable","headerCheckboxable","nextSortDir","sortAscendingIcon","sortDescendingIcon","sortUnsetIcon","_styleByGroup","destroyed","setStylesByGroup","_headerHeight","dragging","dragEventTarget","newIndex","getColumn","isTarget","targetMarkerContext","initialIndex","oldColumn","newColumn","concat","leftColumnCount","centerColumnCount","calcNewSorts","onColumnReordered","onTargetChanged","DatatableRowDetailTemplateDirective","DraggableDirective","dragX","dragY","dragStart","dragEnd","isDragging","currentValue","dragModel","onMousedown","_destroySubscription","classList","remove","isDragElm","contains","mouseDownPos","clientX","y","clientY","mouseup","fromEvent","document","ev","onMouseup","mouseMoveSub","takeUntil","move","style","top","LongPressDirective","pressEnabled","duration","longPressStart","longPressing","longPressEnd","mouseX","mouseY","pressing","isLongPressing","which","timeout","pressModel","mouseEvent","onMouseMove","loop","xThres","abs","yThres","endPress","clearTimeout","OrderableDirective","targetChanged","differ","updateSubscriptions","draggables","d","diffs","createMapDiffs","previousValue","onDragStart","onDragging","onDragEnd","forEachAddedItem","forEachRemovedItem","positions","dragger","elm","offsetLeft","offsetWidth","prevPos","lastDraggingIndex","targets","elementsFromPoint","el","acc","curr","DOCUMENT","ResizeableDirective","resizeEnabled","resizing","renderer2","resizeHandle","createElement","addClass","appendChild","destroyNode","removeChild","closed","clientWidth","isHandle","initialWidth","mouseDownScreenX","screenX","movementX","newWidth","overMinWidth","underMaxWidth","VisibilityDirective","zone","isVisible","visible","runCheck","run","check","offsetHeight","onVisibilityChange","runOutsideAngular","NgxDatatableModule","ngModule","providers","provide","useValue","ScrollbarHelper","DimensionsHelper","ColumnChangesService","CommonModule","columnInputChanges","Subject","asObservable","getBoundingClientRect","getWidth","outer","visibility","msOverflowStyle","body","widthNoScroll","overflow","inner","widthWithScroll","ClickType","camelCase","str","trim","toLowerCase","a","b","toUpperCase","deCamelCase","match","treeColumnFound","isNullOrUndefined","getterForProp","String","hasOwnProperty","draggable","canAutoResize","templates","result","props","getOwnPropertyNames","emptyStringGetter","numericIndexGetter","indexOf","deepValueGetter","shallowValueGetter","obj","fieldName","path","current","split","ret","frozenLeft","frozenRight","groups","all","columnTotalWidth","totalWidth","parseFloat","columnsTotalWidth","colsByPinArr","elements","previousPointerEvents","elementFromPoint","getPropertyValue","priority","getPropertyPriority","setProperty","random","pow","getTotalFlexGrow","totalFlexGrow","flexGrow","allColumns","expectedWidth","columnsWidth","colsByGroup","scaleColumns","attr","hasMinWidth","remainingWidth","widthPerFlexPoint","startIdx","defaultColWidth","columnsToResize","additionWidthPerColumn","exceedsWindow","contentWidth","getContentWidth","columnsProcessed","remainingWidthLimit","newSize","removeProcessedColumns","cache","testStyle","prefix","window","getComputedStyle","documentElement","prototype","call","join","pre","RegExp","lowercase","css","js","substr","getVendorPrefixedName","property","treeArray","details","isFn","isDetailFn","n","currentRowHeight","scrollY","calcRowIndex","atRowIndex","byRowHeight","atIndex","sum","atIndexA","atIndexB","dataLength","highestBit","blockSize","nextPos","comparefn","selectedIndex","reverse","greater","lesser","range","start","end","orderByComparator","Date","isFinite","dirs","rowToIndexMap","comparator","cachedDirs","valueGetter","compareFn","rowA","rowB","cachedDir","propA","propB","comparison","throttle","func","wait","options","context","args","previous","later","leading","apply","now","remaining","arguments","trailing","innerDecorator","descriptor","configurable","enumerable","getter","defineProperty","backfaceVisibility","hasCSSTransforms","hasCSS3DTransforms","ua","navigator","userAgent","isSafari","test","to","nodeById","l","node","TreeNode","uniqIDs","toValue","parent","fromValue","resolvedRows","flatten","f","recursive","child","routes","AppRoutingModule","RouterModule","relativeLinkResolution","AppComponent","location","version","state","Location","LocationStrategy","useClass","HashLocationStrategy","AppModule","BrowserModule","BasicAutoComponent","BasicFixedComponent","FullScreenComponent","FullScreenTreeComponent","InlineEditComponent","VirtualScrollComponent","HorzVertScrolling","MultipleTablesComponent","RowDetailsComponent","ResponsiveComponent","ClientPagingComponent","ServerPagingComponent","PagingScrollingNoVirtualizationComponent","ServerScrollingComponent","ClientSortingComponent","DefaultSortingComponent","ServerSortingComponent","SortingComparatorComponent","CellSelectionComponent","MultiSelectionComponent","InlineTemplatesComponent","TemplateRefTemplatesComponent","ColumnFlexComponent","ColumnToggleComponent","ColumnStandardComponent","ColumnForceComponent","ColumnPinningComponent","ColumnReorderComponent","FilterBarComponent","VirtualPagingComponent","DarkThemeComponent","TabsDemoComponent","SingleSelectionComponent","LiveDataComponent","MultiDisableSelectionComponent","RxDemoComponent","ContextMenuDemoComponent","CheckboxSelectionComponent","CustomCheckboxSelectionComponent","MultiClickSelectionComponent","RowCssComponent","DynamicHeightComponent","FooterDemoComponent","RowGroupingComponent","BootstrapThemeComponent","ClientTreeComponent","SummaryRowSimpleComponent","SummaryRowCustomTemplateComponent","SummaryRowServerPagingComponent","SummaryRowInlineHtmlComponent","fetch","data","cb","XMLHttpRequest","open","onload","JSON","parse","response","send","summaryForGender","males","females","contextMenuEvent","console","log","rawEvent","contextmenuRow","contextmenuColumn","onTableContextMenu","age","table","updateFilter","editing","active","updated","updateRandom","rowNum","randomNum","cellNum","newRow","stop","columns1","columns2","rows1","gender","company","rows2","toggleExpandRow","onPage","onDetailToggle","funder","calculated","pending","groupStatus","expectedPaymentDealtWith","exppayyes","exppayno","exppaypending","checked","source","startdate","enddate","rowFilter","numberOfExpPayYes","numberOfSourceFunder","numberOfSourceCalculated","numberOfSourceManual","groupstatus","toggleExpandGroup","Observable","subscriber","complete","tab1","tab2","tab3","isChecked","MockServerResultsService","of","getPagedData","delay","pagedData","PagedData","totalElements","pageNumber","jsonObj","employee","CorporateEmployee","Page","serverResultsService","setPage","pageInfo","getResults","isLoading","rowOffset","companyData","pageLimit","onScroll","viewHeight","loadPage","results","onSelect","onActivate","companyComparator","loading","localeCompare","nameSummaryCell","avgAge","fullName","filteredCells","enableSummary","getGenderSummary","onPositionSelectChange","joke","editTmpl","hdrTpl","lastIndex","parentId","environment","production","enableProdMode","platformBrowser","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAA,8BAAwB,CAACS,EAAzB,GAA8B,KAA9B;AACAC,YAAM,CAACC,OAAP,GAAiBX,wBAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBM;;AAIE;;AAA8C;AAAA;;AAAA;;AAAA;AAAA;;AAA9C;;AACF;;;;;;AADyB;;AAAA;;;;;;AAUnB;;;;;;AACA;;;;;;AACA;;;;;;;;AATJ;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AACE;;AACA;;AACA;;AACF;;AACF;;;;;;AARE;;AAIM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;;;;;AAGR;;;;;;AAEE,yHAA8C,yBAA9C,EAA8C,yFAA9C;;;;;;AAfJ;;AACE;;AAYA;;AAMF;;;;;;AAjBK;;AAAA;;AAYA;;AAAA;;;;;;AAOL;;;;;;AAAmC,mGAAwB,WAAxB,EAAwB,YAAxB,EAAwB,4DAAxB;;;;;;;;AACnC;;;;;;AAGE,mHAAwC,yBAAxC,EAAwC,kBAAxC;;;;UAOKY,2B;AAoMX,6CAAYC,OAAZ,EAAyCC,EAAzC,EAAgE;AAAA;;AAAvB,eAAAA,EAAA,GAAAA,EAAA;AA9F/B,eAAAC,QAAA,GAA8B,IAAI,2CAAAC,YAAJ,EAA9B;AAEA,eAAAC,UAAA,GAAgC,IAAI,2CAAAD,YAAJ,EAAhC;AA2EV,eAAAE,SAAA,GAAY,KAAZ;AACA,eAAAC,kBAAA,GAAqB,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAArB;AACA,eAAAC,UAAA,GAAa,KAAKP,QAAL,CAAcQ,IAAd,CAAmBF,IAAnB,CAAwB,KAAKN,QAA7B,CAAb;AAgBE,eAAKS,WAAL,GAAmB;AACjBL,8BAAkB,EAAE,KAAKA,kBADR;AAEjBG,sBAAU,EAAE,KAAKA,UAFA;AAGjBG,eAAG,EAAE,KAAKA,GAHO;AAIjBC,iBAAK,EAAE,KAAKA,KAJK;AAKjBC,iBAAK,EAAE,KAAKA,KALK;AAMjBC,kBAAM,EAAE,KAAKA,MANI;AAOjBC,qBAAS,EAAE,KAAKA,SAPC;AAQjBC,sBAAU,EAAE,KAAKA,UARA;AASjBC,oBAAQ,EAAE,KAAKA,QATE;AAUjBC,sBAAU,EAAE,KAAKA,UAVA;AAWjBC,wBAAY,EAAE,KAAKA,YAAL,CAAkBZ,IAAlB,CAAuB,IAAvB;AAXG,WAAnB;AAcA,eAAKa,QAAL,GAAgBrB,OAAO,CAACsB,aAAxB;AACD;;;;eA1MD,eAAY;AACV,mBAAO,KAAKC,MAAZ;AACD,W;eATD,aAAmBV,KAAnB,EAA+B;AAC7B,iBAAKU,MAAL,GAAcV,KAAd;AACA,iBAAKF,WAAL,CAAiBE,KAAjB,GAAyBA,KAAzB;AACA,iBAAKW,iBAAL;AACA,iBAAKvB,EAAL,CAAQwB,YAAR;AACD;;;eAaD,eAAgB;AACd,mBAAO,KAAKC,UAAZ;AACD,W;eATD,aAAuBC,GAAvB,EAAoC;AAClC,iBAAKD,UAAL,GAAkBC,GAAlB;AACA,iBAAKhB,WAAL,CAAiBK,SAAjB,GAA6BW,GAA7B;AACA,iBAAKH,iBAAL;AACA,iBAAKvB,EAAL,CAAQwB,YAAR;AACD;;;eAYD,eAAc;AACZ,mBAAO,KAAKG,WAAZ;AACD,W;eARD,aAAwBD,GAAxB,EAAsC;AACpC,iBAAKC,WAAL,GAAmBD,GAAnB;AACA,iBAAKhB,WAAL,CAAiBM,UAAjB,GAA8BU,GAA9B;AACA,iBAAK1B,EAAL,CAAQwB,YAAR;AACD;;;eAYD,eAAY;AACV,mBAAO,KAAKI,SAAZ;AACD,W;eARD,aAAsBF,GAAtB,EAAoC;AAClC,iBAAKE,SAAL,GAAiBF,GAAjB;AACA,iBAAKhB,WAAL,CAAiBmB,QAAjB,GAA4BH,GAA5B;AACA,iBAAK1B,EAAL,CAAQwB,YAAR;AACD;;;eAaD,eAAY;AACV,mBAAO,KAAKM,SAAZ;AACD,W;eATD,aAAsBJ,GAAtB,EAAmC;AACjC,iBAAKI,SAAL,GAAiBJ,GAAjB;AACA,iBAAKhB,WAAL,CAAiBO,QAAjB,GAA4BS,GAA5B;AACA,iBAAKH,iBAAL;AACA,iBAAKvB,EAAL,CAAQwB,YAAR;AACD;;;eAaD,eAAU;AACR,mBAAO,KAAKO,OAAZ;AACD,W;eATD,aAAoBjB,MAApB,EAAyC;AACvC,iBAAKiB,OAAL,GAAejB,MAAf;AACA,iBAAKJ,WAAL,CAAiBI,MAAjB,GAA0BA,MAA1B;AACA,iBAAKS,iBAAL;AACA,iBAAKvB,EAAL,CAAQwB,YAAR;AACD;;;eAaD,eAAO;AACL,mBAAO,KAAKQ,IAAZ;AACD,W;eATD,aAAiBrB,GAAjB,EAA2B;AACzB,iBAAKqB,IAAL,GAAYrB,GAAZ;AACA,iBAAKD,WAAL,CAAiBC,GAAjB,GAAuBA,GAAvB;AACA,iBAAKY,iBAAL;AACA,iBAAKvB,EAAL,CAAQwB,YAAR;AACD;;;eAWD,eAAS;AACP,mBAAO,KAAKS,MAAZ;AACD,W;eAPD,aAAmBP,GAAnB,EAA+B;AAC7B,iBAAKO,MAAL,GAAcP,GAAd;AACA,iBAAKQ,WAAL,GAAmB,KAAKA,WAAL,CAAiBR,GAAjB,CAAnB;AACD;;;eAiBD,eAAc;AACZ,mBAAO,KAAKS,WAAZ;AACD,W;eAbD,aAAwBC,MAAxB,EAA4C;AAC1C,gBAAIA,MAAM,KAAK,WAAX,IAA0BA,MAAM,KAAK,UAArC,IAAmDA,MAAM,KAAK,SAA9D,IAA2EA,MAAM,KAAK,UAA1F,EAAsG;AACpG,mBAAKD,WAAL,GAAmB,WAAnB;AACD,aAFD,MAEO;AACL,mBAAKA,WAAL,GAAmBC,MAAnB;AACD;;AACD,iBAAK1B,WAAL,CAAiBQ,UAAjB,GAA8B,KAAKiB,WAAnC;AACA,iBAAKZ,iBAAL;AACA,iBAAKvB,EAAL,CAAQwB,YAAR;AACD;;;eAaD,eACoB;AAClB,gBAAIa,GAAG,GAAG,qBAAV;;AACA,gBAAI,KAAKvB,MAAL,CAAYwB,SAAhB,EAA2B;AACzB,kBAAI,OAAO,KAAKxB,MAAL,CAAYwB,SAAnB,KAAiC,QAArC,EAA+C;AAC7CD,mBAAG,IAAI,MAAM,KAAKvB,MAAL,CAAYwB,SAAzB;AACD,eAFD,MAEO,IAAI,OAAO,KAAKxB,MAAL,CAAYwB,SAAnB,KAAiC,UAArC,EAAiD;AACtD,oBAAMC,GAAG,GAAG,KAAKzB,MAAL,CAAYwB,SAAZ,CAAsB;AAChC3B,qBAAG,EAAE,KAAKA,GADsB;AAEhCC,uBAAK,EAAE,KAAKA,KAFoB;AAGhCE,wBAAM,EAAE,KAAKA,MAHmB;AAIhCD,uBAAK,EAAE,KAAKA,KAJoB;AAKhCE,2BAAS,EAAE,KAAKA;AALgB,iBAAtB,CAAZ;;AAQA,oBAAI,OAAOwB,GAAP,KAAe,QAAnB,EAA6B;AAC3BF,qBAAG,IAAI,MAAME,GAAb;AACD,iBAFD,MAEO,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAClC,sBAAM7C,IAAI,GAAG8C,MAAM,CAAC9C,IAAP,CAAY6C,GAAZ,CAAb;;AACA,2CAAgB7C,IAAhB,2BAAsB;AAAjB,wBAAM+C,CAAC,YAAP;;AACH,wBAAIF,GAAG,CAACE,CAAD,CAAH,KAAW,IAAf,EAAqB;AACnBJ,yBAAG,eAAQI,CAAR,CAAH;AACD;AACF;AACF;AACF;AACF;;AACD,gBAAI,CAAC,KAAKC,OAAV,EAAmB;AACjBL,iBAAG,IAAI,cAAP;AACD;;AACD,gBAAI,KAAKjC,SAAT,EAAoB;AAClBiC,iBAAG,IAAI,SAAP;AACD;;AACD,gBAAI,KAAKK,OAAL,KAAiB,wDAAAC,aAAA,IAArB,EAAwC;AACtCN,iBAAG,IAAI,WAAP;AACD;;AACD,gBAAI,KAAKK,OAAL,KAAiB,wDAAAC,aAAA,KAArB,EAAyC;AACvCN,iBAAG,IAAI,YAAP;AACD;;AAED,mBAAOA,GAAP;AACD;;;eAED,eACS;AACP,mBAAO,KAAKvB,MAAL,CAAY8B,KAAnB;AACD;;;eAED,eACY;AACV,mBAAO,KAAK9B,MAAL,CAAY+B,QAAnB;AACD;;;eAED,eACY;AACV,mBAAO,KAAK/B,MAAL,CAAYgC,QAAnB;AACD;;;eAED,eACU;AACR,gBAAMC,MAAM,GAAG,KAAKhC,SAApB;;AACA,gBAAIiC,KAAK,CAACD,MAAD,CAAT,EAAmB;AACjB,qBAAOA,MAAP;AACD;;AACD,mBAAOA,MAAM,GAAG,IAAhB;AACD;;;iBAwCD,qBAAS;AACP,iBAAKxB,iBAAL;AACD;;;iBAED,uBAAW;AACT,gBAAI,KAAK0B,YAAT,EAAuB;AACrB,mBAAKA,YAAL,CAAkBC,KAAlB;AACD;AACF;;;iBAED,6BAAiB;AACf,gBAAIrC,KAAK,GAAG,EAAZ;;AAEA,gBAAI,CAAC,KAAKF,GAAN,IAAa,CAAC,KAAKG,MAAvB,EAA+B;AAC7BD,mBAAK,GAAG,EAAR;AACD,aAFD,MAEO;AACL,kBAAMa,GAAG,GAAG,KAAKZ,MAAL,CAAYqC,aAAZ,CAA0B,KAAKxC,GAA/B,EAAoC,KAAKG,MAAL,CAAYsC,IAAhD,CAAZ;AACA,kBAAMC,QAAQ,GAAkB,KAAKvC,MAAL,CAAYwC,IAA5C;;AAEA,kBAAID,QAAJ,EAAc;AACZxC,qBAAK,GAAGwC,QAAQ,CAACE,SAAT,CAAmB7B,GAAnB,CAAR;AACD,eAFD,MAEO,IAAIb,KAAK,KAAK2C,SAAd,EAAyB;AAC9B3C,qBAAK,GAAGa,GAAR;AACD;AACF;;AAED,gBAAI,KAAKb,KAAL,KAAeA,KAAnB,EAA0B;AACxB,mBAAKA,KAAL,GAAaA,KAAb;AACA,mBAAKH,WAAL,CAAiBG,KAAjB,GAAyBA,KAAzB;AACA,mBAAK4C,cAAL,GAAsB5C,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK2C,SAA5B,GAAwC,KAAKE,SAAL,CAAe7C,KAAf,CAAxC,GAAgEA,KAAtF;AACA,mBAAKb,EAAL,CAAQwB,YAAR;AACD;AACF;;;iBAGD,mBAAO;AACL,iBAAKpB,SAAL,GAAiB,IAAjB;AACD;;;iBAGD,kBAAM;AACJ,iBAAKA,SAAL,GAAiB,KAAjB;AACD;;;iBAGD,iBAAQuD,KAAR,EAAyB;AACvB,iBAAK1D,QAAL,CAAcQ,IAAd,CAAmB;AACjBmD,kBAAI,EAAE,OADW;AAEjBD,mBAAK,EAALA,KAFiB;AAGjBhD,iBAAG,EAAE,KAAKA,GAHO;AAIjBC,mBAAK,EAAE,KAAKA,KAJK;AAKjBG,uBAAS,EAAE,KAAKA,SALC;AAMjBD,oBAAM,EAAE,KAAKA,MANI;AAOjBD,mBAAK,EAAE,KAAKA,KAPK;AAQjBgD,yBAAW,EAAE,KAAKzC;AARD,aAAnB;AAUD;;;iBAGD,oBAAWuC,KAAX,EAA4B;AAC1B,iBAAK1D,QAAL,CAAcQ,IAAd,CAAmB;AACjBmD,kBAAI,EAAE,UADW;AAEjBD,mBAAK,EAALA,KAFiB;AAGjBhD,iBAAG,EAAE,KAAKA,GAHO;AAIjBC,mBAAK,EAAE,KAAKA,KAJK;AAKjBG,uBAAS,EAAE,KAAKA,SALC;AAMjBD,oBAAM,EAAE,KAAKA,MANI;AAOjBD,mBAAK,EAAE,KAAKA,KAPK;AAQjBgD,yBAAW,EAAE,KAAKzC;AARD,aAAnB;AAUD;;;iBAGD,mBAAUuC,KAAV,EAA8B;AAC5B,gBAAMG,OAAO,GAAGH,KAAK,CAACG,OAAtB;AACA,gBAAMC,YAAY,GAAGJ,KAAK,CAACK,MAAN,KAAiB,KAAK5C,QAA3C;AAEA,gBAAM6C,QAAQ,GACZH,OAAO,KAAK,yCAAAI,IAAA,UAAZ,IACAJ,OAAO,KAAK,yCAAAI,IAAA,KADZ,IAEAJ,OAAO,KAAK,yCAAAI,IAAA,GAFZ,IAGAJ,OAAO,KAAK,yCAAAI,IAAA,KAHZ,IAIAJ,OAAO,KAAK,yCAAAI,IAAA,MALd;;AAOA,gBAAID,QAAQ,IAAIF,YAAhB,EAA8B;AAC5BJ,mBAAK,CAACQ,cAAN;AACAR,mBAAK,CAACS,eAAN;AAEA,mBAAKnE,QAAL,CAAcQ,IAAd,CAAmB;AACjBmD,oBAAI,EAAE,SADW;AAEjBD,qBAAK,EAALA,KAFiB;AAGjBhD,mBAAG,EAAE,KAAKA,GAHO;AAIjBC,qBAAK,EAAE,KAAKA,KAJK;AAKjBG,yBAAS,EAAE,KAAKA,SALC;AAMjBD,sBAAM,EAAE,KAAKA,MANI;AAOjBD,qBAAK,EAAE,KAAKA,KAPK;AAQjBgD,2BAAW,EAAE,KAAKzC;AARD,eAAnB;AAUD;AACF;;;iBAED,0BAAiBuC,KAAjB,EAA2B;AACzB,iBAAK1D,QAAL,CAAcQ,IAAd,CAAmB;AACjBmD,kBAAI,EAAE,UADW;AAEjBD,mBAAK,EAALA,KAFiB;AAGjBhD,iBAAG,EAAE,KAAKA,GAHO;AAIjBC,mBAAK,EAAE,KAAKA,KAJK;AAKjBG,uBAAS,EAAE,KAAKA,SALC;AAMjBD,oBAAM,EAAE,KAAKA,MANI;AAOjBD,mBAAK,EAAE,KAAKA,KAPK;AAQjBgD,yBAAW,EAAE,KAAKzC,QARD;AASjBF,wBAAU,EAAE;AATK,aAAnB;AAWD;;;iBAED,qBAAYmD,KAAZ,EAAwB;AAAA;;AACtB,gBAAI,CAACA,KAAL,EAAY;AACV;AACD;;AAED,gBAAMC,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAY;AAClC,qBAAOA,CAAC,CAACpB,IAAF,KAAW,KAAI,CAACtC,MAAL,CAAYsC,IAA9B;AACD,aAFY,CAAb;;AAIA,gBAAIkB,IAAJ,EAAU;AACR,qBAAOA,IAAI,CAACG,GAAZ;AACD;AACF;;;iBAED,mBAAUC,IAAV,EAAsB;AACpB,gBAAI,CAACA,IAAI,CAACC,OAAV,EAAmB;AACjB,qBAAOD,IAAP;AACD;;AACD,mBAAOA,IAAI,CAACC,OAAL,CAAa,iBAAb,EAAgC,EAAhC,CAAP;AACD;;;iBAED,wBAAe;AACb,iBAAKxE,UAAL,CAAgBM,IAAhB,CAAqB,KAAKE,GAA1B;AACD;;;iBAED,wBAAeG,MAAf,EAA4BH,GAA5B,EAAsC;AACpC,gBAAMiE,WAAW,GAAG9D,MAAM,CAAC+D,eAAP,IAA0B,IAA1B,GAAiC/D,MAAM,CAAC+D,eAAxC,GAA0D,EAA9E;AACA,mBAAO/D,MAAM,CAACgE,YAAP,GAAsBnE,GAAG,CAACoE,KAAJ,GAAYH,WAAlC,GAAgD,CAAvD;AACD;;;;;;;yBArWU9E,2B,EAA0B,sH,EAAA,6H;AAAA,O;;;cAA1BA,2B;AAA0B,4C;AAAA;AAAA;8EA0GF,2CAAAkF,gB;;;;;;;;;;;;;qBA1GxB,a;AAAS,a,EAAA,M,EAAA;AAAA,qBAAT,YAAS;AAAD,a,EAAA,O,EAAA;AAAA,qBAAR,mBAAQ;AAAO,a,EAAA,U,EAAA;AAAA,qBAAf,sBAAe;AAAG,a,EAAA,S,EAAA;AAAA,qBAAlB,qBAAkB;AAAD,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAvC1B;;AACE;;AAMA;;AAqBA;;AACA;;AAOF;;;;AApCuC;;AAElC;;AAAA;;AAKY;;AAAA;;AAqBR;;AAAA;;AAGJ;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCrDIC,sC,GACX,gDAAmBC,QAAnB,EAA+C;AAAA;;AAA5B,aAAAA,QAAA,GAAAA,QAAA;AAA8B,O;;;yBADtCD,sC,EAAqC,uH;AAAA,O;;;cAArCA,sC;AAAqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCDrCE,8B;AADb;AAAA;;AAEE;;;AAGS,eAAApE,SAAA,GAAgE,CAAhE;AAYT;;;;AAGU,eAAAqE,MAAA,GAA4B,IAAI,2CAAAlF,YAAJ,EAA5B;AA+BX;;;;eAtCC,eAAY;AACV,mBAAO,KAAKmF,cAAL,IAAuB,KAAKC,cAAnC;AACD;AAOD;;;;;;iBAGA,2BAAkB1E,KAAlB,EAA4B;AAC1B,iBAAKwE,MAAL,CAAY3E,IAAZ,CAAiB;AACfmD,kBAAI,EAAE,OADS;AAEf/C,mBAAK,EAAED;AAFQ,aAAjB;AAID;AAED;;;;;;iBAGA,2BAAe;AACb,iBAAKwE,MAAL,CAAY3E,IAAZ,CAAiB;AACfmD,kBAAI,EAAE,KADS;AAEf/C,mBAAK,EAAE;AAFQ,aAAjB;AAID;AAED;;;;;;iBAGA,6BAAiB;AACf,iBAAKuE,MAAL,CAAY3E,IAAZ,CAAiB;AACfmD,kBAAI,EAAE,KADS;AAEf/C,mBAAK,EAAE;AAFQ,aAAjB;AAID;;;;;;;yBAjDUsE,8B;AAA6B,O;;;cAA7BA,8B;AAA6B,mD;AAAA;AAAA;mFAS1B,mEAAAF,qC,EAAuC,C,EAAQ,2CAAAM,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKzD;;;;;;AAEE,oHAAyC,yBAAzC,EAAyC,mBAAzC;;;;;;AAHJ;;AACE;;AAMF;;;;;;AAPgF;;AAE3E;;AAAA;;;;;;AAML;;;;;;;;AAOE;;;;;;AAEE,kHAAuC,yBAAvC,EAAuC,iBAAvC;;;;;;AAPJ;;AAKE;;AAMF;;;;;;AATE;;AAIG;;AAAA;;;;;;UAWIC,6B;AAuCX,+CAAoBxF,EAApB,EAAmDyF,OAAnD,EAA6E;AAAA;;AAAzD,eAAAzF,EAAA,GAAAA,EAAA;AAA+B,eAAAyF,OAAA,GAAAA,OAAA;AA/BzC,eAAAC,cAAA,GAAiB,IAAI,2CAAAxF,YAAJ,CAAkD,KAAlD,CAAjB;AA4BF,eAAA0B,SAAA,GAAqB,KAArB;AAIN,eAAK+D,YAAL,GAAoB;AAClB/E,iBAAK,EAAE,KAAKD,GADM;AAElBkB,oBAAQ,EAAE,KAAKA,QAFG;AAGlBZ,oBAAQ,EAAE,KAAKA;AAHG,WAApB;AAMA,eAAK2E,UAAL,GAAkB;AAChBjF,eAAG,EAAE,KAAKA,GADM;AAEhBkB,oBAAQ,EAAE,KAAKA,QAFC;AAGhBZ,oBAAQ,EAAE,KAAKA;AAHC,WAAlB;AAMA,eAAK4E,SAAL,GAAiBJ,OAAO,CAAClB,IAAR,CAAa,EAAb,EAAiBuB,MAAjB,EAAjB;AACD;;;;eApCD,eAAY;AACV,mBAAO,KAAKhE,SAAZ;AACD,W;eATD,aAAsBJ,GAAtB,EAAmC;AACjC,iBAAKI,SAAL,GAAiBJ,GAAjB;AACA,iBAAKkE,UAAL,CAAgB3E,QAAhB,GAA2BS,GAA3B;AACA,iBAAKiE,YAAL,CAAkB1E,QAAlB,GAA6BS,GAA7B;AACA,iBAAK1B,EAAL,CAAQwB,YAAR;AACD;;;eAaD,eAAY;AACV,mBAAO,KAAKI,SAAZ;AACD,W;eATD,aAAsBF,GAAtB,EAAoC;AAClC,iBAAKE,SAAL,GAAiBF,GAAjB;AACA,iBAAKiE,YAAL,CAAkB9D,QAAlB,GAA6BH,GAA7B;AACA,iBAAKkE,UAAL,CAAgB/D,QAAhB,GAA2BH,GAA3B;AACA,iBAAK1B,EAAL,CAAQwB,YAAR;AACD;;;iBA6BD,qBAAS;AACP,gBAAI,KAAKqE,SAAL,CAAeE,IAAf,CAAoB,KAAKpF,GAAzB,CAAJ,EAAmC;AACjC,mBAAKiF,UAAL,CAAgBjF,GAAhB,GAAsB,KAAKA,GAA3B;AACA,mBAAKgF,YAAL,CAAkB/E,KAAlB,GAA0B,KAAKD,GAA/B;AACA,mBAAKX,EAAL,CAAQwB,YAAR;AACD;AACF;;;iBAGD,uBAAcwE,MAAd,EAAgC;AAC9B,iBAAKN,cAAL,CAAoBjF,IAApB,CAAyB;AAAEkD,mBAAK,EAAEqC,MAAT;AAAiBrF,iBAAG,EAAE,KAAKA;AAA3B,aAAzB;AACD;;;iBAED,+BAAmB;AACjB,gBAAMsF,MAAM,GAAG,EAAf;AAEAA,kBAAM,CAAC,WAAD,CAAN,GAAsB,iBAAiB,KAAKC,OAAtB,GAAgC,eAAtD;AACAD,kBAAM,CAAC,qBAAD,CAAN,GAAgC,QAAhC;AACAA,kBAAM,CAAC,OAAD,CAAN,GAAkB,KAAKE,UAAvB;AAEA,mBAAOF,MAAP;AACD;;;;;;;yBA5EUT,6B,EAA4B,6H,EAAA,2H;AAAA,O;;;cAA5BA,6B;AAA4B,8C;AAAA,+C;AAAA;AAAA;;qBAA5B,yB;AAAqB,a;;;;;;;;;;;;;;;;;;;;;;;;;AA3B9B;;AAQA;;AAEA;;;;AAVM;;AAQO;;AAAA;;AAGV;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGD;;AAaE;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAAmC,YAAnC,EAAmC;AAAA;;AAAA;;AAAA;AAAA,WAAnC;;AAGF;;;;;;;;AAZE,sFAAW,OAAX,EAAW,YAAX,EAAW,UAAX,EAAW,eAAX,EAAW,YAAX,EAAW,iBAAX,EAAW,UAAX,EAAW,eAAX,EAAW,QAAX,EAAW,SAAX,EAAW,WAAX,EAAW,gBAAX,EAAW,cAAX,EAAW,mBAAX,EAAW,YAAX,EAAW,iBAAX;;;;;;AATJ;;AAKE;;AAiBF;;;;;;;;AApBE;;AACA;;AAIqB;;AAAA,mGAAqB,cAArB,EAAqB,uBAArB;;;;UAkBdY,0B;AAqGX,4CACUX,OADV,EAEsBY,eAFtB,EAGUrG,EAHV,EAIED,OAJF,EAIqB;AAAA;;AAHX,eAAA0F,OAAA,GAAAA,OAAA;AACY,eAAAY,eAAA,GAAAA,eAAA;AACZ,eAAArG,EAAA,GAAAA,EAAA;AAvED,eAAAkB,UAAA,GAAyB,WAAzB;AAmDC,eAAAjB,QAAA,GAA8B,IAAI,2CAAAC,YAAJ,EAA9B;AACA,eAAAC,UAAA,GAAgC,IAAI,2CAAAD,YAAJ,EAAhC;AAQV,eAAAoG,YAAA,GAAuC;AACrCC,gBAAI,EAAE,EAD+B;AAErCC,kBAAM,EAAE,EAF6B;AAGrCC,iBAAK,EAAE;AAH8B,WAAvC;AAcE,eAAKrF,QAAL,GAAgBrB,OAAO,CAACsB,aAAxB;AACA,eAAKqF,UAAL,GAAkBjB,OAAO,CAAClB,IAAR,CAAa,EAAb,EAAiBuB,MAAjB,EAAlB;AACD;;;;eAtGD,eAAW;AACT,mBAAO,KAAKa,QAAZ;AACD,W;eARD,aAAqBjF,GAArB,EAAiC;AAC/B,iBAAKiF,QAAL,GAAgBjF,GAAhB;AACA,iBAAKkF,kBAAL,CAAwBlF,GAAxB;AACA,iBAAKmF,kBAAL;AACD;;;eAiBD,eAAc;AACZ,mBAAO,KAAKC,WAAZ;AACD,W;eAbD,aAAwBpF,GAAxB,EAAqC;AACnC,gBAAI,KAAKiF,QAAT,EAAmB;AACjB,kBAAMI,QAAQ,GAAG,+CAAAC,YAAA,EAAa,KAAKL,QAAlB,CAAjB;AACA,mBAAKM,kBAAL,GAA0B,+CAAAC,iBAAA,EAAkBH,QAAlB,EAA4B,KAAKJ,QAAjC,CAA1B;AACD;;AAED,iBAAKG,WAAL,GAAmBpF,GAAnB;AACA,iBAAKkF,kBAAL;AACA,iBAAKC,kBAAL;AACD;;;eAoBD,eAAc;AACZ,mBAAO,KAAKM,QAAZ;AACD,W;eAPD,aACYzF,GADZ,EACyB;AACvB,iBAAKyF,QAAL,GAAgBzF,GAAhB;AACA,iBAAKmF,kBAAL;AACD;;;eAKD,eACe;AACb,gBAAIxE,GAAG,GAAG,oBAAV;;AACA,gBAAI,KAAKrB,UAAT,EAAqB;AACnBqB,iBAAG,IAAI,SAAP;AACD;;AACD,gBAAI,KAAKpB,QAAL,GAAgB,CAAhB,KAAsB,CAA1B,EAA6B;AAC3BoB,iBAAG,IAAI,oBAAP;AACD;;AACD,gBAAI,KAAKpB,QAAL,GAAgB,CAAhB,KAAsB,CAA1B,EAA6B;AAC3BoB,iBAAG,IAAI,qBAAP;AACD;;AAED,gBAAI,KAAK+E,QAAT,EAAmB;AACjB,kBAAM7E,GAAG,GAAG,KAAK6E,QAAL,CAAc,KAAKzG,GAAnB,CAAZ;;AACA,kBAAI,OAAO4B,GAAP,KAAe,QAAnB,EAA6B;AAC3BF,mBAAG,eAAQE,GAAR,CAAH;AACD,eAFD,MAEO,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAClC,oBAAM7C,IAAI,GAAG8C,MAAM,CAAC9C,IAAP,CAAY6C,GAAZ,CAAb;;AACA,2CAAgB7C,IAAhB,8BAAsB;AAAjB,sBAAM+C,CAAC,cAAP;;AACH,sBAAIF,GAAG,CAACE,CAAD,CAAH,KAAW,IAAf,EAAqB;AACnBJ,uBAAG,eAAQI,CAAR,CAAH;AACD;AACF;AACF;AACF;;AAED,mBAAOJ,GAAP;AACD;;;eAMD,eACsB;AACpB;AACA,mBAAO,KAAKyE,WAAL,CAAiBO,QAAjB,EAAP;AACD;;;iBA6BD,qBAAS;AACP,gBAAI,KAAKX,UAAL,CAAgBX,IAAhB,CAAqB,KAAKpF,GAA1B,CAAJ,EAAoC;AAClC,mBAAKX,EAAL,CAAQwB,YAAR;AACD;AACF;;;iBAED,uBAAc8F,KAAd,EAA6BC,QAA7B,EAA0C;AACxC,mBAAOA,QAAQ,CAAC3D,IAAhB;AACD;;;iBAED,0BAAiB0D,KAAjB,EAAgCxG,MAAhC,EAA2C;AACzC,mBAAOA,MAAM,CAAC0G,IAAd;AACD;;;iBAED,8BAAqB;AACnB,iBAAKlB,YAAL,CAAkBC,IAAlB,GAAyB,KAAKkB,iBAAL,CAAuB,MAAvB,CAAzB;AACA,iBAAKnB,YAAL,CAAkBE,MAAlB,GAA2B,KAAKiB,iBAAL,CAAuB,QAAvB,CAA3B;AACA,iBAAKnB,YAAL,CAAkBG,KAAlB,GAA0B,KAAKgB,iBAAL,CAAuB,OAAvB,CAA1B;AACA,iBAAKzH,EAAL,CAAQwB,YAAR;AACD;;;iBAED,2BAAkBZ,KAAlB,EAAiC;AAC/B,gBAAM8G,MAAM,GAAG,KAAKT,kBAApB;AACA,gBAAMf,OAAO,GAAG,KAAKA,OAArB;AAEA,gBAAMD,MAAM,GAAG;AACbrD,mBAAK,YAAK8E,MAAM,CAAC9G,KAAD,CAAX;AADQ,aAAf;;AAIA,gBAAIA,KAAK,KAAK,MAAd,EAAsB;AACpB,gEAAA+G,WAAA,EAAY1B,MAAZ,EAAoBC,OAApB,EAA6B,CAA7B;AACD,aAFD,MAEO,IAAItF,KAAK,KAAK,OAAd,EAAuB;AAC5B,kBAAMgH,SAAS,GAAGC,QAAQ,CAAC,KAAK1B,UAAL,GAAkB,EAAnB,EAAuB,CAAvB,CAA1B;AACA,kBAAM2B,SAAS,GAAGJ,MAAM,CAACK,KAAP,GAAeH,SAAjC;AACA,kBAAMI,UAAU,GAAGF,SAAS,GAAG5B,OAA/B;AACA,kBAAM+B,MAAM,GAAG,CAACD,UAAU,GAAG,KAAK3B,eAAL,CAAqBzD,KAAnC,IAA4C,CAAC,CAA5D;AACA,gEAAA+E,WAAA,EAAY1B,MAAZ,EAAoBgC,MAApB,EAA4B,CAA5B;AACD;;AAED,mBAAOhC,MAAP;AACD;;;iBAED,oBAAWtC,KAAX,EAAuB2D,KAAvB,EAAoC;AAClC3D,iBAAK,CAACuE,SAAN,GAAkBZ,KAAlB;AACA3D,iBAAK,CAACwE,UAAN,GAAmB,KAAK/G,QAAxB;AACA,iBAAKnB,QAAL,CAAcQ,IAAd,CAAmBkD,KAAnB;AACD;;;iBAGD,mBAAUA,KAAV,EAA8B;AAC5B,gBAAMG,OAAO,GAAGH,KAAK,CAACG,OAAtB;AACA,gBAAMsE,WAAW,GAAGzE,KAAK,CAACK,MAAN,KAAiB,KAAK5C,QAA1C;AAEA,gBAAM6C,QAAQ,GACZH,OAAO,KAAK,yCAAAI,IAAA,UAAZ,IACAJ,OAAO,KAAK,yCAAAI,IAAA,KADZ,IAEAJ,OAAO,KAAK,yCAAAI,IAAA,GAFZ,IAGAJ,OAAO,KAAK,yCAAAI,IAAA,KAHZ,IAIAJ,OAAO,KAAK,yCAAAI,IAAA,MALd;;AAOA,gBAAID,QAAQ,IAAImE,WAAhB,EAA6B;AAC3BzE,mBAAK,CAACQ,cAAN;AACAR,mBAAK,CAACS,eAAN;AAEA,mBAAKnE,QAAL,CAAcQ,IAAd,CAAmB;AACjBmD,oBAAI,EAAE,SADW;AAEjBD,qBAAK,EAALA,KAFiB;AAGjBhD,mBAAG,EAAE,KAAKA,GAHO;AAIjBwH,0BAAU,EAAE,KAAK/G;AAJA,eAAnB;AAMD;AACF;;;iBAGD,sBAAauC,KAAb,EAAuB;AACrB,iBAAK1D,QAAL,CAAcQ,IAAd,CAAmB;AACjBmD,kBAAI,EAAE,YADW;AAEjBD,mBAAK,EAALA,KAFiB;AAGjBhD,iBAAG,EAAE,KAAKA,GAHO;AAIjBwH,wBAAU,EAAE,KAAK/G;AAJA,aAAnB;AAMD;;;iBAED,8BAA4C;AAAA,gBAAzBM,GAAyB,uEAAZ,KAAK2G,OAAO;AAC1C,iBAAK1B,QAAL,GAAgBjF,GAAhB;AACA,gBAAM4G,SAAS,GAAG,+CAAAtB,YAAA,EAAa,KAAKL,QAAlB,CAAlB;AACA,iBAAK4B,aAAL,GAAqB,+CAAAC,eAAA,EAAgB,KAAK7B,QAArB,CAArB;AACA,iBAAKM,kBAAL,GAA0B,+CAAAC,iBAAA,EAAkBoB,SAAlB,EAA6B,KAAK3B,QAAlC,CAA1B;AACD;;;iBAED,wBAAe;AACb,iBAAKxG,UAAL,CAAgBM,IAAhB;AACD;;;;;;;yBA3MU2F,0B,EAAyB,2H,EAAA,mJ,EAAA,6H,EAAA,sH;AAAA,O;;;cAAzBA,0B;AAAyB,2C;AAAA,mB;AAAA;AAAA;;qBAAzB,qB;AAAiB,a,EAAA,Y,EAAA;AAAA,qBAAjB,wBAAiB;AAAG,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAzB7B;;;;AACuB,mGAAkB,cAAlB,EAAkB,iBAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNvB;;;;;;AAoBI;;;;;;AAEE,sGAA2B,SAA3B,EAA2B,cAA3B,EAA2B,YAA3B,EAA2B,iBAA3B,EAA2B,MAA3B,EAA2B,WAA3B,EAA2B,SAA3B,EAA2B,cAA3B;;;;;;;;AAqBA;;AAeE;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAAkC,UAAlC,EAAkC;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBACtB,oDADsB;AACwB,WAD1D;;AAGF;;;;;;;;;;AAdE,+GAA6C,YAA7C,EAA6C,iBAA7C,EAA6C,SAA7C,EAA6C,cAA7C,EAA6C,SAA7C,EAA6C,cAA7C,EAA6C,WAA7C,EAA6C,6BAA7C,EAA6C,KAA7C,EAA6C,QAA7C,EAA6C,UAA7C,EAA6C,4BAA7C,EAA6C,UAA7C,EAA6C,+BAA7C,EAA6C,UAA7C,EAA6C,eAA7C,EAA6C,cAA7C,EAA6C,mBAA7C,EAA6C,YAA7C,EAA6C,+BAA7C;;;;;;;;AAgBA;;AAcE;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAY,6BAAZ;AAA0C,WAA1C;;AAEF;;;;;;;;;;;;AAZE,8GAA2C,YAA3C,EAA2C,kBAA3C,EAA2C,SAA3C,EAA2C,eAA3C,EAA2C,SAA3C,EAA2C,eAA3C,EAA2C,WAA3C,EAA2C,6BAA3C,EAA2C,KAA3C,EAA2C,OAA3C,EAA2C,OAA3C,EAA2C,cAA3C,EAA2C,UAA3C,EAA2C,4BAA3C,EAA2C,UAA3C,EAA2C,+BAA3C,EAA2C,UAA3C,EAA2C,gBAA3C;;;;;;AAJF;;;;;;;;AAEkB,8FAAgB,cAAhB,EAAgB,qBAAhB;;;;;;;;AApCtB;;AAYE;AAAA;;AAAA;;AAAA,mBAAkB,QAAAV,cAAA,aAAlB;AAA6C,WAA7C;;AAEA;;AAmBA;;AAmBF;;;;;;;;;;;AAnDE,sGAA2B,YAA3B,EAA2B,iBAA3B,EAA2B,SAA3B,EAA2B,8BAA3B,EAA2B,WAA3B,EAA2B,gBAA3B,EAA2B,aAA3B,EAA2B,kBAA3B,EAA2B,SAA3B,EAA2B,cAA3B,EAA2B,iBAA3B,EAA2B,2DAA3B,EAA2B,KAA3B,EAA2B,QAA3B,EAA2B,UAA3B,EAA2B,+BAA3B,EAA2B,UAA3B,EAA2B,8CAA3B;;AAeG;;AAAA,gGAAoB,UAApB,EAAoB,IAApB;;;;;;AAqCL;;;;;;AAGE,kHAAuC,WAAvC,EAAuC,oBAAvC,EAAuC,SAAvC,EAAuC,cAAvC,EAAuC,YAAvC,EAAuC,iBAAvC,EAAuC,MAAvC,EAAuC,WAAvC,EAAuC,SAAvC,EAAuC,cAAvC;;;;;;;;AAzEJ;;AAME;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AASA;;AAqDA;;AAWF;;;;;;AA/EE,oGAAyB,YAAzB,EAAyB,iBAAzB,EAAyB,cAAzB,EAAyB,mBAAzB,EAAyB,aAAzB,EAAyB,wEAAzB;;AAOG;;AAAA;;AAUiB;;AAAA,2FAAS,cAAT,EAAS,oBAAT;;AAqDjB;;AAAA;;;;;;AAUL;;;;;;AAAkE;;;;UAQ3D+C,uB;AAiJX;;;AAGA,yCAAoBzI,EAApB,EAA2C;AAAA;;AAAA;;AAAvB,eAAAA,EAAA,GAAAA,EAAA;AA3IX,eAAA0I,QAAA,GAAkB,EAAlB;AAwFC,eAAAC,MAAA,GAA4B,IAAI,2CAAAzI,YAAJ,EAA5B;AACA,eAAA0I,IAAA,GAA0B,IAAI,2CAAA1I,YAAJ,EAA1B;AACA,eAAAD,QAAA,GAA8B,IAAI,2CAAAC,YAAJ,EAA9B;AACA,eAAA2I,MAAA,GAA4B,IAAI,2CAAA3I,YAAJ,EAA5B;AACA,eAAA4I,YAAA,GAAkC,IAAI,2CAAA5I,YAAJ,EAAlC;AACA,eAAAwF,cAAA,GAAiB,IAAI,2CAAAxF,YAAJ,CAAkD,KAAlD,CAAjB;AACA,eAAAC,UAAA,GAAgC,IAAI,2CAAAD,YAAJ,EAAhC;AAwBV,eAAA6I,eAAA,GAAkC,IAAI,qDAAAC,cAAJ,EAAlC;AACA,eAAAC,IAAA,GAAc,EAAd;AACA,eAAAC,OAAA,GAAU,CAAV;AACA,eAAAC,OAAA,GAAe,EAAf;AAKA,eAAAC,UAAA,GAAkB,IAAIC,OAAJ,EAAlB;AACA,eAAAC,aAAA,GAAuB,EAAvB;AAwOA;;;;AAGA,eAAAC,kBAAA,GAAqB,UAAC5I,GAAD,EAAY2G,KAAZ,EAAoC;AACvD,gBAAI,CAAC,MAAI,CAACkC,SAAV,EAAqB;AACnB,qBAAO,CAAP;AACD;;AACD,gBAAMzI,SAAS,GAAG,MAAI,CAACyI,SAAL,CAAezI,SAAjC;AACA,mBAAO,OAAOA,SAAP,KAAqB,UAArB,GAAkCA,SAAS,CAACJ,GAAD,EAAM2G,KAAN,CAA3C,GAA2DvG,SAAlE;AACD,WAND,CA/N2C,CACzC;;;AACA,eAAK0I,aAAL,GAAqB,UAACnC,KAAD,EAAgB3G,GAAhB,EAAkC;AACrD,gBAAM+I,GAAG,GAAG,MAAI,CAACC,WAAL,CAAiBhJ,GAAjB,CAAZ;;AACA,gBAAI,MAAI,CAACiJ,WAAT,EAAsB;AACpB,qBAAOjJ,GAAG,CAAC,MAAI,CAACiJ,WAAN,CAAV;AACD,aAFD,MAEO;AACL,qBAAOF,GAAP;AACD;AACF,WAPD;AAQD;;;;eA/HD,eAAY;AACV,mBAAO,KAAKG,SAAZ;AACD,W;eAPD,aAAsBnI,GAAtB,EAAmC;AACjC,iBAAKmI,SAAL,GAAiBnI,GAAjB;AACA,iBAAKoI,YAAL;AACD;;;eAWD,eAAQ;AACN,mBAAO,KAAKC,KAAZ;AACD,W;eAPD,aAAkBrI,GAAlB,EAA8B;AAC5B,iBAAKqI,KAAL,GAAarI,GAAb;AACA,iBAAKoI,YAAL;AACD;;;eAYD,eAAW;AACT,mBAAO,KAAKnD,QAAZ;AACD,W;eARD,aAAqBjF,GAArB,EAAiC;AAC/B,iBAAKiF,QAAL,GAAgBjF,GAAhB;AACA,gBAAM4G,SAAS,GAAG,+CAAAtB,YAAA,EAAatF,GAAb,CAAlB;AACA,iBAAKwF,iBAAL,GAAyB,+CAAAA,iBAAA,EAAkBoB,SAAlB,EAA6B5G,GAA7B,CAAzB;AACD;;;eAWD,eAAU;AACR,mBAAO,KAAKsI,OAAZ;AACD,W;eAPD,aAAoBtI,GAApB,EAAiC;AAC/B,iBAAKsI,OAAL,GAAetI,GAAf;AACA,gBAAI,CAAC,KAAKuI,UAAN,IAAqB,KAAKA,UAAL,IAAmB,CAAC,KAAKC,cAAlD,EAAmE,KAAKJ,YAAL;AACpE;;;eAWD,eAAY;AACV,mBAAO,KAAKK,SAAZ;AACD,W;eAPD,aAAsBzI,GAAtB,EAAmC;AACjC,iBAAKyI,SAAL,GAAiBzI,GAAjB;AACA,iBAAKoI,YAAL;AACD;;;eAMD,eACa;AACX,gBAAI,KAAKM,UAAT,EAAqB;AACnB,qBAAO,KAAKjE,UAAL,GAAkB,IAAzB;AACD,aAFD,MAEO;AACL,qBAAO,MAAP;AACD;AACF;;;eAcD,eAAiB;AACf,mBAAO,KAAKkE,WAAZ;AACD;AAYD;;;;eA1BA,aAEe3I,GAFf,EAEoB;AAClB,gBAAI,KAAKuI,UAAT,EAAqB;AACnB,mBAAKI,WAAL,GAAmB3I,GAAG,GAAG,IAAzB;AACD,aAFD,MAEO;AACL,mBAAK2I,WAAL,GAAmB,MAAnB;AACD;;AAED,iBAAKP,YAAL;AACD;;;eAmBD,eAAiB;AACf,mBAAO,CAAC,CAAC,KAAKQ,aAAd;AACD;AAED;;;;;;;;eAKA,eAAgB;AACd,gBAAI,KAAKL,UAAL,IAAmB,KAAKC,cAAxB,IAA0C,KAAKK,QAAnD,EAA6D;AAC3D,qBAAO,KAAKxB,eAAL,CAAqByB,KAArB,CAA2B,KAAKD,QAAL,GAAgB,CAA3C,CAAP;AACD,aAHa,CAId;;;AACA,mBAAO/G,SAAP;AACD;AAmCD;;;;;;iBAGA,oBAAQ;AAAA;;AACN,gBAAI,KAAKgG,SAAT,EAAoB;AAClB,mBAAKiB,QAAL,GAAgB,KAAKjB,SAAL,CAAepE,MAAf,CAAsBsF,SAAtB,CAAgC,gBAAmD;AAAA,oBAAhD9G,IAAgD,QAAhDA,IAAgD;AAAA,oBAA1C/C,KAA0C,QAA1CA,KAA0C;;AACjG,oBAAI+C,IAAI,KAAK,KAAb,EAAoB;AAClB,wBAAI,CAAC+G,kBAAL,CAAwB9J,KAAxB;AACD;;AACD,oBAAI+C,IAAI,KAAK,KAAb,EAAoB;AAClB,wBAAI,CAACgH,aAAL,CAAmB/J,KAAnB;AACD,iBANgG,CAQjG;AACA;;;AACA,sBAAI,CAACgK,aAAL;;AACA,sBAAI,CAACC,UAAL;;AACA,sBAAI,CAAC9K,EAAL,CAAQwB,YAAR;AACD,eAbe,CAAhB;AAcD;;AAED,gBAAI,KAAKuJ,WAAT,EAAsB;AACpB,mBAAKN,QAAL,GAAgB,KAAKM,WAAL,CAAiB3F,MAAjB,CAAwBsF,SAAxB,CAAkC,iBAAmD;AAAA,oBAAhD9G,IAAgD,SAAhDA,IAAgD;AAAA,oBAA1C/C,KAA0C,SAA1CA,KAA0C;;AACnG,oBAAI+C,IAAI,KAAK,OAAb,EAAsB;AACpB,wBAAI,CAAC+G,kBAAL,CAAwB9J,KAAxB;AACD;;AACD,oBAAI+C,IAAI,KAAK,KAAb,EAAoB;AAClB,wBAAI,CAACgH,aAAL,CAAmB/J,KAAnB;AACD,iBANkG,CAQnG;AACA;;;AACA,sBAAI,CAACgK,aAAL;;AACA,sBAAI,CAACC,UAAL;;AACA,sBAAI,CAAC9K,EAAL,CAAQwB,YAAR;AACD,eAbe,CAAhB;AAcD;AACF;AAED;;;;;;iBAGA,uBAAW;AACT,gBAAI,KAAKgI,SAAL,IAAkB,KAAKuB,WAA3B,EAAwC;AACtC,mBAAKN,QAAL,CAAcO,WAAd;AACD;AACF;AAED;;;;;;iBAGA,uBAAc/C,MAAd,EAA6B;AAC3B;AACA,gBAAI,CAAC,KAAKgD,QAAV,EAAoB;AAClB;AACD;;AAED,gBAAI,KAAKhB,UAAL,IAAmB,KAAKC,cAAxB,IAA0CjC,MAA9C,EAAsD;AACpD;AACA,kBAAMhH,QAAQ,GAAG,KAAKiK,QAAL,GAAgBjD,MAAjC;AACAA,oBAAM,GAAG,KAAKc,eAAL,CAAqByB,KAArB,CAA2BvJ,QAAQ,GAAG,CAAtC,CAAT;AACD,aAJD,MAIO,IAAI,KAAKgJ,UAAL,IAAmB,CAAC,KAAKC,cAA7B,EAA6C;AAClDjC,oBAAM,GAAG,CAAT;AACD;;AAED,iBAAKgD,QAAL,CAAcE,SAAd,CAAwBlD,MAAM,IAAI,CAAlC;AACD;AAED;;;;;;;iBAIA,sBAAatE,KAAb,EAAuB;AACrB,gBAAMyH,UAAU,GAAWzH,KAAK,CAACyH,UAAjC;AACA,gBAAMC,UAAU,GAAW1H,KAAK,CAAC0H,UAAjC,CAFqB,CAIrB;AACA;;AACA,gBAAI,KAAKnC,OAAL,KAAiBkC,UAAjB,IAA+B,KAAKlF,OAAL,KAAiBmF,UAApD,EAAgE;AAC9D,mBAAK1C,MAAL,CAAYlI,IAAZ,CAAiB;AACfyI,uBAAO,EAAEkC,UADM;AAEflF,uBAAO,EAAEmF;AAFM,eAAjB;AAID;;AAED,iBAAKnC,OAAL,GAAekC,UAAf;AACA,iBAAKlF,OAAL,GAAemF,UAAf;AAEA,iBAAKR,aAAL;AACA,iBAAKS,UAAL,CAAgB3H,KAAK,CAAC4H,SAAtB;AACA,iBAAKT,UAAL;AACD;AAED;;;;;;iBAGA,oBAAWS,SAAX,EAA4B;AAC1B,gBAAItD,MAAM,GAAG,KAAKkB,OAAL,CAAaqC,KAAb,GAAqB,KAAKN,QAAvC;;AAEA,gBAAIK,SAAS,KAAK,IAAlB,EAAwB;AACtBtD,oBAAM,GAAGwD,IAAI,CAACC,IAAL,CAAUzD,MAAV,CAAT;AACD,aAFD,MAEO,IAAIsD,SAAS,KAAK,MAAlB,EAA0B;AAC/BtD,oBAAM,GAAGwD,IAAI,CAACE,KAAL,CAAW1D,MAAX,CAAT;AACD;;AAED,gBAAIsD,SAAS,KAAK/H,SAAd,IAA2B,CAACR,KAAK,CAACiF,MAAD,CAArC,EAA+C;AAC7C,mBAAKW,IAAL,CAAUnI,IAAV,CAAe;AAAEwH,sBAAM,EAANA;AAAF,eAAf;AACD;AACF;AAED;;;;;;iBAGA,sBAAU;AAAA;;AACR,gCAAwB,KAAKkB,OAA7B;AAAA,gBAAQqC,KAAR,iBAAQA,KAAR;AAAA,gBAAeI,IAAf,iBAAeA,IAAf;AACA,gBAAI3K,QAAQ,GAAGuK,KAAf;AACA,gBAAI9B,GAAG,GAAG,CAAV;AACA,gBAAMT,IAAI,GAAU,EAApB,CAJQ,CAMR;AACA;AACA;;AACA,gBAAI,KAAK4C,WAAT,EAAsB;AACpB,kBAAIC,eAAe,GAAG,CAAtB,CADoB,CAEpB;AACA;;AACA,kBAAI,KAAKD,WAAL,CAAiBE,MAAjB,KAA4B,CAAhC,EAAmC;AACjCD,+BAAe,GAAG,KAAKD,WAAL,CAAiB,CAAjB,EAAoBhL,KAApB,CAA0BkL,MAA5C;AACD;;AAED,qBAAO9K,QAAQ,GAAG2K,IAAX,IAAmB3K,QAAQ,GAAG,KAAK4K,WAAL,CAAiBE,MAAtD,EAA8D;AAC5D;AACA,oBAAMnL,KAAK,GAAG,KAAKiL,WAAL,CAAiB5K,QAAjB,CAAd;AACA,qBAAKmI,UAAL,CAAgB4C,GAAhB,CAAoBpL,KAApB,EAA2BK,QAA3B;;AAEA,oBAAIL,KAAK,CAACC,KAAV,EAAiB;AACf;AACAD,uBAAK,CAACC,KAAN,CAAYoL,OAAZ,CAAoB,UAACC,CAAD,EAASC,CAAT,EAAuB;AACzC,wBAAMC,IAAI,aAAMnL,QAAN,cAAkBkL,CAAlB,CAAV;;AACA,0BAAI,CAAC/C,UAAL,CAAgB4C,GAAhB,CAAoBE,CAApB,EAAuBE,IAAvB;AACD,mBAHD;AAID;;AACDnD,oBAAI,CAACS,GAAD,CAAJ,GAAY9I,KAAZ;AACA8I,mBAAG,GAbyD,CAe5D;;AACAzI,wBAAQ;AACT;AACF,aA1BD,MA0BO;AACL,qBAAOA,QAAQ,GAAG2K,IAAX,IAAmB3K,QAAQ,GAAG,KAAKsJ,QAA1C,EAAoD;AAClD,oBAAM5J,GAAG,GAAG,KAAK0L,IAAL,CAAUpL,QAAV,CAAZ;;AAEA,oBAAIN,GAAJ,EAAS;AACP;AACA,uBAAKyI,UAAL,CAAgB4C,GAAhB,CAAoBrL,GAApB,EAAyBM,QAAzB;AACAgI,sBAAI,CAACS,GAAD,CAAJ,GAAY/I,GAAZ;AACD;;AAED+I,mBAAG;AACHzI,wBAAQ;AACT;AACF;;AAED,iBAAKgI,IAAL,GAAYA,IAAZ;AACD;AAED;;;;;;iBAGA,sBAAatI,GAAb,EAAqB;AACnB;AACA,gBAAI,OAAO,KAAKI,SAAZ,KAA0B,UAA9B,EAA0C;AACxC,qBAAO,KAAKA,SAAL,CAAeJ,GAAf,CAAP;AACD;;AAED,mBAAO,KAAKI,SAAZ;AACD;AAED;;;;;;iBAGA,wBAAeH,KAAf,EAAyB;AACvB,gBAAIG,SAAS,GAAG,CAAhB;;AAEA,gBAAIH,KAAK,CAACC,KAAV,EAAiB;AACf,mBAAK,IAAIyG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG1G,KAAK,CAACC,KAAN,CAAYkL,MAAxC,EAAgDzE,KAAK,EAArD,EAAyD;AACvDvG,yBAAS,IAAI,KAAKuL,qBAAL,CAA2B1L,KAAK,CAACC,KAAN,CAAYyG,KAAZ,CAA3B,CAAb;AACD;AACF;;AAED,mBAAOvG,SAAP;AACD;AAED;;;;;;iBAGA,+BAAsBJ,GAAtB,EAA8B;AAC5B,gBAAII,SAAS,GAAG,KAAKwL,YAAL,CAAkB5L,GAAlB,CAAhB;AACA,gBAAMkB,QAAQ,GAAG,KAAK2K,cAAL,CAAoB7L,GAApB,CAAjB,CAF4B,CAI5B;;AACA,gBAAIkB,QAAJ,EAAc;AACZd,uBAAS,IAAI,KAAKwI,kBAAL,CAAwB5I,GAAxB,CAAb;AACD;;AAED,mBAAOI,SAAP;AACD;AAaD;;;;;;;;;;;;;;;;;;;;;;;iBAoBA,uBAAcsL,IAAd,EAAuB;AACrB,gBAAMpG,MAAM,GAAQ,EAApB,CADqB,CAGrB;;AACA,gBAAI,KAAK4F,WAAT,EAAsB;AACpB5F,oBAAM,CAACrD,KAAP,GAAe,KAAKsE,iBAAL,CAAuBa,KAAtC;AACD;;AAED,gBAAI,KAAKkC,UAAL,IAAmB,KAAKC,cAA5B,EAA4C;AAC1C,kBAAIR,GAAG,GAAG,CAAV;;AAEA,kBAAI,KAAKmC,WAAT,EAAsB;AACpB;AACA,oBAAMlL,GAAG,GAAG0L,IAAI,CAACA,IAAI,CAACN,MAAL,GAAc,CAAf,CAAhB;AACArC,mBAAG,GAAG/I,GAAG,GAAG,KAAKgJ,WAAL,CAAiBhJ,GAAjB,CAAH,GAA2B,CAApC;AACD,eAJD,MAIO;AACL+I,mBAAG,GAAG,KAAKC,WAAL,CAAiB0C,IAAjB,CAAN;AACD,eATyC,CAW1C;AACA;AACA;;;AACA,kBAAMI,GAAG,GAAG,KAAK1D,eAAL,CAAqByB,KAArB,CAA2Bd,GAAG,GAAG,CAAjC,CAAZ;AAEA,gEAAA/B,WAAA,EAAY1B,MAAZ,EAAoB,CAApB,EAAuBwG,GAAvB;AACD;;AAED,mBAAOxG,MAAP;AACD;AAED;;;;;;;;;;;;iBASA,qCAAyB;AACvB,gBAAI,CAAC,KAAKgE,UAAN,IAAoB,CAAC,KAAKoC,IAA1B,IAAkC,CAAC,KAAKA,IAAL,CAAUN,MAAjD,EAAyD;AACvD,qBAAO,IAAP;AACD;;AAED,gBAAM9F,MAAM,GAAG;AAAEyG,sBAAQ,EAAE;AAAZ,aAAf;AACA,gBAAMD,GAAG,GAAG,KAAK1D,eAAL,CAAqByB,KAArB,CAA2B,KAAK6B,IAAL,CAAUN,MAAV,GAAmB,CAA9C,CAAZ;AAEA,8DAAApE,WAAA,EAAY1B,MAAZ,EAAoB,CAApB,EAAuBwG,GAAvB;AAEA,mBAAOxG,MAAP;AACD;AAED;;;;;;iBAGA,yBAAa;AAAA;;AACX0G,sBAAU,CAAC;AAAA,qBAAO,MAAI,CAACC,gBAAL,GAAwB,KAA/B;AAAA,aAAD,EAAwC,GAAxC,CAAV;AACD;AAED;;;;;;iBAGA,yBAAa;AACX,gBAAIpB,KAAK,GAAG,CAAZ;AACA,gBAAII,IAAI,GAAG,CAAX;;AAEA,gBAAI,KAAK3B,UAAT,EAAqB;AACnB,kBAAI,KAAKC,cAAT,EAAyB;AACvB;AACA;AACA;AACA,oBAAMnH,MAAM,GAAG8E,QAAQ,CAAC,KAAKgF,UAAN,EAAkB,CAAlB,CAAvB;AACArB,qBAAK,GAAG,KAAKzC,eAAL,CAAqBY,WAArB,CAAiC,KAAKT,OAAtC,CAAR;AACA0C,oBAAI,GAAG,KAAK7C,eAAL,CAAqBY,WAArB,CAAiC5G,MAAM,GAAG,KAAKmG,OAA/C,IAA0D,CAAjE;AACD,eAPD,MAOO;AACL;AACA;AACAsC,qBAAK,GAAG,CAAR;AACAI,oBAAI,GAAG,KAAKrB,QAAZ;AACD;AACF,aAdD,MAcO;AACL;AACA;AACA,kBAAI,CAAC,KAAKuC,cAAV,EAA0B;AACxBtB,qBAAK,GAAGC,IAAI,CAACsB,GAAL,CAAS,KAAK9E,MAAL,GAAc,KAAKiD,QAA5B,EAAsC,CAAtC,CAAR;AACD;;AACDU,kBAAI,GAAGH,IAAI,CAACuB,GAAL,CAASxB,KAAK,GAAG,KAAKN,QAAtB,EAAgC,KAAKX,QAArC,CAAP;AACD;;AAED,iBAAKpB,OAAL,GAAe;AAAEqC,mBAAK,EAALA,KAAF;AAASI,kBAAI,EAAJA;AAAT,aAAf;AACD;AAED;;;;;;;iBAIA,iCAAqB;AACnB,gBAAI,CAAC,KAAK3B,UAAN,IAAqB,KAAKA,UAAL,IAAmB,CAAC,KAAKC,cAAlD,EAAmE;AACjE;AACD,aAHkB,CAKnB;AACA;AACA;;;AACA,iBAAKnB,eAAL,CAAqBkE,UAArB,GARmB,CAUnB;;AACA,gBAAI,KAAKZ,IAAL,IAAa,KAAKA,IAAL,CAAUN,MAA3B,EAAmC;AACjC,kBAAMzC,aAAa,GAAG,IAAI4D,GAAJ,EAAtB;;AADiC,yDAEf,KAAKb,IAFU;AAAA;;AAAA;AAEjC,oEAA6B;AAAA,sBAAlB1L,GAAkB;;AAC3B,sBAAI,KAAK6L,cAAL,CAAoB7L,GAApB,CAAJ,EAA8B;AAC5B2I,iCAAa,CAAC6D,GAAd,CAAkBxM,GAAlB;AACD;AACF;AANgC;AAAA;AAAA;AAAA;AAAA;;AAQjC,mBAAKoI,eAAL,CAAqBqE,SAArB,CAA+B;AAC7Bf,oBAAI,EAAE,KAAKA,IADkB;AAE7BtL,yBAAS,EAAE,KAAKA,SAFa;AAG7BsM,+BAAe,EAAE,KAAK9D,kBAHO;AAI7B+D,+BAAe,EAAE,KAAKrD,UAAL,IAAmB,KAAK6C,cAJZ;AAK7BvC,wBAAQ,EAAE,KAAKA,QALc;AAM7BnB,0BAAU,EAAE,KAAKA,UANY;AAO7BE,6BAAa,EAAbA;AAP6B,eAA/B;AASD;AACF;AAED;;;;;;iBAGA,oCAAwB;AACtB;AACA;AACA;AACA,gBAAMiE,qBAAqB,GAAG,KAAKpE,OAAL,CAAaqC,KAA3C;;AAEA,gBAAI,KAAKvB,UAAL,IAAmB,KAAKC,cAA5B,EAA4C;AAC1C,kBAAMsD,YAAY,GAAG,KAAKzE,eAAL,CAAqByB,KAArB,CAA2B+C,qBAAqB,GAAG,CAAnD,CAArB;AACA,qBAAOC,YAAY,IAAI,KAAKtE,OAArB,GAA+BqE,qBAAqB,GAAG,CAAvD,GAA2DA,qBAAlE;AACD;;AAED,mBAAOA,qBAAP;AACD;AAED;;;;;;;;;iBAMA,4BAAmB5M,GAAnB,EAA2B;AACzB;AACA,gBAAM4M,qBAAqB,GAAG,KAAKE,wBAAL,EAA9B;AACA,gBAAMC,cAAc,GAAG,KAAKC,iBAAL,CAAuBhN,GAAvB,EAA4B,KAAK2I,aAAjC,CAAvB;AACA,gBAAMzH,QAAQ,GAAG6L,cAAc,GAAG,CAAC,CAAnC,CAJyB,CAMzB;;AACA,gBAAI,KAAKzD,UAAL,IAAmB,KAAKC,cAA5B,EAA4C;AAC1C,kBAAMmD,eAAe,GAAG,KAAK9D,kBAAL,CAAwB5I,GAAxB,KAAgCkB,QAAQ,GAAG,CAAC,CAAJ,GAAQ,CAAhD,CAAxB,CAD0C,CAE1C;;AACA,kBAAM6H,GAAG,GAAG,KAAKC,WAAL,CAAiBhJ,GAAjB,CAAZ;AACA,mBAAKoI,eAAL,CAAqB6E,MAArB,CAA4BlE,GAA5B,EAAiC2D,eAAjC;AACD,aAZwB,CAczB;;;AACA,gBAAIxL,QAAJ,EAAc;AACZ,mBAAKyH,aAAL,CAAmBuE,MAAnB,CAA0BH,cAA1B,EAA0C,CAA1C;AACD,aAFD,MAEO;AACL,mBAAKpE,aAAL,CAAmBwE,IAAnB,CAAwBnN,GAAxB;AACD;;AAED,iBAAKmI,YAAL,CAAkBrI,IAAlB,CAAuB;AACrB4L,kBAAI,EAAE,CAAC1L,GAAD,CADe;AAErBoN,0BAAY,EAAER;AAFO,aAAvB;AAID;AAED;;;;;;iBAGA,uBAAc1L,QAAd,EAA+B;AAC7B;AACA,iBAAKyH,aAAL,GAAqB,EAArB,CAF6B,CAI7B;;AACA,gBAAMiE,qBAAqB,GAAG,KAAKE,wBAAL,EAA9B;;AAEA,gBAAI5L,QAAJ,EAAc;AAAA,0DACM,KAAKwK,IADX;AAAA;;AAAA;AACZ,uEAA6B;AAAA,sBAAlB1L,GAAkB;AAC3B,uBAAK2I,aAAL,CAAmBwE,IAAnB,CAAwBnN,GAAxB;AACD;AAHW;AAAA;AAAA;AAAA;AAAA;AAIb;;AAED,gBAAI,KAAKsJ,UAAT,EAAqB;AACnB;AACA,mBAAKH,YAAL;AACD,aAhB4B,CAkB7B;;;AACA,iBAAKhB,YAAL,CAAkBrI,IAAlB,CAAuB;AACrB4L,kBAAI,EAAE,KAAKA,IADU;AAErB0B,0BAAY,EAAER;AAFO,aAAvB;AAID;AAED;;;;;;iBAGA,wBAAY;AACV,iBAAKS,qBAAL;AACA,iBAAKnD,aAAL;AACA,iBAAKC,UAAL;AACD;AAED;;;;;;iBAGA,0BAAiBxD,KAAjB,EAAgCxG,MAAhC,EAA2C;AACzC,mBAAOA,MAAM,CAAC0G,IAAd;AACD;AAED;;;;;;iBAGA,uBAAc5G,KAAd,EAA6B;AAC3B,gBAAM8G,MAAM,GAAG,KAAKR,iBAApB;AACA,gBAAMhB,OAAO,GAAG,KAAKA,OAArB;AAEA,gBAAMD,MAAM,GAAG;AACbrD,mBAAK,YAAK8E,MAAM,CAAC9G,KAAD,CAAX;AADQ,aAAf;;AAIA,gBAAIA,KAAK,KAAK,MAAd,EAAsB;AACpB,gEAAA+G,WAAA,EAAY1B,MAAZ,EAAoBC,OAApB,EAA6B,CAA7B;AACD,aAFD,MAEO,IAAItF,KAAK,KAAK,OAAd,EAAuB;AAC5B,kBAAMgH,SAAS,GAAGC,QAAQ,CAAC,KAAK1B,UAAL,GAAkB,EAAnB,EAAuB,CAAvB,CAA1B;AACA,kBAAM2B,SAAS,GAAGJ,MAAM,CAACK,KAAP,GAAeH,SAAjC;AACA,kBAAMI,UAAU,GAAGF,SAAS,GAAG5B,OAA/B;AACA,kBAAM+B,MAAM,GAAGD,UAAU,GAAG,CAAC,CAA7B;AACA,gEAAAL,WAAA,EAAY1B,MAAZ,EAAoBgC,MAApB,EAA4B,CAA5B;AACD;;AAED,mBAAOhC,MAAP;AACD;AAED;;;;;;iBAGA,wBAAetF,GAAf,EAAuB;AACrB,gBAAI,KAAK2I,aAAL,CAAmByC,MAAnB,KAA8B,CAA9B,IAAmC,KAAKkC,qBAA5C,EAAmE;AAAA,0DAC7C,KAAKpC,WADwC;AAAA;;AAAA;AACjE,uEAAsC;AAAA,sBAA3BjL,KAA2B;AACpC,uBAAK0I,aAAL,CAAmBwE,IAAnB,CAAwBlN,KAAxB;AACD;AAHgE;AAAA;AAAA;AAAA;AAAA;AAIlE;;AAED,mBAAO,KAAK+M,iBAAL,CAAuBhN,GAAvB,EAA4B,KAAK2I,aAAjC,IAAkD,CAAC,CAA1D;AACD;;;iBAED,2BAAkB3I,GAAlB,EAA4BkB,QAA5B,EAA2C;AAAA;;AACzC,gBAAI,CAACA,QAAD,IAAa,CAACA,QAAQ,CAACkK,MAA3B,EAAmC,OAAO,CAAC,CAAR;AAEnC,gBAAMmC,KAAK,GAAG,KAAKC,WAAL,CAAiBxN,GAAjB,CAAd;AACA,mBAAOkB,QAAQ,CAACuM,SAAT,CAAmB,UAAAC,CAAC,EAAI;AAC7B,kBAAM1O,EAAE,GAAG,MAAI,CAACwO,WAAL,CAAiBE,CAAjB,CAAX;;AACA,qBAAO1O,EAAE,KAAKuO,KAAd;AACD,aAHM,CAAP;AAID;AAED;;;;;;iBAGA,qBAAYvN,GAAZ,EAAoB;AAClB,mBAAO,KAAKyI,UAAL,CAAgBkF,GAAhB,CAAoB3N,GAApB,KAA4B,CAAnC;AACD;;;iBAED,sBAAaA,GAAb,EAAuB;AACrB,iBAAKR,UAAL,CAAgBM,IAAhB,CAAqB;AAAEE,iBAAG,EAAHA;AAAF,aAArB;AACD;;;;;;;yBApqBU8H,uB,EAAsB,6H;AAAA,O;;;cAAtBA,uB;AAAsB,uC;AAAA;AAAA;sEAyGtB,iDAAA8F,iB,EAAiB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA/M1B;;AACA;;AAQE;AAAA,qBAAU,IAAA1F,MAAA,aAAV;AAA6B,aAA7B,EAA8B,UAA9B,EAA8B;AAAA,qBAClB,IAAA5I,QAAA,aADkB;AACG,aADjC;;AAGA;;AAkFA;;AACF;;;;AA/FqB;;AAGnB;;AAAA,+FAAqB,MAArB,EAAqB,QAArB,EAAqB,aAArB,EAAqB,eAArB,EAAqB,eAArB,EAAqB,iBAArB,EAAqB,eAArB,EAAqB,iBAArB,EAAqB,aAArB,EAAqB,eAArB;;AAUG;;AAAA;;AAiFqB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtGjBuO,qB;;;;;yBAAAA,qB;AAAoB,O;;;cAApBA,qB;AAAoB,2C;AAAA,gB;AAAA,e;AAAA,6F;AAAA;AAAA;AAR7B;;AACE;;AACE;;AACF;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCeSD,kB;AAwBX,oCAAoBE,MAApB,EAAoC1O,OAApC,EAAiE2O,QAAjE,EAAsF;AAAA;;AAAlE,eAAAD,MAAA,GAAAA,MAAA;AAA6C,eAAAC,QAAA,GAAAA,QAAA;AAvBxD,eAAAzE,UAAA,GAAsB,KAAtB;AACA,eAAAG,UAAA,GAAsB,KAAtB;AAUC,eAAAzB,MAAA,GAA4B,IAAI,2CAAAzI,YAAJ,EAA5B;AAEV,eAAAkL,UAAA,GAAqB,CAArB;AACA,eAAAC,UAAA,GAAqB,CAArB;AACA,eAAAsD,cAAA,GAAyB,CAAzB;AACA,eAAAC,cAAA,GAAyB,CAAzB;AAKQ,eAAAC,oBAAA,GAA4B,IAA5B;AAGN,eAAK9O,OAAL,GAAeA,OAAO,CAACsB,aAAvB;AACD;;;;iBAED,oBAAQ;AACN;AACA,gBAAI,KAAK4I,UAAL,IAAmB,KAAKG,UAA5B,EAAwC;AACtC,kBAAMsE,QAAQ,GAAG,KAAKA,QAAtB;AACA,mBAAKI,aAAL,GAAqBJ,QAAQ,CAACK,UAAT,CAAoBL,QAAQ,CAACK,UAAT,CAAoB,KAAKhP,OAAzB,CAApB,CAArB;AACA,mBAAK8O,oBAAL,GAA4B,KAAKG,UAAL,CAAgBzO,IAAhB,CAAqB,IAArB,CAA5B;AACA,mBAAKuO,aAAL,CAAmBG,gBAAnB,CAAoC,QAApC,EAA8C,KAAKJ,oBAAnD;AACD;AACF;;;iBAED,uBAAW;AACT,gBAAI,KAAKA,oBAAT,EAA+B;AAC7B,mBAAKC,aAAL,CAAmBI,mBAAnB,CAAuC,QAAvC,EAAiD,KAAKL,oBAAtD;AACA,mBAAKA,oBAAL,GAA4B,IAA5B;AACD;AACF;;;iBAED,mBAAU3F,OAAV,EAAyB;AACvB,gBAAI,KAAK4F,aAAT,EAAwB;AACtB,mBAAKA,aAAL,CAAmBK,SAAnB,GAA+BjG,OAA/B;AACD;AACF;;;iBAED,oBAAWvF,KAAX,EAA4B;AAAA;;AAC1B,gBAAMyL,GAAG,GAAqBzL,KAAK,CAAC0L,aAApC;AACAC,iCAAqB,CAAC,YAAM;AAC1B,oBAAI,CAAClE,UAAL,GAAkBgE,GAAG,CAACD,SAAtB;AACA,oBAAI,CAAC9D,UAAL,GAAkB+D,GAAG,CAACG,UAAtB;;AACA,oBAAI,CAACC,YAAL;AACD,aAJoB,CAArB;AAKD;;;iBAED,wBAAY;AACV,gBAAIjE,SAAJ;;AACA,gBAAI,KAAKH,UAAL,GAAkB,KAAKuD,cAA3B,EAA2C;AACzCpD,uBAAS,GAAG,MAAZ;AACD,aAFD,MAEO,IAAI,KAAKH,UAAL,GAAkB,KAAKuD,cAA3B,EAA2C;AAChDpD,uBAAS,GAAG,IAAZ;AACD;;AAED,iBAAK5C,MAAL,CAAYlI,IAAZ,CAAiB;AACf8K,uBAAS,EAATA,SADe;AAEfH,wBAAU,EAAE,KAAKA,UAFF;AAGfC,wBAAU,EAAE,KAAKA;AAHF,aAAjB;AAMA,iBAAKsD,cAAL,GAAsB,KAAKvD,UAA3B;AACA,iBAAKwD,cAAL,GAAsB,KAAKvD,UAA3B;AACD;;;;;;;yBA5EUkD,kB,EAAiB,kH,EAAA,sH,EAAA,qH;AAAA,O;;;cAAjBA,kB;AAAiB,2C;AAAA,0C;AAAA,mB;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;AANhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCDkB,4B;AALb;AAAA;;AAaY,eAAAxP,QAAA,GAA8B,IAAI,2CAAAC,YAAJ,EAA9B;AACA,eAAA2I,MAAA,GAA4B,IAAI,2CAAA3I,YAAJ,EAA5B;AA2HX;;;;iBAvHC,mBAAUyD,KAAV,EAA6C2D,KAA7C,EAA4D3G,GAA5D,EAAoE;AAAA;;AAClE,gBAAI,CAAC,KAAK+O,aAAV,EAAyB;AAEzB,gBAAMC,MAAM,GAAG,KAAKrF,aAAL,KAAuB,mDAAAsF,aAAA,SAAtC;AACA,gBAAMC,KAAK,GAAG,KAAKvF,aAAL,KAAuB,mDAAAsF,aAAA,MAArC;AACA,gBAAME,UAAU,GAAG,KAAKxF,aAAL,KAAuB,mDAAAsF,aAAA,WAA1C;AACA,gBAAIlH,QAAQ,GAAU,EAAtB;;AAEA,gBAAImH,KAAK,IAAIF,MAAT,IAAmBG,UAAvB,EAAmC;AACjC,kBAAInM,KAAK,CAACoM,QAAV,EAAoB;AAClBrH,wBAAQ,GAAG,kDAAAsH,iBAAA,EAAkB,EAAlB,EAAsB,KAAK3D,IAA3B,EAAiC/E,KAAjC,EAAwC,KAAK2I,SAA7C,EAAwD,KAAKC,iBAAL,CAAuB3P,IAAvB,CAA4B,IAA5B,CAAxD,CAAX;AACD,eAFD,MAEO,IAAIoD,KAAK,CAACwM,OAAN,IAAiBxM,KAAK,CAACyM,OAAvB,IAAkCN,UAAlC,IAAgDH,MAApD,EAA4D;AACjEjH,wBAAQ,GAAG,kDAAA2H,UAAA,qBAAe,KAAK3H,QAApB,GAA+B/H,GAA/B,EAAoC,KAAKuP,iBAAL,CAAuB3P,IAAvB,CAA4B,IAA5B,CAApC,CAAX;AACD,eAFM,MAEA;AACLmI,wBAAQ,GAAG,kDAAA2H,UAAA,EAAW,EAAX,EAAe1P,GAAf,EAAoB,KAAKuP,iBAAL,CAAuB3P,IAAvB,CAA4B,IAA5B,CAApB,CAAX;AACD;AACF,aARD,MAQO;AACLmI,sBAAQ,GAAG,kDAAA2H,UAAA,EAAW,EAAX,EAAe1P,GAAf,EAAoB,KAAKuP,iBAAL,CAAuB3P,IAAvB,CAA4B,IAA5B,CAApB,CAAX;AACD;;AAED,gBAAI,OAAO,KAAK+P,WAAZ,KAA4B,UAAhC,EAA4C;AAC1C5H,sBAAQ,GAAGA,QAAQ,CAAC6H,MAAT,CAAgB,KAAKD,WAAL,CAAiB/P,IAAjB,CAAsB,IAAtB,CAAhB,CAAX;AACD;;AAED,iBAAKmI,QAAL,CAAcmF,MAAd,CAAqB,CAArB,EAAwB,KAAKnF,QAAL,CAAcqD,MAAtC;;AACA,mCAAKrD,QAAL,EAAcoF,IAAd,0CAAsBpF,QAAtB;;AAEA,iBAAKuH,SAAL,GAAiB3I,KAAjB;AAEA,iBAAKuB,MAAL,CAAYpI,IAAZ,CAAiB;AACfiI,sBAAQ,EAARA;AADe,aAAjB;AAGD;;;iBAED,oBAAW8H,KAAX,EAAyBlJ,KAAzB,EAAsC;AACpC,gBAAQ1D,IAAR,GAA6B4M,KAA7B,CAAQ5M,IAAR;AAAA,gBAAcD,KAAd,GAA6B6M,KAA7B,CAAc7M,KAAd;AAAA,gBAAqBhD,GAArB,GAA6B6P,KAA7B,CAAqB7P,GAArB;AACA,gBAAMgP,MAAM,GAAG,KAAKrF,aAAL,KAAuB,mDAAAsF,aAAA,SAAtC;AACA,gBAAM/G,MAAM,GAAI,CAAC8G,MAAD,KAAY/L,IAAI,KAAK,OAAT,IAAoBA,IAAI,KAAK,UAAzC,CAAD,IAA2D+L,MAAM,IAAI/L,IAAI,KAAK,UAA7F;;AAEA,gBAAIiF,MAAJ,EAAY;AACV,mBAAK4H,SAAL,CAAe9M,KAAf,EAAsB2D,KAAtB,EAA6B3G,GAA7B;AACD,aAFD,MAEO,IAAIiD,IAAI,KAAK,SAAb,EAAwB;AAC7B,kBAAoBD,KAAM,CAACG,OAAP,KAAmB,yCAAAI,IAAA,UAAvC,EAAoD;AAClD,qBAAKuM,SAAL,CAAe9M,KAAf,EAAsB2D,KAAtB,EAA6B3G,GAA7B;AACD,eAFD,MAEO;AACL,qBAAK+P,eAAL,CAAqBF,KAArB;AACD;AACF;;AACD,iBAAKvQ,QAAL,CAAcQ,IAAd,CAAmB+P,KAAnB;AACD;;;iBAED,yBAAgBA,KAAhB,EAA4B;AAC1B,gBAAQ1M,OAAR,GAAmC0M,KAAK,CAAC7M,KAAzC,CAAQG,OAAR;AACA,gBAAM6M,WAAW,GAAG7M,OAAO,KAAK,yCAAAI,IAAA,GAAZ,IAAuBJ,OAAO,KAAK,yCAAAI,IAAA,KAAnC,IAAgDJ,OAAO,KAAK,yCAAAI,IAAA,MAA5D,IAA0EJ,OAAO,KAAK,yCAAAI,IAAA,KAA1G;;AAEA,gBAAIyM,WAAJ,EAAiB;AACf,kBAAMC,eAAe,GAAG,KAAKtG,aAAL,KAAuB,mDAAAsF,aAAA,KAA/C;;AAEA,kBAAI,CAACY,KAAK,CAAC3M,WAAP,IAAsB,CAAC+M,eAA3B,EAA4C;AAC1C,qBAAKC,QAAL,CAAcL,KAAK,CAACrI,UAApB,EAAgCrE,OAAhC;AACD,eAFD,MAEO,IAAI8M,eAAJ,EAAqB;AAC1B,qBAAKE,SAAL,CAAeN,KAAK,CAAC3M,WAArB,EAAkC2M,KAAK,CAACrI,UAAxC,EAAoDrE,OAApD,EAA6D0M,KAAK,CAACtI,SAAnE;AACD;AACF;AACF;;;iBAED,kBAASC,UAAT,EAA0BrE,OAA1B,EAAyC;AACvC,gBAAMiN,cAAc,GAAG,KAAKC,cAAL,CAAoB7I,UAApB,EAAgCrE,OAAhC,CAAvB;AACA,gBAAIiN,cAAJ,EAAoBA,cAAc,CAACE,KAAf;AACrB;;;iBAED,wBAAe9I,UAAf,EAAgCrE,OAAhC,EAA+C;AAC7C,gBAAMgL,aAAa,GAAG3G,UAAU,CAAC2G,aAAjC;;AAEA,gBAAIA,aAAJ,EAAmB;AACjB,kBAAIoC,YAAJ;;AACA,kBAAIpN,OAAO,KAAK,yCAAAI,IAAA,GAAhB,EAAyB;AACvBgN,4BAAY,GAAGpC,aAAa,CAACqC,sBAA7B;AACD,eAFD,MAEO,IAAIrN,OAAO,KAAK,yCAAAI,IAAA,KAAhB,EAA2B;AAChCgN,4BAAY,GAAGpC,aAAa,CAACsC,kBAA7B;AACD;;AAED,kBAAIF,YAAY,IAAIA,YAAY,CAACG,QAAb,CAAsBtF,MAA1C,EAAkD;AAChD,uBAAOmF,YAAY,CAACG,QAAb,CAAsB,CAAtB,CAAP;AACD;AACF;AACF;;;iBAED,mBAAUxN,WAAV,EAA4BsE,UAA5B,EAA6CrE,OAA7C,EAA8DoE,SAA9D,EAA+E;AAC7E,gBAAIoJ,eAAJ;;AAEA,gBAAIxN,OAAO,KAAK,yCAAAI,IAAA,KAAhB,EAA2B;AACzBoN,6BAAe,GAAGzN,WAAW,CAACsN,sBAA9B;AACD,aAFD,MAEO,IAAIrN,OAAO,KAAK,yCAAAI,IAAA,MAAhB,EAA4B;AACjCoN,6BAAe,GAAGzN,WAAW,CAACuN,kBAA9B;AACD,aAFM,MAEA,IAAItN,OAAO,KAAK,yCAAAI,IAAA,GAAZ,IAAuBJ,OAAO,KAAK,yCAAAI,IAAA,KAAvC,EAAkD;AACvD,kBAAM6M,cAAc,GAAG,KAAKC,cAAL,CAAoB7I,UAApB,EAAgCrE,OAAhC,CAAvB;;AACA,kBAAIiN,cAAJ,EAAoB;AAClB,oBAAMM,QAAQ,GAAGN,cAAc,CAACQ,sBAAf,CAAsC,qBAAtC,CAAjB;AACA,oBAAIF,QAAQ,CAACtF,MAAb,EAAqBuF,eAAe,GAAGD,QAAQ,CAACnJ,SAAD,CAA1B;AACtB;AACF;;AAED,gBAAIoJ,eAAJ,EAAqBA,eAAe,CAACL,KAAhB;AACtB;;;iBAED,wBAAetQ,GAAf,EAAuB;AACrB,mBAAO,KAAKuP,iBAAL,CAAuBvP,GAAvB,EAA4B,KAAK+H,QAAjC,IAA6C,CAAC,CAArD;AACD;;;iBAED,2BAAkB/H,GAAlB,EAA4B+H,QAA5B,EAA2C;AAAA;;AACzC,gBAAI,CAACA,QAAD,IAAa,CAACA,QAAQ,CAACqD,MAA3B,EAAmC,OAAO,CAAC,CAAR;AAEnC,gBAAMmC,KAAK,GAAG,KAAKC,WAAL,CAAiBxN,GAAjB,CAAd;AACA,mBAAO+H,QAAQ,CAAC0F,SAAT,CAAmB,UAAAC,CAAC,EAAI;AAC7B,kBAAM1O,EAAE,GAAG,MAAI,CAACwO,WAAL,CAAiBE,CAAjB,CAAX;;AACA,qBAAO1O,EAAE,KAAKuO,KAAd;AACD,aAHM,CAAP;AAID;;;;;;;yBAnIUuB,4B;AAA2B,O;;;cAA3BA,4B;AAA2B,4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA;AAAA,S;AAAA,+B;AAAA,gB;AAAA,e;AAAA;AAAA;;;AAH1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcV;;;;;;AAGE,oGAAyB,SAAzB,EAAyB,cAAzB,EAAyB,SAAzB,EAAyB,uBAAzB,EAAyB,WAAzB,EAAyB,gBAAzB,EAAyB,KAAzB,EAAyB,iBAAzB,EAAyB,UAAzB,EAAyB,EAAzB;;;;AAvBN,eAAS+B,cAAT,CAAwBC,KAAxB,EAAoC;AAClC,YAAMC,eAAe,GAAGD,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,iBAAI,CAAC,CAACA,IAAN;AAAA,SAAjB,CAAxB;;AAEA,YAAI,CAACD,eAAe,CAAC3F,MAArB,EAA6B;AAC3B,iBAAO,IAAP;AACD;;AACD,YAAI2F,eAAe,CAACE,IAAhB,CAAqB,UAAAD,IAAI;AAAA,iBAAI,OAAOA,IAAP,KAAgB,QAApB;AAAA,SAAzB,CAAJ,EAA4D;AAC1D,iBAAO,IAAP;AACD;;AAED,eAAOD,eAAe,CAACG,MAAhB,CAAuB,UAACtP,GAAD,EAAMoP,IAAN;AAAA,iBAAepP,GAAG,GAAGoP,IAArB;AAAA,SAAvB,CAAP;AACD;;AAED,eAASG,WAAT,CAAqBL,KAArB,EAAiC;AAC/B,eAAO,IAAP;AACD;;UAqBYM,6B;AAnBb;AAAA;;AA4BE,eAAAC,UAAA,GAAkB,EAAlB;AAyCD;;;;iBAvCC,uBAAc;AACZ,gBAAI,CAAC,KAAK3J,OAAN,IAAiB,CAAC,KAAKgE,IAA3B,EAAiC;AAC/B;AACD;;AACD,iBAAK4F,qBAAL;AACA,iBAAKC,YAAL;AACD;;;iBAEO,iCAAwB;AAC9B,iBAAKC,gBAAL,GAAwB,KAAK9J,OAAL,CAAa+J,GAAb,CAAiB,UAAAC,GAAG;AAAA,qBAAK,MAAD,OAAC,CAAD,kBAC3CA,GAD2C,CAAC,EACzC;AACNpP,4BAAY,EAAEoP,GAAG,CAACC;AADZ,eADyC,CAAL;AAAA,aAApB,CAAxB;AAID;;;iBAEO,wBAAe;AAAA;;AACrB,iBAAKN,UAAL,GAAkB,EAAlB;AAEA,iBAAK3J,OAAL,CACGkI,MADH,CACU,UAAA8B,GAAG;AAAA,qBAAI,CAACA,GAAG,CAACC,eAAT;AAAA,aADb,EAEGrG,OAFH,CAEW,UAAAoG,GAAG,EAAI;AACd,kBAAME,qBAAqB,GAAG,MAAI,CAAClG,IAAL,CAAU+F,GAAV,CAAc,UAAAzR,GAAG;AAAA,uBAAIA,GAAG,CAAC0R,GAAG,CAACjP,IAAL,CAAP;AAAA,eAAjB,CAA9B;;AACA,kBAAMoP,OAAO,GAAG,MAAI,CAACC,kBAAL,CAAwBJ,GAAxB,CAAhB;;AAEA,oBAAI,CAACL,UAAL,CAAgBK,GAAG,CAACjP,IAApB,IAA4BiP,GAAG,CAAC/O,IAAJ,GACxB+O,GAAG,CAAC/O,IAAJ,CAASC,SAAT,CAAmBiP,OAAO,CAACD,qBAAD,CAA1B,CADwB,GAExBC,OAAO,CAACD,qBAAD,CAFX;AAGD,aATH;AAUD;;;iBAEO,4BAAmBzR,MAAnB,EAAyC;AAC/C,gBAAIA,MAAM,CAAC4R,WAAP,KAAuBlP,SAA3B,EAAsC;AACpC,qBAAOgO,cAAP;AACD,aAFD,MAEO,IAAI1Q,MAAM,CAAC4R,WAAP,KAAuB,IAA3B,EAAiC;AACtC,qBAAOZ,WAAP;AACD,aAFM,MAEA;AACL,qBAAOhR,MAAM,CAAC4R,WAAd;AACD;AACF;;;;;;;yBAjDUX,6B;AAA4B,O;;;cAA5BA,6B;AAA4B,8C;AAAA,+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,gB;AAAA,e;AAAA,iN;AAAA;AAAA;AAhBrC;;;;AACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC5BMY,6B,GACX,uCAAmBzN,QAAnB,EAA+C;AAAA;;AAA5B,aAAAA,QAAA,GAAAA,QAAA;AAA8B,O;;;yBADtCyN,6B,EAA4B,uH;AAAA,O;;;cAA5BA,6B;AAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCA5BC,+B,GACX,yCAAmB1N,QAAnB,EAA+C;AAAA;;AAA5B,aAAAA,QAAA,GAAAA,QAAA;AAA8B,O;;;yBADtC0N,+B,EAA8B,uH;AAAA,O;;;cAA9BA,+B;AAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCK9BC,yB;AAwDX,2CAAoBC,oBAApB,EAAgE;AAAA;;AAA5C,eAAAA,oBAAA,GAAAA,oBAAA;AAFZ,eAAAC,aAAA,GAAgB,IAAhB;AAE0D;;;;eA1BlE,eAAgB;AACd,mBAAO,KAAKC,kBAAL,IAA2B,KAAKC,kBAAvC;AACD;;;eAQD,eAAkB;AAChB,mBAAO,KAAKC,oBAAL,IAA6B,KAAKC,oBAAzC;AACD;;;eAQD,eAAsB;AACpB,mBAAO,KAAKC,wBAAL,IAAiC,KAAKC,wBAA7C;AACD;;;iBAMD,uBAAc;AACZ,gBAAI,KAAKN,aAAT,EAAwB;AACtB,mBAAKA,aAAL,GAAqB,KAArB;AACD,aAFD,MAEO;AACL,mBAAKD,oBAAL,CAA0BQ,aAA1B;AACD;AACF;;;;;;;yBAhEUT,yB,EAAwB,mJ;AAAA,O;;;cAAxBA,yB;AAAwB,6C;AAAA;AAAA;mFA2BrB,oDAAAF,4B,EAA8B,C,EAAQ,2CAAApN,W;;mFAUtC,sDAAAqN,8B,EAAgC,C,EAAQ,2CAAArN,W;;mFAUxC,6CAAAgO,6B,EAA+B,C,EAAQ,2CAAAhO,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCpD1CgO,8B,GACX,wCAAmBrO,QAAnB,EAA+C;AAAA;;AAA5B,aAAAA,QAAA,GAAAA,QAAA;AAA8B,O;;;yBADtCqO,8B,EAA6B,uH;AAAA,O;;;cAA7BA,8B;AAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFxC;;AAkBE;AAAA;;AAAA;;AAAA;AAAA,aAA6B,QAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,WAA7B,EAA6B,SAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,WAA7B,EAA6B,QAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,WAA7B,EAA6B,mBAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,WAA7B;;;;AAMF;;;;;;AArBE,2FAAe,UAAf,EAAe,eAAf,EAAe,YAAf,EAAe,iBAAf,EAAe,YAAf,EAAe,kBAAf,EAAe,SAAf,EAAe,kFAAf,EAAe,gBAAf,EAAe,gCAAf,EAAe,SAAf,EAAe,uBAAf,EAAe,cAAf,EAAe,mBAAf,EAAe,aAAf,EAAe,kBAAf,EAAe,sBAAf,EAAe,2BAAf,EAAe,mBAAf,EAAe,+BAAf,EAAe,oBAAf,EAAe,gCAAf,EAAe,eAAf,EAAe,2BAAf,EAAe,iBAAf,EAAe,sBAAf,EAAe,eAAf,EAAe,oBAAf;;;;;;;;AA8DF;;AAcE;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;;;;;AAdE,iGAAqB,UAArB,EAAqB,eAArB,EAAqB,QAArB,EAAqB,aAArB,EAAqB,cAArB,EAAqB,mBAArB,EAAqB,gBAArB,EAAqB,aAArB,EAAqB,cAArB,EAAqB,4BAArB,EAAqB,oBAArB,EAAqB,gCAArB,EAAqB,qBAArB,EAAqB,iCAArB,EAAqB,mBAArB,EAAqB,+BAArB,EAAqB,eAArB,EAAqB,sBAArB,EAAqB,iBAArB,EAAqB,yDAArB,EAAqB,eAArB,EAAqB,2BAArB;;;;UCVSC,mB;AAokBX,qCACsBnN,eADtB,EAEsBoN,gBAFtB,EAGUzT,EAHV,EAIED,OAJF,EAKE0F,OALF,EAMUqN,oBANV,EAO+CY,aAP/C,EAOiF;AAAA;;AAAA;;AAN3D,eAAArN,eAAA,GAAAA,eAAA;AACA,eAAAoN,gBAAA,GAAAA,gBAAA;AACZ,eAAAzT,EAAA,GAAAA,EAAA;AAGA,eAAA8S,oBAAA,GAAAA,oBAAA;AACqC,eAAAY,aAAA,GAAAA,aAAA;AAve/C;;;;;;AAKS,eAAAhL,QAAA,GAAkB,EAAlB;AAET;;;;AAGS,eAAAuB,UAAA,GAAsB,KAAtB;AAET;;;;AAGS,eAAAG,UAAA,GAAsB,KAAtB;AAET;;;;;AAIS,eAAArJ,SAAA,GAAuD,EAAvD;AAET;;;;;AAIS,eAAA4S,UAAA,GAAmD,qDAAAC,UAAA,SAAnD;AAET;;;;;AAIS,eAAAC,YAAA,GAAuB,EAAvB;AAET;;;;;AAIS,eAAAC,YAAA,GAAuB,CAAvB;AAET;;;;;AAIS,eAAAhH,cAAA,GAA0B,KAA1B;AAET;;;;;AAIS,eAAAiH,eAAA,GAA2B,KAA3B;AAiDT;;;;;AAIS,eAAAnH,gBAAA,GAA4B,KAA5B;AAgBT;;;;;AAIS,eAAAoH,WAAA,GAAuB,IAAvB;AAET;;;;;AAIS,eAAAC,WAAA,GAAuB,IAAvB;AAET;;;;AAGS,eAAAC,QAAA,GAAqB,8CAAAC,QAAA,OAArB;AAET;;;;;AAIS,eAAA9P,KAAA,GAAe,EAAf;AAET;;;;AAGS,eAAA+P,UAAA,GAAkB;AACzBC,yBAAa,EAAE,mBADU;AAEzBC,0BAAc,EAAE,qBAFS;AAGzBC,qBAAS,EAAE,2BAHc;AAIzBC,0BAAc,EAAE,qBAJS;AAKzBC,2BAAe,EAAE,sBALQ;AAMzBC,yBAAa,EAAE,qBANU;AAOzBC,qBAAS,EAAE;AAPc,WAAlB;AAUT;;;;;;;;AAOS,eAAAC,QAAA,GAAgB;AACvB;AACA;AACAC,wBAAY,EAAE,oBAHS;AAKvB;AACAC,wBAAY,EAAE,OANS;AAQvB;AACAC,2BAAe,EAAE;AATM,WAAhB;AAyCT;;;;;;AAKS,eAAA9G,qBAAA,GAAiC,KAAjC;AAQT;;;;;;;AAMS,eAAA+G,mBAAA,GAAsB,KAAtB;AAET;;;;AAGS,eAAA9K,cAAA,GAA0B,IAA1B;AAYT;;;;AAGS,eAAA8H,UAAA,GAAsB,KAAtB;AAET;;;;AAGS,eAAAiD,aAAA,GAAwB,EAAxB;AAET;;;;AAGS,eAAAC,eAAA,GAA0B,KAA1B;AAET;;;;AAGU,eAAAvM,MAAA,GAA4B,IAAI,4CAAAzI,YAAJ,EAA5B;AAEV;;;;AAGU,eAAAD,QAAA,GAA8B,IAAI,4CAAAC,YAAJ,EAA9B;AAEV;;;;AAGU,eAAA2I,MAAA,GAA4B,IAAI,4CAAA3I,YAAJ,EAA5B;AAEV;;;;AAGU,eAAAoE,IAAA,GAA0B,IAAI,4CAAApE,YAAJ,EAA1B;AAEV;;;;AAGU,eAAA0I,IAAA,GAA0B,IAAI,4CAAA1I,YAAJ,EAA1B;AAEV;;;;AAGU,eAAAiV,OAAA,GAA6B,IAAI,4CAAAjV,YAAJ,EAA7B;AAEV;;;;AAGU,eAAAkV,MAAA,GAA4B,IAAI,4CAAAlV,YAAJ,EAA5B;AAEV;;;;;;AAKU,eAAAmV,gBAAA,GAAmB,IAAI,4CAAAnV,YAAJ,CAA6E,KAA7E,CAAnB;AAEV;;;;AAGU,eAAAC,UAAA,GAAgC,IAAI,4CAAAD,YAAJ,EAAhC;AAqKV,eAAAqK,QAAA,GAAmB,CAAnB;AAGA,eAAApD,QAAA,GAAW,IAAI,mCAAAmO,eAAJ,CAAoB,CAApB,CAAX;AAEA,eAAAC,MAAA,GAAiB,CAAjB;AACA,eAAAvL,OAAA,GAAkB,CAAlB;AAOA,eAAAwL,cAAA,GAAiC,EAAjC;AAuEA;;;;;;;AAMS,eAAArH,WAAA,GAA+B,UAACsH,CAAD,EAAY;AAClD,gBAAI,OAAI,CAACC,YAAT,EAAuB;AACrB;AACA;AACA,qBAAOD,CAAC,CAACE,GAAT;AACD,aAJD,MAIO;AACL,qBAAOF,CAAP;AACD;AACF,WARQ,CApEwE,CAE/E;;;AACA,eAAK1V,OAAL,GAAeA,OAAO,CAACsB,aAAvB;AACA,eAAKwE,SAAL,GAAiBJ,OAAO,CAAClB,IAAR,CAAa,EAAb,EAAiBuB,MAAjB,EAAjB,CAJ+E,CAM/E;;AACA,cAAI,KAAK4N,aAAL,IAAsB,KAAKA,aAAL,CAAmBkB,QAA7C,EAAuD;AACrD,iBAAKA,QAAL,GAAgB,MAAH,OAAG,CAAH,EAAG,EAAK,KAAKlB,aAAL,CAAmBkB,QAAxB,CAAhB;AACD;AACF;AA/kBD;;;;;;;;AAiCA;;;AAGA,yBAAQ;AACN,mBAAO,KAAK7K,KAAZ;AACD;AAED;;;;eArCA,aAAkBrI,GAAlB,EAA4B;AAC1B,iBAAKqI,KAAL,GAAarI,GAAb;;AAEA,gBAAIA,GAAJ,EAAS;AACP,mBAAKkU,aAAL,sBAAyBlU,GAAzB;AACD,aALyB,CAO1B;;;AACA,gBAAI,CAAC,KAAKqS,eAAV,EAA2B;AACzB,mBAAK8B,gBAAL;AACD,aAVyB,CAY1B;;;AACA,iBAAKD,aAAL,GAAqB,6CAAAE,kBAAA,EACnB,KAAKF,aADc,EAEnB,6CAAAG,qBAAA,EAAsB,KAAKC,gBAA3B,CAFmB,EAGnB,6CAAAD,qBAAA,EAAsB,KAAKE,cAA3B,CAHmB,CAArB,CAb0B,CAmB1B;;AACA,iBAAKC,WAAL;;AAEA,gBAAI,KAAKnM,KAAL,IAAc,KAAK2L,YAAvB,EAAqC;AACnC;AACA,mBAAK7J,WAAL,GAAmB,KAAKsK,YAAL,CAAkB,KAAKpM,KAAvB,EAA8B,KAAK2L,YAAnC,CAAnB;AACD;;AAED,iBAAK1V,EAAL,CAAQwB,YAAR;AACD;;;eAsBD,eAAkB;AAChB,mBAAO,KAAKkU,YAAZ;AACD;AAmBD;;;;eA/BA,aAAyBhU,GAAzB,EAAsC;AACpC,gBAAIA,GAAJ,EAAS;AACP,mBAAKgU,YAAL,GAAoBhU,GAApB;;AACA,kBAAI,KAAKqI,KAAL,IAAc,KAAK2L,YAAvB,EAAqC;AACnC;AACA,qBAAK7J,WAAL,GAAmB,KAAKsK,YAAL,CAAkB,KAAKpM,KAAvB,EAA8B,KAAK2L,YAAnC,CAAnB;AACD;AACF;AACF;;;;AAoCD;;;AAGA,yBAAW;AACT,mBAAO,KAAK/O,QAAZ;AACD;AAuDD;;;;;eAtEA,aAAqBjF,GAArB,EAAyC;AACvC,gBAAIA,GAAJ,EAAS;AACP,mBAAKyQ,gBAAL,sBAA4BzQ,GAA5B;AACA,oEAAA0U,iBAAA,EAAkB,KAAKjE,gBAAvB;AACA,mBAAKvL,kBAAL;AACD;;AAED,iBAAKD,QAAL,GAAgBjF,GAAhB;AACD;;;;AAyED;;;AAGA,yBAAS;AACP,mBAAO,KAAK2U,MAAZ;AACD;AAED;;;;;eAdA,aAAmB3U,GAAnB,EAA4C;AAC1C,iBAAK2U,MAAL,GAAc3U,GAAd,CAD0C,CAG1C;;AACA,iBAAKwU,WAAL;AACD;;;;AAoBD;;;AAGA,yBAAS;AACP,mBAAO,KAAKX,MAAZ;AACD;AAED;;;;;eAdA,aAAmB7T,GAAnB,EAAgC;AAC9B,iBAAK6T,MAAL,GAAc7T,GAAd,CAD8B,CAG9B;;AACA,iBAAKwU,WAAL;AACD;;;eAgBD,eAAU;AACR,mBAAOzK,IAAI,CAACsB,GAAL,CAAStB,IAAI,CAACuB,GAAL,CAAS,KAAKhD,OAAd,EAAuByB,IAAI,CAACC,IAAL,CAAU,KAAKnB,QAAL,GAAgB,KAAKW,QAA/B,IAA2C,CAAlE,CAAT,EAA+E,CAA/E,CAAP;AACD;AA4MD;;;;eAjNA,aAAoBxJ,GAApB,EAAiC;AAC/B,iBAAKsI,OAAL,GAAetI,GAAf;AACD;;;eAkND,eACiB;AACf,gBAAMmS,YAAY,GAAoB,KAAKA,YAA3C;AACA,mBAAO,OAAOA,YAAP,KAAwB,QAAxB,GAA2CA,YAAY,KAAK,MAA5D,GAAqE,IAA5E;AACD;AAED;;;;;;;eAIA,eACc;AACZ,mBAAO,KAAK9S,SAAL,KAAmB,MAA1B;AACD;AAED;;;;;;;eAIA,eACgB;AACd,mBAAO,KAAKkJ,UAAZ;AACD;AAED;;;;;;;eAIA,eACiB;AACf,mBAAO,KAAKC,cAAZ;AACD;AAED;;;;;;;eAIA,eACe;AACb,mBAAO,KAAKE,UAAZ;AACD;AAED;;;;;;eAGA,eACgB;AACd,mBAAO,KAAKE,aAAL,KAAuB9G,SAA9B;AACD;AAED;;;;;;eAGA,eACuB;AACrB,mBAAO,KAAK8G,aAAL,KAAuB,mDAAAsF,aAAA,SAA9B;AACD;AAED;;;;;;eAGA,eACmB;AACjB,mBAAO,KAAKtF,aAAL,KAAuB,mDAAAsF,aAAA,KAA9B;AACD;AAED;;;;;;eAGA,eACqB;AACnB,mBAAO,KAAKtF,aAAL,KAAuB,mDAAAsF,aAAA,OAA9B;AACD;AAED;;;;;;eAGA,eACoB;AAClB,mBAAO,KAAKtF,aAAL,KAAuB,mDAAAsF,aAAA,MAA9B;AACD;AAED;;;;;;eAGA,eACyB;AACvB,mBAAO,KAAKtF,aAAL,KAAuB,mDAAAsF,aAAA,WAA9B;AACD;AAED;;;;;;;;AAUA;;;AAGA,yBAAmB;AACjB,mBAAO,KAAK0G,gBAAZ;AACD;AAoCD;;;;eA/CA,aACoB5U,GADpB,EAC8D;AAC5D,iBAAK4U,gBAAL,GAAwB5U,GAAxB;AACA,iBAAK6U,gBAAL,CAAsB7U,GAAtB;AACD;;;eA8CD,eAAmB;AACjB,gBAAI8U,eAAe,GAAG,KAAKnK,IAAL,IAAa,KAAK3D,QAAlB,IAA8B,KAAKA,QAAL,CAAcqD,MAAd,KAAyB,KAAKM,IAAL,CAAUN,MAAvF;;AAEA,gBAAI,KAAK0K,aAAL,IAAsB,KAAKzB,mBAA/B,EAAoD;AAClD,kBAAM7L,OAAO,GAAG,KAAKsN,aAAL,CAAmBtN,OAAnC;AACA,kBAAMuN,UAAU,GAAGvN,OAAO,CAACyC,IAAR,GAAezC,OAAO,CAACqC,KAA1C;AACAgL,6BAAe,GAAG,KAAK9N,QAAL,CAAcqD,MAAd,KAAyB2K,UAA3C;AACD;;AAED,mBAAO,KAAKhO,QAAL,IAAiB,KAAK2D,IAAtB,IAA8B,KAAKA,IAAL,CAAUN,MAAV,KAAqB,CAAnD,IAAwDyK,eAA/D;AACD;AAwCD;;;;;;;iBAIA,oBAAQ;AACN;AACA;AACA;AACA,iBAAKN,WAAL;AACD;AAED;;;;;;;iBAIA,2BAAe;AAAA;;AACb,gBAAI,CAAC,KAAKnC,eAAV,EAA2B;AACzB,mBAAK8B,gBAAL;AACD,aAHY,CAKb;AACA;;;AACA,gBAAI,OAAOvG,qBAAP,KAAiC,WAArC,EAAkD;AAChD;AACD;;AAEDA,iCAAqB,CAAC,YAAM;AAC1B,qBAAI,CAAC4G,WAAL,GAD0B,CAG1B;;;AACA,kBAAI,OAAI,CAACpJ,cAAL,IAAuB,OAAI,CAAC7C,UAAhC,EAA4C;AAC1C,uBAAI,CAACrB,IAAL,CAAUnI,IAAV,CAAe;AACbkW,uBAAK,EAAE,OAAI,CAACA,KADC;AAEbzL,0BAAQ,EAAE,OAAI,CAACA,QAFF;AAGb0L,uBAAK,EAAE,OAAI,CAACA,KAHC;AAIb3O,wBAAM,EAAE;AAJK,iBAAf;AAMD;AACF,aAZoB,CAArB;AAaD;AAED;;;;;;;iBAIA,8BAAqB;AAAA;;AACnB,iBAAK4O,eAAL,CAAqBC,OAArB,CAA6BpM,SAA7B,CAAuC,UAAAqM,CAAC;AAAA,qBAAI,OAAI,CAACR,gBAAL,CAAsBQ,CAAtB,CAAJ;AAAA,aAAxC;AACA,iBAAKC,2BAAL;AACD;AAkBD;;;;;;iBAGA,0BAAiBtV,GAAjB,EAA2B;AACzB,gBAAIA,GAAJ,EAAS;AACP,kBAAMuV,GAAG,GAAGvV,GAAG,CAACwV,OAAJ,EAAZ;;AACA,kBAAID,GAAG,CAAClL,MAAR,EAAgB;AACd,qBAAKoG,gBAAL,GAAwB,sDAAAgF,kBAAA,EAAmBF,GAAnB,CAAxB;AACA,sEAAAb,iBAAA,EAAkB,KAAKjE,gBAAvB;AACA,qBAAKvL,kBAAL;AACA,qBAAKiP,gBAAL;AACA,qBAAK7V,EAAL,CAAQwB,YAAR;AACD;AACF;AACF;AAED;;;;;;;;;iBAMA,sBAAa4V,aAAb,EAAiCC,OAAjC,EAA+C;AAC7C;AACA,gBAAMjF,GAAG,GAAG,IAAIkF,GAAJ,EAAZ;AACA,gBAAInL,CAAC,GAAW,CAAhB;AAEAiL,yBAAa,CAACnL,OAAd,CAAsB,UAACsL,IAAD,EAAe;AACnC,kBAAM5B,GAAG,GAAG4B,IAAI,CAACF,OAAD,CAAhB;;AACA,kBAAI,CAACjF,GAAG,CAACoF,GAAJ,CAAQ7B,GAAR,CAAL,EAAmB;AACjBvD,mBAAG,CAACpG,GAAJ,CAAQ2J,GAAR,EAAa,CAAC4B,IAAD,CAAb;AACD,eAFD,MAEO;AACLnF,mBAAG,CAAC9D,GAAJ,CAAQqH,GAAR,EAAa7H,IAAb,CAAkByJ,IAAlB;AACD;;AACDpL,eAAC;AACF,aARD;;AAUA,gBAAMsL,QAAQ,GAAG,SAAXA,QAAW,CAAC9B,GAAD,EAAW9U,KAAX,EAA0B;AACzC,qBAAO;AAAE8U,mBAAG,EAAHA,GAAF;AAAO9U,qBAAK,EAALA;AAAP,eAAP;AACD,aAFD,CAf6C,CAmB7C;;;AACA,mBAAO6W,KAAK,CAACC,IAAN,CAAWvF,GAAX,EAAgB,UAAAqD,CAAC;AAAA,qBAAIgC,QAAQ,CAAChC,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AAAA,aAAjB,CAAP;AACD;AAED;;;;;;iBAGA,qBAAS;AACP,gBAAI,KAAK5P,SAAL,CAAeE,IAAf,CAAoB,KAAKsG,IAAzB,CAAJ,EAAoC;AAClC,kBAAI,CAAC,KAAK0H,eAAV,EAA2B;AACzB,qBAAK8B,gBAAL;AACD,eAFD,MAEO;AACL,qBAAKD,aAAL,sBAAyB,KAAKvJ,IAA9B;AACD,eALiC,CAOlC;;;AACA,mBAAKuJ,aAAL,GAAqB,6CAAAE,kBAAA,EACnB,KAAKF,aADc,EAEnB,6CAAAG,qBAAA,EAAsB,KAAKC,gBAA3B,CAFmB,EAGnB,6CAAAD,qBAAA,EAAsB,KAAKE,cAA3B,CAHmB,CAArB;AAMA,mBAAK2B,gBAAL;AACA,mBAAK5X,EAAL,CAAQwB,YAAR;AACD;AACF;AAED;;;;;;;;;;;;;;iBAWA,uBAAW;AACT,iBAAKqW,eAAL;AACA,iBAAKjR,kBAAL;AACA,iBAAK5G,EAAL,CAAQwB,YAAR;AACD;AAED;;;;;;iBAKA,0BAAc;AACZ,iBAAK0U,WAAL;AACD;AAED;;;;;;;iBAIA,8BAGuC;AAAA,gBAFrC7N,OAEqC,uEAFpB,KAAK8J,gBAEe;AAAA,gBADrC2F,QACqC,uEADlB,CAAC,CACiB;AAAA,gBAArCC,UAAqC,uEAAf,KAAK3N,UAAU;AAErC,gBAAI,CAAC/B,OAAL,EAAc,OAAO7E,SAAP;AAEd,gBAAIZ,KAAK,GAAG,KAAKkE,WAAjB;;AACA,gBAAI,KAAKmD,UAAT,EAAqB;AACnBrH,mBAAK,GAAGA,KAAK,GAAG,KAAKyD,eAAL,CAAqBzD,KAArC;AACD;;AAED,gBAAI,KAAK+Q,UAAL,KAAoB,qDAAAC,UAAA,MAAxB,EAA0C;AACxC,4DAAAoE,qBAAA,EAAsB3P,OAAtB,EAA+BzF,KAA/B,EAAsCkV,QAAtC,EAAgDC,UAAhD;AACD,aAFD,MAEO,IAAI,KAAKpE,UAAL,KAAoB,qDAAAC,UAAA,KAAxB,EAAyC;AAC9C,4DAAAqE,kBAAA,EAAmB5P,OAAnB,EAA4BzF,KAA5B;AACD;;AAED,mBAAOyF,OAAP;AACD;AAED;;;;;;;;iBAKA,2BAAe;AACb,gBAAM6P,IAAI,GAAG,KAAKzE,gBAAL,CAAsB0E,aAAtB,CAAoC,KAAKpY,OAAzC,CAAb;AACA,iBAAK+G,WAAL,GAAmB2E,IAAI,CAACE,KAAL,CAAWuM,IAAI,CAACtV,KAAhB,CAAnB;;AAEA,gBAAI,KAAKqH,UAAT,EAAqB;AACnB,kBAAIlH,MAAM,GAAGmV,IAAI,CAACnV,MAAlB;AACA,kBAAI,KAAK8Q,YAAT,EAAuB9Q,MAAM,GAAGA,MAAM,GAAG,KAAK8Q,YAAvB;AACvB,kBAAI,KAAKC,YAAT,EAAuB/Q,MAAM,GAAGA,MAAM,GAAG,KAAK+Q,YAAvB;AACvB,mBAAKjH,UAAL,GAAkB9J,MAAlB;AACD;;AAED,iBAAK6U,gBAAL;AACD;AAED;;;;;;iBAGA,4BAAgB;AACd,iBAAK1M,QAAL,GAAgB,KAAKkN,YAAL,EAAhB;AACA,iBAAK7N,QAAL,GAAgB,KAAK8N,YAAL,EAAhB;AACD;AAED;;;;;;iBAGA,2BAA0B;AAAA,gBAAbpQ,MAAa,SAAbA,MAAa;;AACxB;AACA;AACA;AACA,gBAAI,KAAK6E,cAAL,IAAuB,CAAC,KAAK5C,cAAjC,EAAiD;AAC/C;AACD;;AAED,iBAAKjC,MAAL,GAAcA,MAAd;AAEA,iBAAKW,IAAL,CAAUnI,IAAV,CAAe;AACbkW,mBAAK,EAAE,KAAKA,KADC;AAEbzL,sBAAQ,EAAE,KAAKA,QAFF;AAGb0L,mBAAK,EAAE,KAAKA,KAHC;AAIb3O,oBAAM,EAAE,KAAKA;AAJA,aAAf;AAMD;AAED;;;;;;iBAGA,sBAAatE,KAAb,EAA8B;AAC5B,iBAAKwD,QAAL,CAAcmR,IAAd,CAAmB3U,KAAK,CAACuC,OAAzB;;AACA,iBAAKyC,MAAL,CAAYlI,IAAZ,CAAiBkD,KAAjB;AACA,iBAAK3D,EAAL,CAAQuY,aAAR;AACD;AAED;;;;;;iBAGA,sBAAa5U,KAAb,EAAyB;AACvB,iBAAKsE,MAAL,GAActE,KAAK,CAACiF,IAAN,GAAa,CAA3B;AACA,iBAAK6N,aAAL,CAAmB+B,aAAnB,CAAiC,KAAKvQ,MAAtC;AAEA,iBAAKW,IAAL,CAAUnI,IAAV,CAAe;AACbkW,mBAAK,EAAE,KAAKA,KADC;AAEbzL,sBAAQ,EAAE,KAAKA,QAFF;AAGb0L,mBAAK,EAAE,KAAKA,KAHC;AAIb3O,oBAAM,EAAE,KAAKA;AAJA,aAAf;;AAOA,gBAAI,KAAK+M,mBAAT,EAA8B;AAC5B,mBAAKtM,QAAL,GAAgB,EAAhB;AACA,mBAAKG,MAAL,CAAYpI,IAAZ,CAAiB;AACfiI,wBAAQ,EAAE,KAAKA;AADA,eAAjB;AAGD;AACF;AAED;;;;;;iBAGA,wBAAmC;AAAA,gBAAtBhH,GAAsB,uEAAT,KAAK2K,IAAI;;AACjC;AACA;AACA;AACA,gBAAI,KAAKpC,UAAL,IAAmB,KAAKC,cAA5B,EAA4C;AAC1C,kBAAMuO,IAAI,GAAGhN,IAAI,CAACC,IAAL,CAAU,KAAKmB,UAAL,GAAmB,KAAK9L,SAAlC,CAAb;AACA,qBAAO0K,IAAI,CAACsB,GAAL,CAAS0L,IAAT,EAAe,CAAf,CAAP;AACD,aAPgC,CASjC;;;AACA,gBAAI,KAAK7B,KAAL,KAAepT,SAAnB,EAA8B;AAC5B,qBAAO,KAAKoT,KAAZ;AACD,aAZgC,CAcjC;;;AACA,gBAAIlV,GAAJ,EAAS;AACP,qBAAOA,GAAG,CAACqK,MAAX;AACD,aAjBgC,CAmBjC;;;AACA,mBAAO,CAAP;AACD;AAED;;;;;;iBAGA,wBAAmC;AAAA,gBAAtBrK,GAAsB,uEAAT,KAAK2K,IAAI;;AACjC,gBAAI,CAAC,KAAKS,cAAV,EAA0B;AACxB,kBAAI,CAACpL,GAAL,EAAU,OAAO,CAAP;;AAEV,kBAAI,KAAKmK,WAAT,EAAsB;AACpB,uBAAO,KAAKA,WAAL,CAAiBE,MAAxB;AACD,eAFD,MAEO,IAAI,KAAKiK,gBAAL,IAAyB,IAAzB,IAAiC,KAAKC,cAAL,IAAuB,IAA5D,EAAkE;AACvE,uBAAO,KAAKL,aAAL,CAAmB7J,MAA1B;AACD,eAFM,MAEA;AACL,uBAAOrK,GAAG,CAACqK,MAAX;AACD;AACF;;AAED,mBAAO,KAAK4K,KAAZ;AACD;AAED;;;;;;iBAGA,oCAA0C;AAAA,gBAApBhT,KAAoB,SAApBA,KAAoB;AAAA,gBAAb7C,MAAa,SAAbA,MAAa;AACxC,iBAAKuU,gBAAL,CAAsB5U,IAAtB,CAA2B;AAAEkD,mBAAK,EAALA,KAAF;AAASC,kBAAI,EAAE,qDAAA8U,eAAA,OAAf;AAAuCC,qBAAO,EAAE7X;AAAhD,aAA3B;AACD;AAED;;;;;;iBAGA,iCAAoC;AAAA,gBAAjB6C,KAAiB,SAAjBA,KAAiB;AAAA,gBAAVhD,GAAU,SAAVA,GAAU;AAClC,iBAAK0U,gBAAL,CAAsB5U,IAAtB,CAA2B;AAAEkD,mBAAK,EAALA,KAAF;AAASC,kBAAI,EAAE,qDAAA8U,eAAA,KAAf;AAAqCC,qBAAO,EAAEhY;AAA9C,aAA3B;AACD;AAED;;;;;;iBAGA,+BAAwC;AAAA,gBAAvBG,MAAuB,SAAvBA,MAAuB;AAAA,gBAAf8X,QAAe,SAAfA,QAAe;;AACtC;AACA,gBAAI9X,MAAM,KAAK0C,SAAf,EAA0B;AACxB;AACD;;AAED,gBAAIkG,GAAJ;;AACA,gBAAMmP,IAAI,GAAG,KAAK1G,gBAAL,CAAsBC,GAAtB,CAA0B,UAAC0G,CAAD,EAAI3M,CAAJ,EAAU;AAC/C2M,eAAC,GAAG,MAAH,OAAG,CAAH,EAAG,EAAKA,CAAL,CAAJ;;AAEA,kBAAIA,CAAC,CAACtR,IAAF,KAAW1G,MAAM,CAAC0G,IAAtB,EAA4B;AAC1BkC,mBAAG,GAAGyC,CAAN;AACA2M,iBAAC,CAAClW,KAAF,GAAUgW,QAAV,CAF0B,CAI1B;AACA;;AACAE,iBAAC,CAACC,UAAF,GAAeH,QAAf;AACD;;AAED,qBAAOE,CAAP;AACD,aAbY,CAAb;;AAeA,iBAAKlS,kBAAL,CAAwBiS,IAAxB,EAA8BnP,GAA9B;AACA,iBAAKyI,gBAAL,GAAwB0G,IAAxB;AAEA,iBAAKzD,MAAL,CAAY3U,IAAZ,CAAiB;AACfK,oBAAM,EAANA,MADe;AAEf8X,sBAAQ,EAARA;AAFe,aAAjB;AAID;AAED;;;;;;iBAGA,gCAAoD;AAAA,gBAAlC9X,MAAkC,SAAlCA,MAAkC;AAAA,gBAA1B8X,QAA0B,SAA1BA,QAA0B;AAAA,gBAAhBI,SAAgB,SAAhBA,SAAgB;;AAClD,gBAAMH,IAAI,GAAG,KAAK1G,gBAAL,CAAsBC,GAAtB,CAA0B,UAAA0G,CAAC,EAAI;AAC1C,qBAAO,MAAP,OAAO,CAAP,EAAO,EAAKA,CAAL,CAAP;AACD,aAFY,CAAb;;AAIA,gBAAI,KAAK7E,WAAT,EAAsB;AACpB,kBAAMgF,OAAO,GAAGJ,IAAI,CAACD,QAAD,CAApB;AACAC,kBAAI,CAACD,QAAD,CAAJ,GAAiB9X,MAAjB;AACA+X,kBAAI,CAACG,SAAD,CAAJ,GAAkBC,OAAlB;AACD,aAJD,MAIO;AACL,kBAAIL,QAAQ,GAAGI,SAAf,EAA0B;AACxB,oBAAME,QAAQ,GAAGL,IAAI,CAACG,SAAD,CAArB;;AACA,qBAAK,IAAI7M,CAAC,GAAG6M,SAAb,EAAwB7M,CAAC,GAAGyM,QAA5B,EAAsCzM,CAAC,EAAvC,EAA2C;AACzC0M,sBAAI,CAAC1M,CAAD,CAAJ,GAAU0M,IAAI,CAAC1M,CAAC,GAAG,CAAL,CAAd;AACD;;AACD0M,oBAAI,CAACD,QAAD,CAAJ,GAAiBM,QAAjB;AACD,eAND,MAMO;AACL,oBAAMA,SAAQ,GAAGL,IAAI,CAACG,SAAD,CAArB;;AACA,qBAAK,IAAI7M,GAAC,GAAG6M,SAAb,EAAwB7M,GAAC,GAAGyM,QAA5B,EAAsCzM,GAAC,EAAvC,EAA2C;AACzC0M,sBAAI,CAAC1M,GAAD,CAAJ,GAAU0M,IAAI,CAAC1M,GAAC,GAAG,CAAL,CAAd;AACD;;AACD0M,oBAAI,CAACD,QAAD,CAAJ,GAAiBM,SAAjB;AACD;AACF;;AAED,iBAAK/G,gBAAL,GAAwB0G,IAAxB;AAEA,iBAAK1D,OAAL,CAAa1U,IAAb,CAAkB;AAChBK,oBAAM,EAANA,MADgB;AAEhB8X,sBAAQ,EAARA,QAFgB;AAGhBI,uBAAS,EAATA;AAHgB,aAAlB;AAKD;AAED;;;;;;iBAGA,sBAAarV,KAAb,EAAuB;AACrB;AACA,gBAAI,KAAKqR,mBAAT,EAA8B;AAC5B,mBAAKtM,QAAL,GAAgB,EAAhB;AACA,mBAAKG,MAAL,CAAYpI,IAAZ,CAAiB;AACfiI,wBAAQ,EAAE,KAAKA;AADA,eAAjB;AAGD;;AAED,iBAAKrE,KAAL,GAAaV,KAAK,CAACU,KAAnB,CATqB,CAWrB;AACA;;AACA,gBAAI,KAAK0P,eAAL,KAAyB,KAA7B,EAAoC;AAClC;AACA,mBAAK8B,gBAAL;AACD,aAhBoB,CAkBrB;;;AACA,iBAAKD,aAAL,GAAqB,6CAAAE,kBAAA,EACnB,KAAKF,aADc,EAEnB,6CAAAG,qBAAA,EAAsB,KAAKC,gBAA3B,CAFmB,EAGnB,6CAAAD,qBAAA,EAAsB,KAAKE,cAA3B,CAHmB,CAArB,CAnBqB,CAyBrB;;AACA,iBAAKhO,MAAL,GAAc,CAAd;AACA,iBAAKwO,aAAL,CAAmB+B,aAAnB,CAAiC,KAAKvQ,MAAtC;AACA,iBAAK3D,IAAL,CAAU7D,IAAV,CAAekD,KAAf;AACD;AAED;;;;;;iBAGA,wBAAeA,KAAf,EAAyB;AACvB,gBAAI,KAAK8S,aAAL,IAAsB,KAAKzB,mBAA/B,EAAoD;AAClD;AACA,kBAAMxJ,KAAK,GAAG,KAAKiL,aAAL,CAAmBtN,OAAnB,CAA2BqC,KAAzC;AACA,kBAAMI,IAAI,GAAG,KAAK6K,aAAL,CAAmBtN,OAAnB,CAA2ByC,IAAxC;AACA,kBAAMuN,WAAW,GAAG,KAAKzQ,QAAL,CAAcqD,MAAd,KAAyBH,IAAI,GAAGJ,KAApD,CAJkD,CAMlD;;AACA,mBAAK9C,QAAL,GAAgB,EAAhB,CAPkD,CASlD;;AACA,kBAAI,CAACyQ,WAAL,EAAkB;AAAA;;AAChB,wCAAKzQ,QAAL,EAAcoF,IAAd,2CAAsB,KAAK8H,aAAL,CAAmBwD,KAAnB,CAAyB5N,KAAzB,EAAgCI,IAAhC,CAAtB;AACD;AACF,aAbD,MAaO;AACL;AACA,kBAAMuN,YAAW,GAAG,KAAKzQ,QAAL,CAAcqD,MAAd,KAAyB,KAAKM,IAAL,CAAUN,MAAvD,CAFK,CAGL;;;AACA,mBAAKrD,QAAL,GAAgB,EAAhB,CAJK,CAKL;;AACA,kBAAI,CAACyQ,YAAL,EAAkB;AAAA;;AAChB,wCAAKzQ,QAAL,EAAcoF,IAAd,2CAAsB,KAAKzB,IAA3B;AACD;AACF;;AAED,iBAAKxD,MAAL,CAAYpI,IAAZ,CAAiB;AACfiI,sBAAQ,EAAE,KAAKA;AADA,aAAjB;AAGD;AAED;;;;;;iBAGA,sBAAa/E,KAAb,EAAuB;AACrB,iBAAKkF,MAAL,CAAYpI,IAAZ,CAAiBkD,KAAjB;AACD;AAED;;;;;;iBAGA,sBAAaA,KAAb,EAAyB;AAAA;;AACvB,gBAAMhD,GAAG,GAAGgD,KAAK,CAAChD,GAAlB,CADuB,CAEvB;;AACA,gBAAMM,QAAQ,GAAG,KAAK8I,KAAL,CAAWqE,SAAX,CAAqB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC,OAAI,CAAC4H,cAAN,CAAD,KAA2BtS,KAAK,CAAChD,GAAN,CAAU,OAAI,CAACsV,cAAf,CAA/B;AAAA,aAAtB,CAAjB;;AACA,iBAAK9V,UAAL,CAAgBM,IAAhB,CAAqB;AAAEE,iBAAG,EAAHA,GAAF;AAAOM,sBAAQ,EAARA;AAAP,aAArB;AACD;;;iBAED,uBAAc;AACZ,iBAAKuU,cAAL,CAAoBvJ,OAApB,CAA4B,UAAAoN,YAAY;AAAA,qBAAIA,YAAY,CAACrO,WAAb,EAAJ;AAAA,aAAxC;AACD;AAED;;;;;;;iBAIQ,uCAA2B;AAAA;;AACjC,iBAAKwK,cAAL,CAAoB1H,IAApB,CACE,KAAKgF,oBAAL,CAA0BwG,mBAA1B,CAA8C5O,SAA9C,CAAwD,YAAM;AAC5D,kBAAI,OAAI,CAACmM,eAAT,EAA0B;AACxB,uBAAI,CAACA,eAAL,CAAqB0C,eAArB;AACD;AACF,aAJD,CADF;AAOD;;;iBAEO,4BAAgB;AACtB,iBAAK3D,aAAL,GAAqB,8CAAA4D,QAAA,EAAS,KAAK5D,aAAd,EAA6B,KAAKzD,gBAAlC,EAAoD,KAAK9N,KAAzD,CAArB;AACD;;;;;;;yBAzkCUmP,mB,EAAkB,qJ,EAAA,uJ,EAAA,+H,EAAA,wH,EAAA,6H,EAAA,qJ,EAAA,iEA2kBP,eA3kBO,EA2kBQ,CA3kBR,C;AA2kBQ,O;;;cA3kB1BA,mB;AAAkB,sC;AAAA;AAAA;oFAmgBf,8DAAAiG,2B,EAA2B,C;;oFAM3B,+DAAAtU,6B,EAA6B,C;;oFAM7B,sDAAAuU,wB,EAAwB,C;;oFA5BrB,uDAAA7G,wB,EAAwB,C;;;;;;;;;;;;;;uEAmC9B,mDAAApK,sB,EAAsB,C;;uEAStB,uDAAAkR,wB,EAAwB,C;;;;;;;;;;;;;;;qBA/hBxB,oB;AAAgB,a,EAAA,K,EAAA,8D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AD1D7B;;AAAqC;AAAA,qBAAW,IAAAzD,WAAA,EAAX;AAAwB,aAAxB;;AACnC;;AAyBA;;AAgCE;AAAA,qBAAQ,IAAA0D,UAAA,QAAR;AAA0B,aAA1B,EAA2B,UAA3B,EAA2B;AAAA,qBACf,IAAA3Z,QAAA,aADe;AACM,aADjC,EAA2B,gBAA3B,EAA2B;AAAA,qBAET,IAAA4Z,gBAAA,QAFS;AAEe,aAF1C,EAA2B,QAA3B,EAA2B;AAAA,qBAGjB,IAAAC,YAAA,QAHiB;AAGG,aAH9B,EAA2B,QAA3B,EAA2B;AAAA,qBAIjB,IAAAC,YAAA,QAJiB;AAIG,aAJ9B,EAA2B,YAA3B,EAA2B;AAAA,qBAKb,IAAA5Y,YAAA,QALa;AAKO,aALlC;;;;AAOF;;AACA;;AAiBF;;;;AAhFK;;AAAA;;AAyBD;;AAAA,sGAA2B,aAA3B,EAA2B,eAA3B,EAA2B,MAA3B,EAA2B,iBAA3B,EAA2B,uBAA3B,EAA2B,yBAA3B,EAA2B,YAA3B,EAA2B,cAA3B,EAA2B,YAA3B,EAA2B,cAA3B,EAA2B,gBAA3B,EAA2B,kBAA3B,EAA2B,kBAA3B,EAA2B,oBAA3B,EAA2B,gBAA3B,EAA2B,kBAA3B,EAA2B,WAA3B,EAA2B,aAA3B,EAA2B,UAA3B,EAA2B,YAA3B,EAA2B,QAA3B,EAA2B,UAA3B,EAA2B,aAA3B,EAA2B,eAA3B,EAA2B,SAA3B,EAA2B,oBAA3B,EAA2B,UAA3B,EAA2B,YAA3B,EAA2B,SAA3B,EAA2B,+EAA3B,EAA2B,WAA3B,EAA2B,aAA3B,EAA2B,aAA3B,EAA2B,eAA3B,EAA2B,UAA3B,EAA2B,YAA3B,EAA2B,YAA3B,EAA2B,eAA3B,EAA2B,YAA3B,EAA2B,cAA3B,EAA2B,eAA3B,EAA2B,iBAA3B,EAA2B,cAA3B,EAA2B,yBAA3B,EAA2B,aAA3B,EAA2B,eAA3B,EAA2B,UAA3B,EAA2B,YAA3B,EAA2B,aAA3B,EAA2B,eAA3B,EAA2B,cAA3B,EAA2B,gBAA3B,EAA2B,YAA3B,EAA2B,cAA3B,EAA2B,eAA3B,EAA2B,iBAA3B,EAA2B,iBAA3B,EAA2B,mBAA3B;;AAuCC;;AAAA;;;;;;;;;AC0uBH,2DADC,kDAAA6Y,YAAA,EAAa,CAAb,CACD,G,6BAAA,E,gBAAA,E,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC1yBWC,iC,GACX,2CAAmB/U,QAAnB,EAA+C;AAAA;;AAA5B,aAAAA,QAAA,GAAAA,QAAA;AAA8B,O;;;yBADtC+U,iC,EAAgC,uH;AAAA,O;;;cAAhCA,iC;AAAgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOvC;;;;;;AAEE,uHAA4C,yBAA5C,EAA4C,4JAA5C;;;;;;AAWA;;AAA+B;;AAA8D;;;;;;AAA9D;;AAAA;;;;;;AADjC;;AACE;;AACA;;AACF;;;;;;AAFS;;AAAA;;AACP;;AAAA;;;;;;;;AAEF;;AAUE;AAAA;;AAAA;;AAAA,mBAAU,OAAArR,IAAA,aAAV;AAA2B,WAA3B;;AAEF;;;;;;AAVE,oHAAyC,qBAAzC,EAAyC,0BAAzC,EAAyC,mBAAzC,EAAyC,wBAAzC,EAAyC,eAAzC,EAAyC,oBAAzC,EAAyC,MAAzC,EAAyC,cAAzC,EAAyC,MAAzC,EAAyC,eAAzC,EAAyC,OAAzC,EAAyC,eAAzC,EAAyC,QAAzC,EAAyC,iBAAzC;;;;;;;;;;UAkBKsR,yB;AA5Cb;AAAA;;AAwDW,eAAAC,aAAA,GAAwB,CAAxB;AAGC,eAAAvR,IAAA,GAA0B,IAAI,2CAAA1I,YAAJ,EAA1B;AASX;;;;eAPC,eAAa;AACX,mBAAO,KAAKqK,QAAL,GAAgB,KAAKW,QAArB,GAAgC,CAAvC;AACD;;;eAED,eAAW;AACT,mBAAO,KAAKjD,MAAL,GAAc,CAArB;AACD;;;;;;;yBAvBUiS,yB;AAAwB,O;;;cAAxBA,yB;AAAwB,yC;AAAA,0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,0c;AAAA;AAAA;AAzCjC;;AAKE;;AAYA;;AAIA;;AAaF;;;;AA/BE;;AADA;;AAIG;;AAAA;;AAWsB;;AAAA;;AAKtB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCvBIR,yB;;;;;;;eAeX,eAAY;AACV,mBAAO,KAAKrU,cAAL,IAAuB,KAAKC,cAAnC;AACD;;;;;;;yBAjBUoU,yB;AAAwB,O;;;cAAxBA,yB;AAAwB,6C;AAAA;AAAA;mFAYrB,wDAAAO,gC,EAAkC,C,EAAQ,2CAAA1U,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApD;;AAOE;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3B;;AACF;;AACF;;;;;;;;AALE;;AAHA;;AAME;;AAAA;;;;UAoBG6U,wB;AA1Cb;AAAA;;AAmFY,eAAAC,MAAA,GAA4B,IAAI,2CAAAna,YAAJ,EAA5B;AAEV,eAAAqV,MAAA,GAAiB,CAAjB;AACA,eAAA+E,KAAA,GAAgB,CAAhB;AACA,eAAAC,KAAA,GAAgB,CAAhB;AA4DD;;;;eA7FC,eAAQ;AACN,mBAAO,KAAKA,KAAZ;AACD,W;eARD,aACS7Y,GADT,EACsB;AACpB,iBAAK6Y,KAAL,GAAa7Y,GAAb;AACA,iBAAK8Y,KAAL,GAAa,KAAKC,SAAL,EAAb;AACD;;;eAYD,eAAS;AACP,mBAAO,KAAKlF,MAAZ;AACD,W;eARD,aACU7T,GADV,EACuB;AACrB,iBAAK6T,MAAL,GAAc7T,GAAd;AACA,iBAAK8Y,KAAL,GAAa,KAAKC,SAAL,EAAb;AACD;;;eAYD,eAAQ;AACN,mBAAO,KAAKH,KAAZ;AACD,W;eARD,aACS5Y,GADT,EACsB;AACpB,iBAAK4Y,KAAL,GAAa5Y,GAAb;AACA,iBAAK8Y,KAAL,GAAa,KAAKC,SAAL,EAAb;AACD;;;eAMD,eAAc;AACZ,gBAAM9D,KAAK,GAAG,KAAK8B,IAAL,GAAY,CAAZ,GAAgB,CAAhB,GAAoBhN,IAAI,CAACC,IAAL,CAAU,KAAKiL,KAAL,GAAa,KAAK8B,IAA5B,CAAlC;AACA,mBAAOhN,IAAI,CAACsB,GAAL,CAAS4J,KAAK,IAAI,CAAlB,EAAqB,CAArB,CAAP;AACD;;;iBASD,uBAAW;AACT,mBAAO,KAAK/N,IAAL,GAAY,CAAnB;AACD;;;iBAED,mBAAO;AACL,mBAAO,KAAKA,IAAL,GAAY,KAAK8R,UAAxB;AACD;;;iBAED,oBAAQ;AACN,iBAAKC,UAAL,CAAgB,KAAK/R,IAAL,GAAY,CAA5B;AACD;;;iBAED,oBAAQ;AACN,iBAAK+R,UAAL,CAAgB,KAAK/R,IAAL,GAAY,CAA5B;AACD;;;iBAED,oBAAWA,IAAX,EAAuB;AACrB,gBAAIA,IAAI,GAAG,CAAP,IAAYA,IAAI,IAAI,KAAK8R,UAAzB,IAAuC9R,IAAI,KAAK,KAAKA,IAAzD,EAA+D;AAC7D,mBAAKA,IAAL,GAAYA,IAAZ;AAEA,mBAAKyR,MAAL,CAAY5Z,IAAZ,CAAiB;AACfmI,oBAAI,EAAJA;AADe,eAAjB;AAGD;AACF;;;iBAED,mBAAUA,IAAV,EAAuB;AACrB,gBAAM4R,KAAK,GAAG,EAAd;AACA,gBAAII,SAAS,GAAG,CAAhB;AACA,gBAAIC,OAAO,GAAG,KAAKH,UAAnB;AACA,gBAAMI,OAAO,GAAG,CAAhB;AACA,gBAAMC,UAAU,GAAGD,OAAO,GAAG,KAAKJ,UAAlC;AAEA9R,gBAAI,GAAGA,IAAI,IAAI,KAAKA,IAApB;;AAEA,gBAAImS,UAAJ,EAAgB;AACdH,uBAAS,GAAGhS,IAAI,GAAG6C,IAAI,CAACE,KAAL,CAAWmP,OAAO,GAAG,CAArB,CAAnB;AACAD,qBAAO,GAAGjS,IAAI,GAAG6C,IAAI,CAACE,KAAL,CAAWmP,OAAO,GAAG,CAArB,CAAjB;;AAEA,kBAAIF,SAAS,GAAG,CAAhB,EAAmB;AACjBA,yBAAS,GAAG,CAAZ;AACAC,uBAAO,GAAGpP,IAAI,CAACuB,GAAL,CAAS4N,SAAS,GAAGE,OAAZ,GAAsB,CAA/B,EAAkC,KAAKJ,UAAvC,CAAV;AACD,eAHD,MAGO,IAAIG,OAAO,GAAG,KAAKH,UAAnB,EAA+B;AACpCE,yBAAS,GAAGnP,IAAI,CAACsB,GAAL,CAAS,KAAK2N,UAAL,GAAkBI,OAAlB,GAA4B,CAArC,EAAwC,CAAxC,CAAZ;AACAD,uBAAO,GAAG,KAAKH,UAAf;AACD;AACF;;AAED,iBAAK,IAAIM,GAAG,GAAGJ,SAAf,EAA0BI,GAAG,IAAIH,OAAjC,EAA0CG,GAAG,EAA7C,EAAiD;AAC/CR,mBAAK,CAAC1M,IAAN,CAAW;AACTmN,sBAAM,EAAED,GADC;AAETE,oBAAI,EAAgBF;AAFX,eAAX;AAID;;AAED,mBAAOR,KAAP;AACD;;;;;;;yBAxGUJ,wB;AAAuB,O;;;cAAvBA,wB;AAAuB,wC;AAAA,yC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,qjB;AAAA;AAAA;AAvChC;;AACE;;AACE;;AAAyE;AAAA,qBAAS,IAAAO,UAAA,CAAW,CAAX,CAAT;AAAsB,aAAtB;;AACvE;;AACF;;AACF;;AACA;;AACE;;AAA4E;AAAA,qBAAS,IAAAQ,QAAA,EAAT;AAAmB,aAAnB;;AAC1E;;AACF;;AACF;;AACA;;AAWA;;AACE;;AAAwE;AAAA,qBAAS,IAAAC,QAAA,EAAT;AAAmB,aAAnB;;AACtE;;AACF;;AACF;;AACA;;AACE;;AAAwE;AAAA,qBAAS,IAAAT,UAAA,gBAAT;AAA+B,aAA/B;;AACtE;;AACF;;AACF;;AACF;;;;AA/BM;;AAAA;;AAEG;;AAAA;;AAGH;;AAAA;;AAEG;;AAAA;;AAOU;;AAAA;;AAOb;;AAAA;;AAEG;;AAAA;;AAGH;;AAAA;;AAEG;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdP;;;;;;AAEE,oHAAyC,yBAAzC,EAAyC,0BAAzC;;;;;;;;AAIF;;AACE;;AAAmD;AAAA;;AAAA;;AAAA,mBAAU,OAAA9R,MAAA,8BAAV;AAAuC,WAAvC;;AAAnD;;AACF;;;;;;AADyB;;AAAA;;;;;;;;AAEzB;;AACE;;AAAoD;AAAA;;AAAA;;AAAA;AAAA;;AAAuC;;AAC7F;;;;;;AADyE;;AAAA;;;;;;;;AAEzE;;;;;;AAEE,qHAA0C,yBAA1C,EAA0C,kBAA1C;;;;UAYKwS,6B;AAwHX,+CAAoBrb,EAApB,EAA2C;AAAA;;AAAvB,eAAAA,EAAA,GAAAA,EAAA;AAxEV,eAAAsE,IAAA,GAA0B,IAAI,2CAAApE,YAAJ,EAA1B;AACA,eAAA2I,MAAA,GAA4B,IAAI,2CAAA3I,YAAJ,EAA5B;AACA,eAAAob,iBAAA,GAAoB,IAAI,2CAAApb,YAAJ,CAAqD,KAArD,CAApB;AA4DV,eAAAqb,MAAA,GAAS,KAAKC,MAAL,CAAYjb,IAAZ,CAAiB,IAAjB,CAAT;AAGA,eAAAkb,QAAA,GAAW,KAAK5S,MAAL,CAAYpI,IAAZ,CAAiBF,IAAjB,CAAsB,KAAKsI,MAA3B,CAAX;AAQE,eAAKnI,WAAL,GAAmB;AACjBI,kBAAM,EAAE,KAAKA,MADI;AAEjB4B,mBAAO,EAAE,KAAKA,OAFG;AAGjB6Y,kBAAM,EAAE,KAAKA,MAHI;AAIjB/E,2BAAe,EAAE,KAAKA,eAJL;AAKjBiF,oBAAQ,EAAE,KAAKA;AALE,WAAnB;AAOD;;;;eAhHD,eAAsB;AACpB,mBAAO,KAAKC,gBAAZ;AACD,W;eAND,aAA6B7a,KAA7B,EAAoC;AAClC,iBAAK6a,gBAAL,GAAwB7a,KAAxB;AACA,iBAAKH,WAAL,CAAiB8V,eAAjB,GAAmC3V,KAAnC;AACD;;;eAaD,eAAU;AACR,mBAAO,KAAKkB,OAAZ;AACD,W;eARD,aAAoBjB,MAApB,EAAyC;AACvC,iBAAKiB,OAAL,GAAejB,MAAf;AACA,iBAAKJ,WAAL,CAAiBI,MAAjB,GAA0BA,MAA1B;AACA,iBAAKd,EAAL,CAAQwB,YAAR;AACD;;;eAkBD,eAAS;AACP,mBAAO,KAAKS,MAAZ;AACD,W;eAVD,aAAmBP,GAAnB,EAA+B;AAC7B,iBAAKO,MAAL,GAAcP,GAAd;AACA,iBAAKgB,OAAL,GAAe,KAAKR,WAAL,CAAiBR,GAAjB,CAAf;AACA,iBAAKhB,WAAL,CAAiBgC,OAAjB,GAA2B,KAAKA,OAAhC;AACA,iBAAKiZ,SAAL,GAAiB,KAAKC,aAAL,CAAmB,KAAKlZ,OAAxB,CAAjB;AACA,iBAAK1C,EAAL,CAAQwB,YAAR;AACD;;;eAUD,eACoB;AAClB,gBAAIa,GAAG,GAAG,uBAAV;AAEA,gBAAI,KAAKvB,MAAL,CAAY+a,QAAhB,EAA0BxZ,GAAG,IAAI,WAAP;AAC1B,gBAAI,KAAKvB,MAAL,CAAYgb,UAAhB,EAA4BzZ,GAAG,IAAI,aAAP;;AAC5B,gBAAI,KAAKvB,MAAL,CAAYib,WAAhB,EAA6B;AAC3B,kBAAI,OAAO,KAAKjb,MAAL,CAAYib,WAAnB,KAAmC,QAAvC,EAAiD;AAC/C1Z,mBAAG,IAAI,MAAM,KAAKvB,MAAL,CAAYib,WAAzB;AACD,eAFD,MAEO,IAAI,OAAO,KAAKjb,MAAL,CAAYib,WAAnB,KAAmC,UAAvC,EAAmD;AACxD,oBAAMxZ,GAAG,GAAG,KAAKzB,MAAL,CAAYib,WAAZ,CAAwB;AAClCjb,wBAAM,EAAE,KAAKA;AADqB,iBAAxB,CAAZ;;AAIA,oBAAI,OAAOyB,GAAP,KAAe,QAAnB,EAA6B;AAC3BF,qBAAG,IAAIE,GAAP;AACD,iBAFD,MAEO,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAClC,sBAAM7C,IAAI,GAAG8C,MAAM,CAAC9C,IAAP,CAAY6C,GAAZ,CAAb;;AACA,6CAAgB7C,IAAhB,8BAAsB;AAAjB,wBAAM+C,CAAC,cAAP;AACH,wBAAIF,GAAG,CAACE,CAAD,CAAH,KAAW,IAAf,EAAqBJ,GAAG,eAAQI,CAAR,CAAH;AACtB;AACF;AACF;AACF;;AAED,gBAAMC,OAAO,GAAG,KAAKA,OAArB;;AACA,gBAAIA,OAAJ,EAAa;AACXL,iBAAG,gCAAyBK,OAAzB,CAAH;AACD;;AAED,mBAAOL,GAAP;AACD;;;eAED,eACQ;AACN;AACA,mBAAO,KAAKvB,MAAL,CAAYkb,cAAZ,KAA+BxY,SAA/B,GAA2C,KAAK1C,MAAL,CAAYmb,IAAvD,GAA8DzY,SAArE;AACD;;;eAED,eACY;AACV,mBAAO,KAAK1C,MAAL,CAAY+B,QAAnB;AACD;;;eAED,eACY;AACV,mBAAO,KAAK/B,MAAL,CAAYgC,QAAnB;AACD;;;eAED,eACS;AACP,mBAAO,KAAKhC,MAAL,CAAY8B,KAAnB;AACD;;;eAED,eAAkB;AAChB,mBAAO,KAAK9B,MAAL,CAAYob,YAAZ,IAA4B,KAAKpb,MAAL,CAAYqb,kBAAxC,IAA8D,KAAK7R,aAAL,KAAuB,mDAAAsF,aAAA,SAA5F;AACD;;;iBAuBD,uBAAc5J,MAAd,EAAgC;AAC9B,iBAAKsV,iBAAL,CAAuB7a,IAAvB,CAA4B;AAAEkD,mBAAK,EAAEqC,MAAT;AAAiBlF,oBAAM,EAAE,KAAKA;AAA9B,aAA5B;AACD;;;iBAED,oBAAW;AACT,iBAAK6a,SAAL,GAAiB,KAAKC,aAAL,CAAmB,KAAKlZ,OAAxB,CAAjB;AACD;;;iBAED,qBAAY2B,KAAZ,EAAwB;AAAA;;AACtB,gBAAIA,KAAK,IAAI,KAAKvD,MAAlB,EAA0B;AACxB,kBAAMwD,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAY;AAClC,uBAAOA,CAAC,CAACpB,IAAF,KAAW,OAAI,CAACtC,MAAL,CAAYsC,IAA9B;AACD,eAFY,CAAb;AAIA,kBAAIkB,IAAJ,EAAU,OAAOA,IAAI,CAACG,GAAZ;AACX;AACF;;;iBAED,kBAAM;AACJ,gBAAI,CAAC,KAAK3D,MAAL,CAAY+a,QAAjB,EAA2B;AAE3B,gBAAMjD,QAAQ,GAAG,6CAAAwD,WAAA,EAAY,KAAKlI,QAAjB,EAA2B,KAAKxR,OAAhC,CAAjB;AACA,iBAAK4B,IAAL,CAAU7D,IAAV,CAAe;AACbK,oBAAM,EAAE,KAAKA,MADA;AAEbkY,uBAAS,EAAE,KAAKtW,OAFH;AAGbkW,sBAAQ,EAARA;AAHa,aAAf;AAKD;;;iBAED,uBAAclW,OAAd,EAAoC;AAClC,gBAAI,CAAC,KAAKhC,WAAL,CAAiBI,MAAjB,CAAwB+a,QAA7B,EAAuC;;AACvC,gBAAInZ,OAAO,KAAK,wDAAAC,aAAA,IAAhB,EAAmC;AACjC,iDAA4B,KAAK0Z,iBAAjC;AACD,aAFD,MAEO,IAAI3Z,OAAO,KAAK,wDAAAC,aAAA,KAAhB,EAAoC;AACzC,kDAA6B,KAAK2Z,kBAAlC;AACD,aAFM,MAEA;AACL,wCAAmB,KAAKC,aAAxB;AACD;AACF;;;;;;;yBAzKUlB,6B,EAA4B,6H;AAAA,O;;;cAA5BA,6B;AAA4B,8C;AAAA,+C;AAAA,oB;AAAA;AAAA;;qBAA5B,yB;AAAqB,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA3B9B;;AACE;;AAMA;;AAGA;;AAGA;;AAMA;;AAAM;AAAA,qBAAS,IAAAG,MAAA,EAAT;AAAiB,aAAjB;;AAAwC;;AAChD;;;;AAlBK;;AAAA;;AAKK;;AAAA;;AAGD;;AAAA;;AAIJ;;AAAA;;AAKsB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNvB;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA,aAA0C,gBAA1C,EAA0C;AAAA;;AAAA;;AAAA;AAAA,WAA1C,EAA0C,cAA1C,EAA0C;AAAA;;AAAA;;AAAA;AAAA,WAA1C,EAA0C,MAA1C,EAA0C;AAAA;;AAAA;;AAAA;AAAA,WAA1C,EAA0C,QAA1C,EAA0C;AAAA;;AAAA;;AAAA,mBAwBhC,OAAA3S,MAAA,aAxBgC;AAwBb,WAxB7B,EAA0C,mBAA1C,EAA0C;AAAA;;AAAA;;AAAA,mBAyBrB,QAAAyS,iBAAA,aAzBqB;AAyBS,WAzBnD;;AA2BF;;;;;;;;AA5BE,0GAAmC,YAAnC,EAAmC,SAAnC,EAAmC,cAAnC,EAAmC,yCAAnC,EAAmC,OAAnC,EAAmC,+DAAnC,EAAmC,OAAnC,EAAmC,KAAnC,EAAmC,WAAnC,EAAmC,SAAnC,EAAmC,iBAAnC,EAAmC,sBAAnC,EAAmC,cAAnC,EAAmC,mBAAnC,EAAmC,UAAnC,EAAmC,kBAAnC,EAAmC,sBAAnC,EAAmC,2BAAnC,EAAmC,qBAAnC,EAAmC,6BAAnC,EAAmC,QAAnC,EAAmC,SAAnC,EAAmC,UAAnC,EAAmC,eAAnC,EAAmC,OAAnC,EAAmC,YAAnC,EAAmC,eAAnC,EAAmC,oBAAnC,EAAmC,mBAAnC,EAAmC,wBAAnC,EAAmC,oBAAnC,EAAmC,yBAAnC,EAAmC,eAAnC,EAAmC,oBAAnC,EAAmC,iBAAnC,EAAmC,sBAAnC;;;;;;AATJ;;AAKE;;AAiCF;;;;;;;;AApCE;;AACA;;AAIqB;;AAAA,mGAAqB,cAArB,EAAqB,uBAArB;;;;UAuChB3B,yB;AA6FX,2CAAoB3Z,EAApB,EAA2C;AAAA;;AAAvB,eAAAA,EAAA,GAAAA,EAAA;AAtBV,eAAAsE,IAAA,GAA0B,IAAI,2CAAApE,YAAJ,EAA1B;AACA,eAAAiV,OAAA,GAA6B,IAAI,2CAAAjV,YAAJ,EAA7B;AACA,eAAAkV,MAAA,GAA4B,IAAI,2CAAAlV,YAAJ,EAA5B;AACA,eAAA2I,MAAA,GAA4B,IAAI,2CAAA3I,YAAJ,EAA5B;AACA,eAAAob,iBAAA,GAAoB,IAAI,2CAAApb,YAAJ,CAAqD,KAArD,CAApB;AAGV,eAAA+G,kBAAA,GAA0B;AACxBc,iBAAK,EAAE;AADiB,WAA1B;AAOA,eAAAyU,aAAA,GAAwC;AACtCjW,gBAAI,EAAE,EADgC;AAEtCC,kBAAM,EAAE,EAF8B;AAGtCC,iBAAK,EAAE;AAH+B,WAAxC;AAMQ,eAAAgW,SAAA,GAAY,KAAZ;AAEqC;;;;eAxE7C,eAAc;AACZ,mBAAO,KAAK3V,WAAZ;AACD,W;eAbD,aAAwBpF,GAAxB,EAAqC;AAAA;;AACnC,iBAAKoF,WAAL,GAAmBpF,GAAnB;AACAiL,sBAAU,CAAC,YAAM;AACf,kBAAI,OAAI,CAAChG,QAAT,EAAmB;AACjB,oBAAMI,QAAQ,GAAG,+CAAAC,YAAA,EAAa,OAAI,CAACL,QAAlB,CAAjB;AACA,uBAAI,CAACM,kBAAL,GAA0B,+CAAAC,iBAAA,EAAkBH,QAAlB,EAA4B,OAAI,CAACJ,QAAjC,CAA1B;;AACA,uBAAI,CAAC+V,gBAAL;AACD;AACF,aANS,CAAV;AAOD;;;eAwBD,eAAgB;AACd,mBAAO,KAAKC,aAAZ;AACD,W;eAZD,aAEiBjb,GAFjB,EAE2B;AACzB,gBAAIA,GAAG,KAAK,MAAZ,EAAoB;AAClB,mBAAKib,aAAL,aAAwBjb,GAAxB;AACD,aAFD,MAEO;AACL,mBAAKib,aAAL,GAAqBjb,GAArB;AACD;AACF;;;eAiBD,eAAW;AACT,mBAAO,KAAKiF,QAAZ;AACD,W;eAbD,aAAqBjF,GAArB,EAAiC;AAAA;;AAC/B,iBAAKiF,QAAL,GAAgBjF,GAAhB;AAEA,gBAAM4G,SAAS,GAAG,+CAAAtB,YAAA,EAAatF,GAAb,CAAlB;AACA,iBAAK6G,aAAL,GAAqB,+CAAAC,eAAA,EAAgB9G,GAAhB,CAArB;AACAiL,sBAAU,CAAC,YAAM;AACf,qBAAI,CAAC1F,kBAAL,GAA0B,+CAAAC,iBAAA,EAAkBoB,SAAlB,EAA6B5G,GAA7B,CAA1B;;AACA,qBAAI,CAACgb,gBAAL;AACD,aAHS,CAAV;AAID;;;eAWD,eAAc;AACZ,mBAAO,KAAKvV,QAAZ;AACD,W;eAPD,aACYzF,GADZ,EACyB;AACvB,iBAAKyF,QAAL,GAAgBzF,GAAhB;AACA,iBAAKgb,gBAAL;AACD;;;iBA6BD,uBAAW;AACT,iBAAKD,SAAL,GAAiB,IAAjB;AACD;;;iBAED,iCAA+D;AAAA,gBAA5C9Y,KAA4C,SAA5CA,KAA4C;AAAA,gBAArC6M,KAAqC,SAArCA,KAAqC;AAC7DA,iBAAK,CAACoM,QAAN,GAAiB,IAAjB;AACA,iBAAKC,eAAL,GAAuBlZ,KAAvB;AACD;;;iBAED,+BAA6D;AAAA;;AAAA,gBAA5CA,KAA4C,SAA5CA,KAA4C;AAAA,gBAArC6M,KAAqC,SAArCA,KAAqC;AAC3D,iBAAKqM,eAAL,GAAuBlZ,KAAvB,CAD2D,CAG3D;AACA;;AACAgJ,sBAAU,CAAC,YAAM;AACf;AACA;AACA,kBAAM7L,MAAM,GAAG,OAAI,CAAC6F,QAAL,CAAcpC,IAAd,CAAmB,UAAAuU,CAAC;AAAA,uBAAIA,CAAC,CAACtR,IAAF,KAAWgJ,KAAK,CAAChJ,IAArB;AAAA,eAApB,CAAf;;AACA,kBAAI1G,MAAJ,EAAY;AACVA,sBAAM,CAAC8b,QAAP,GAAkB,KAAlB;AACD;AACF,aAPS,EAOP,CAPO,CAAV;AAQD;;;eAED,eACe;AACb,gBAAI,KAAKxS,UAAT,EAAqB;AACnB,qBAAO,KAAKjE,UAAL,GAAkB,IAAzB;AACD;;AAED,mBAAO,MAAP;AACD;;;iBAED,uBAAcmB,KAAd,EAA6BC,QAA7B,EAA0C;AACxC,mBAAOA,QAAQ,CAAC3D,IAAhB;AACD;;;iBAED,0BAAiB0D,KAAjB,EAAgCxG,MAAhC,EAA2C;AACzC,mBAAOA,MAAM,CAAC0G,IAAd;AACD;;;iBAED,yBAAgB5E,KAAhB,EAA+B9B,MAA/B,EAA+D;AAC7D,gBAAI8B,KAAK,IAAI9B,MAAM,CAAC+B,QAApB,EAA8B;AAC5BD,mBAAK,GAAG9B,MAAM,CAAC+B,QAAf;AACD,aAFD,MAEO,IAAID,KAAK,IAAI9B,MAAM,CAACgC,QAApB,EAA8B;AACnCF,mBAAK,GAAG9B,MAAM,CAACgC,QAAf;AACD;;AAED,iBAAKsS,MAAL,CAAY3U,IAAZ,CAAiB;AACfK,oBAAM,EAANA,MADe;AAEfkY,uBAAS,EAAElY,MAAM,CAAC8B,KAFH;AAGfgW,sBAAQ,EAAEhW;AAHK,aAAjB;AAKD;;;iBAED,mCAAqD;AAAA,gBAAjCqN,SAAiC,UAAjCA,SAAiC;AAAA,gBAAtB6M,QAAsB,UAAtBA,QAAsB;AAAA,gBAAZtM,KAAY,UAAZA,KAAY;AACnD,gBAAM1P,MAAM,GAAG,KAAKic,SAAL,CAAeD,QAAf,CAAf;AACAhc,kBAAM,CAACkc,QAAP,GAAkB,KAAlB;AACAlc,kBAAM,CAACmc,mBAAP,GAA6BzZ,SAA7B;AACA,iBAAK2R,OAAL,CAAa1U,IAAb,CAAkB;AAChBK,oBAAM,EAAE0P,KADQ;AAEhBwI,uBAAS,EAAE/I,SAFK;AAGhB2I,sBAAQ,EAAEkE;AAHM,aAAlB;AAKD;;;iBAED,iCAA0D;AAAA,gBAAxC7M,SAAwC,UAAxCA,SAAwC;AAAA,gBAA7B6M,QAA6B,UAA7BA,QAA6B;AAAA,gBAAnBI,YAAmB,UAAnBA,YAAmB;;AACxD,gBAAIjN,SAAS,IAAIA,SAAS,KAAK,CAA/B,EAAkC;AAChC,kBAAMkN,SAAS,GAAG,KAAKJ,SAAL,CAAe9M,SAAf,CAAlB;AACAkN,uBAAS,CAACH,QAAV,GAAqB,KAArB;AACAG,uBAAS,CAACF,mBAAV,GAAgCzZ,SAAhC;AACD;;AACD,gBAAIsZ,QAAQ,IAAIA,QAAQ,KAAK,CAA7B,EAAgC;AAC9B,kBAAMM,SAAS,GAAG,KAAKL,SAAL,CAAeD,QAAf,CAAlB;AACAM,uBAAS,CAACJ,QAAV,GAAqB,IAArB;;AAEA,kBAAIE,YAAY,KAAKJ,QAArB,EAA+B;AAC7BM,yBAAS,CAACH,mBAAV,GAAgC;AAC9B,2BAAO,gBAAgBI,MAAhB,CAAuBH,YAAY,GAAGJ,QAAf,GAA0B,eAA1B,GAA4C,cAAnE;AADuB,iBAAhC;AAGD;AACF;AACF;;;iBAED,mBAAUxV,KAAV,EAAuB;AACrB,gBAAMgW,eAAe,GAAG,KAAK/U,aAAL,CAAmB,CAAnB,EAAsBF,OAAtB,CAA8B0D,MAAtD;;AACA,gBAAIzE,KAAK,GAAGgW,eAAZ,EAA6B;AAC3B,qBAAO,KAAK/U,aAAL,CAAmB,CAAnB,EAAsBF,OAAtB,CAA8Bf,KAA9B,CAAP;AACD;;AAED,gBAAMiW,iBAAiB,GAAG,KAAKhV,aAAL,CAAmB,CAAnB,EAAsBF,OAAtB,CAA8B0D,MAAxD;;AACA,gBAAIzE,KAAK,GAAGgW,eAAe,GAAGC,iBAA9B,EAAiD;AAC/C,qBAAO,KAAKhV,aAAL,CAAmB,CAAnB,EAAsBF,OAAtB,CAA8Bf,KAAK,GAAGgW,eAAtC,CAAP;AACD;;AAED,mBAAO,KAAK/U,aAAL,CAAmB,CAAnB,EAAsBF,OAAtB,CAA8Bf,KAAK,GAAGgW,eAAR,GAA0BC,iBAAxD,CAAP;AACD;;;iBAED,wBAA2C;AAAA,gBAAlCzc,MAAkC,UAAlCA,MAAkC;AAAA,gBAA1BkY,SAA0B,UAA1BA,SAA0B;AAAA,gBAAfJ,QAAe,UAAfA,QAAe;;AACzC;AACA,gBAAI9X,MAAM,CAAC8b,QAAX,EAAqB;AACnB;AACD;;AAED,gBAAMvY,KAAK,GAAG,KAAKmZ,YAAL,CAAkB1c,MAAlB,EAA0BkY,SAA1B,EAAqCJ,QAArC,CAAd;AACA,iBAAKtU,IAAL,CAAU7D,IAAV,CAAe;AACb4D,mBAAK,EAALA,KADa;AAEbvD,oBAAM,EAANA,MAFa;AAGbkY,uBAAS,EAATA,SAHa;AAIbJ,sBAAQ,EAARA;AAJa,aAAf;AAMD;;;iBAED,sBAAa9X,MAAb,EAA0BkY,SAA1B,EAA6CJ,QAA7C,EAA6D;AAC3D,gBAAIlP,GAAG,GAAG,CAAV;;AAEA,gBAAI,CAAC,KAAKrF,KAAV,EAAiB;AACf,mBAAKA,KAAL,GAAa,EAAb;AACD;;AAED,gBAAMA,KAAK,GAAG,KAAKA,KAAL,CAAW+N,GAAX,CAAe,UAAC5N,CAAD,EAAI2H,CAAJ,EAAU;AACrC3H,eAAC,GAAG,MAAH,OAAG,CAAH,EAAG,EAAKA,CAAL,CAAJ;;AACA,kBAAIA,CAAC,CAACpB,IAAF,KAAWtC,MAAM,CAACsC,IAAtB,EAA4B;AAC1BsG,mBAAG,GAAGyC,CAAN;AACD;;AACD,qBAAO3H,CAAP;AACD,aANa,CAAd;;AAQA,gBAAIoU,QAAQ,KAAKpV,SAAjB,EAA4B;AAC1Ba,mBAAK,CAACwJ,MAAN,CAAanE,GAAb,EAAkB,CAAlB;AACD,aAFD,MAEO,IAAIsP,SAAJ,EAAe;AACpB3U,mBAAK,CAACqF,GAAD,CAAL,CAAWjF,GAAX,GAAiBmU,QAAjB;AACD,aAFM,MAEA;AACL,kBAAI,KAAK1E,QAAL,KAAkB,8CAAAC,QAAA,OAAtB,EAAuC;AACrC9P,qBAAK,CAACwJ,MAAN,CAAa,CAAb,EAAgB,KAAKxJ,KAAL,CAAW0H,MAA3B;AACD;;AAED1H,mBAAK,CAACyJ,IAAN,CAAW;AAAErJ,mBAAG,EAAEmU,QAAP;AAAiBxV,oBAAI,EAAEtC,MAAM,CAACsC;AAA9B,eAAX;AACD;;AAED,mBAAOiB,KAAP;AACD;;;iBAED,4BAAmB;AACjB,iBAAKmY,aAAL,CAAmBjW,IAAnB,GAA0B,KAAKkB,iBAAL,CAAuB,MAAvB,CAA1B;AACA,iBAAK+U,aAAL,CAAmBhW,MAAnB,GAA4B,KAAKiB,iBAAL,CAAuB,QAAvB,CAA5B;AACA,iBAAK+U,aAAL,CAAmB/V,KAAnB,GAA2B,KAAKgB,iBAAL,CAAuB,OAAvB,CAA3B;;AACA,gBAAI,CAAC,KAAKgV,SAAV,EAAqB;AACnB,mBAAKzc,EAAL,CAAQuY,aAAR;AACD;AACF;;;iBAED,2BAAkB3X,KAAlB,EAA+B;AAC7B,gBAAM8G,MAAM,GAAG,KAAKT,kBAApB;AACA,gBAAMf,OAAO,GAAG,KAAKA,OAArB;AAEA,gBAAMD,MAAM,GAAG;AACbrD,mBAAK,YAAK8E,MAAM,CAAC9G,KAAD,CAAX;AADQ,aAAf;;AAIA,gBAAIA,KAAK,KAAK,QAAd,EAAwB;AACtB,gEAAA+G,WAAA,EAAY1B,MAAZ,EAAoBC,OAAO,GAAG,CAAC,CAA/B,EAAkC,CAAlC;AACD,aAFD,MAEO,IAAItF,KAAK,KAAK,OAAd,EAAuB;AAC5B,kBAAMkH,SAAS,GAAGJ,MAAM,CAACK,KAAP,GAAe,KAAK5B,UAAtC;AACA,kBAAM8B,MAAM,GAAGH,SAAS,GAAG,CAAC,CAA5B;AACA,gEAAAH,WAAA,EAAY1B,MAAZ,EAAoBgC,MAApB,EAA4B,CAA5B;AACD;;AAED,mBAAOhC,MAAP;AACD;;;;;;;yBAxQU0T,yB,EAAwB,6H;AAAA,O;;;cAAxBA,yB;AAAwB,yC;AAAA,0C;AAAA,mB;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAtDjC;;AAGE;AAAA,qBAAW,IAAA8D,iBAAA,QAAX;AAAoC,aAApC,EAAqC,eAArC,EAAqC;AAAA,qBACpB,IAAAC,eAAA,QADoB;AACG,aADxC;;AAKA;;AAuCF;;;;AA1CE;;AAIuB;;AAAA,mGAAkB,cAAlB,EAAkB,iBAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCvBhBC,oC,GACX,8CAAmBzY,QAAnB,EAA+C;AAAA;;AAA5B,aAAAA,QAAA,GAAAA,QAAA;AAA8B,O;;;yBADtCyY,oC,EAAmC,uH;AAAA,O;;;cAAnCA,oC;AAAmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCDnClE,4B;AADb;AAAA;;AAEE;;;;AAIS,eAAA1Y,SAAA,GAA8D,CAA9D;AAYT;;;;AAGU,eAAAqE,MAAA,GAA4B,IAAI,2CAAAlF,YAAJ,EAA5B;AA+BX;;;;eAtCC,eAAY;AACV,mBAAO,KAAKmF,cAAL,IAAuB,KAAKC,cAAnC;AACD;AAOD;;;;;;iBAGA,yBAAgB3E,GAAhB,EAAwB;AACtB,iBAAKyE,MAAL,CAAY3E,IAAZ,CAAiB;AACfmD,kBAAI,EAAE,KADS;AAEf/C,mBAAK,EAAEF;AAFQ,aAAjB;AAID;AAED;;;;;;iBAGA,yBAAa;AACX,iBAAKyE,MAAL,CAAY3E,IAAZ,CAAiB;AACfmD,kBAAI,EAAE,KADS;AAEf/C,mBAAK,EAAE;AAFQ,aAAjB;AAID;AAED;;;;;;iBAGA,2BAAe;AACb,iBAAKuE,MAAL,CAAY3E,IAAZ,CAAiB;AACfmD,kBAAI,EAAE,KADS;AAEf/C,mBAAK,EAAE;AAFQ,aAAjB;AAID;;;;;;;yBAlDU4Y,4B;AAA2B,O;;;cAA3BA,4B;AAA2B,iD;AAAA;AAAA;mFAUxB,4DAAAkE,mC,EAAqC,C,EAAQ,2CAAApY,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV7D;;;;;;;;;;UASaqY,mB;AAcX,qCAAY7d,OAAZ,EAAiC;AAAA;;AAXxB,eAAA8d,KAAA,GAAiB,IAAjB;AACA,eAAAC,KAAA,GAAiB,IAAjB;AAEC,eAAAC,SAAA,GAA+B,IAAI,2CAAA7d,YAAJ,EAA/B;AACA,eAAA0c,QAAA,GAA8B,IAAI,2CAAA1c,YAAJ,EAA9B;AACA,eAAA8d,OAAA,GAA6B,IAAI,2CAAA9d,YAAJ,EAA7B;AAGV,eAAA+d,UAAA,GAAsB,KAAtB;AAIE,eAAKle,OAAL,GAAeA,OAAO,CAACsB,aAAvB;AACD;;;;iBAED,qBAAYyV,OAAZ,EAAkC;AAChC,gBAAIA,OAAO,CAAC,iBAAD,CAAP,IAA8BA,OAAO,CAAC,iBAAD,CAAP,CAA2BoH,YAAzD,IAAyE,KAAKC,SAAL,CAAevB,QAA5F,EAAsG;AACpG,mBAAKwB,WAAL,CAAiBtH,OAAO,CAAC,iBAAD,CAAP,CAA2BoH,YAA5C;AACD;AACF;;;iBAED,uBAAW;AACT,iBAAKG,oBAAL;AACD;;;iBAED,mBAAU1a,KAAV,EAA2B;AACzB,gBAAI,CAAC,KAAKsa,UAAV,EAAsB;AAEtB,iBAAKA,UAAL,GAAkB,KAAlB;AACA,iBAAKle,OAAL,CAAaue,SAAb,CAAuBC,MAAvB,CAA8B,UAA9B;;AAEA,gBAAI,KAAKlF,YAAT,EAAuB;AACrB,mBAAKgF,oBAAL;;AACA,mBAAKL,OAAL,CAAavd,IAAb,CAAkB;AAChBkD,qBAAK,EAALA,KADgB;AAEhB5D,uBAAO,EAAE,KAAKA,OAFE;AAGhByQ,qBAAK,EAAE,KAAK2N;AAHI,eAAlB;AAKD;AACF;;;iBAED,qBAAYxa,KAAZ,EAA6B;AAAA;;AAC3B;AACA,gBAAM6a,SAAS,GAAiB7a,KAAK,CAACK,MAAN,CAAcsa,SAAd,CAAwBG,QAAxB,CAAiC,WAAjC,CAAhC;;AAEA,gBAAID,SAAS,KAAK,KAAKX,KAAL,IAAc,KAAKC,KAAxB,CAAb,EAA6C;AAC3Cna,mBAAK,CAACQ,cAAN;AACA,mBAAK8Z,UAAL,GAAkB,IAAlB;AAEA,kBAAMS,YAAY,GAAG;AAAEjJ,iBAAC,EAAE9R,KAAK,CAACgb,OAAX;AAAoBC,iBAAC,EAAEjb,KAAK,CAACkb;AAA7B,eAArB;AAEA,kBAAMC,OAAO,GAAG,sCAAAC,SAAA,EAAUC,QAAV,EAAoB,SAApB,CAAhB;AACA,mBAAK3F,YAAL,GAAoByF,OAAO,CAACpU,SAAR,CAAkB,UAACuU,EAAD;AAAA,uBAAoB,OAAI,CAACC,SAAL,CAAeD,EAAf,CAApB;AAAA,eAAlB,CAApB;AAEA,kBAAME,YAAY,GAAG,sCAAAJ,SAAA,EAAUC,QAAV,EAAoB,WAApB,EAClB1b,IADkB,CACb,gDAAA8b,SAAA,EAAUN,OAAV,CADa,EAElBpU,SAFkB,CAER,UAACuU,EAAD;AAAA,uBAAoB,OAAI,CAACI,IAAL,CAAUJ,EAAV,EAAcP,YAAd,CAApB;AAAA,eAFQ,CAArB;AAIA,mBAAKrF,YAAL,CAAkBlM,GAAlB,CAAsBgS,YAAtB;AAEA,mBAAKpB,SAAL,CAAetd,IAAf,CAAoB;AAClBkD,qBAAK,EAALA,KADkB;AAElB5D,uBAAO,EAAE,KAAKA,OAFI;AAGlByQ,qBAAK,EAAE,KAAK2N;AAHM,eAApB;AAKD;AACF;;;iBAED,cAAKxa,KAAL,EAAwB+a,YAAxB,EAA8D;AAC5D,gBAAI,CAAC,KAAKT,UAAV,EAAsB;AAEtB,gBAAMxI,CAAC,GAAG9R,KAAK,CAACgb,OAAN,GAAgBD,YAAY,CAACjJ,CAAvC;AACA,gBAAMmJ,CAAC,GAAGjb,KAAK,CAACkb,OAAN,GAAgBH,YAAY,CAACE,CAAvC;AAEA,gBAAI,KAAKf,KAAT,EAAgB,KAAK9d,OAAL,CAAauf,KAAb,CAAmB/Y,IAAnB,aAA6BkP,CAA7B;AAChB,gBAAI,KAAKqI,KAAT,EAAgB,KAAK/d,OAAL,CAAauf,KAAb,CAAmBC,GAAnB,aAA4BX,CAA5B;AAEhB,iBAAK7e,OAAL,CAAaue,SAAb,CAAuBnR,GAAvB,CAA2B,UAA3B;AAEA,iBAAKyP,QAAL,CAAcnc,IAAd,CAAmB;AACjBkD,mBAAK,EAALA,KADiB;AAEjB5D,qBAAO,EAAE,KAAKA,OAFG;AAGjByQ,mBAAK,EAAE,KAAK2N;AAHK,aAAnB;AAKD;;;iBAEO,gCAAoB;AAC1B,gBAAI,KAAK9E,YAAT,EAAuB;AACrB,mBAAKA,YAAL,CAAkBrO,WAAlB;AACA,mBAAKqO,YAAL,GAAoB7V,SAApB;AACD;AACF;;;;;;;yBA9FUoa,mB,EAAkB,sH;AAAA,O;;;cAAlBA,mB;AAAkB,0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPlB4B,mB;AADb;AAAA;;AAEW,eAAAC,YAAA,GAAwB,IAAxB;AAEA,eAAAC,QAAA,GAAmB,GAAnB;AAEC,eAAAC,cAAA,GAAoC,IAAI,2CAAAzf,YAAJ,EAApC;AACA,eAAA0f,YAAA,GAAkC,IAAI,2CAAA1f,YAAJ,EAAlC;AACA,eAAA2f,YAAA,GAAkC,IAAI,2CAAA3f,YAAJ,EAAlC;AAKV,eAAA4f,MAAA,GAAiB,CAAjB;AACA,eAAAC,MAAA,GAAiB,CAAjB;AAmGD;;;;eA/FC,eACS;AACP,mBAAO,KAAKC,QAAZ;AACD;;;eAED,eACe;AACb,mBAAO,KAAKC,cAAZ;AACD;;;iBAGD,qBAAYtc,KAAZ,EAA6B;AAAA;;AAC3B;AACA,gBAAIA,KAAK,CAACuc,KAAN,KAAgB,CAAhB,IAAqB,CAAC,KAAKT,YAA/B,EAA6C,OAFlB,CAI3B;;AACA,gBAAMzb,MAAM,GAAgBL,KAAK,CAACK,MAAlC;AACA,gBAAIA,MAAM,CAACsa,SAAP,CAAiBG,QAAjB,CAA0B,eAA1B,CAAJ,EAAgD;AAEhD,iBAAKqB,MAAL,GAAcnc,KAAK,CAACgb,OAApB;AACA,iBAAKoB,MAAL,GAAcpc,KAAK,CAACkb,OAApB;AAEA,iBAAKmB,QAAL,GAAgB,IAAhB;AACA,iBAAKC,cAAL,GAAsB,KAAtB;AAEA,gBAAMnB,OAAO,GAAG,sCAAAC,SAAA,EAAUC,QAAV,EAAoB,SAApB,CAAhB;AACA,iBAAK3F,YAAL,GAAoByF,OAAO,CAACpU,SAAR,CAAkB,UAACuU,EAAD;AAAA,qBAAoB,OAAI,CAACC,SAAL,EAApB;AAAA,aAAlB,CAApB;AAEA,iBAAKiB,OAAL,GAAexT,UAAU,CAAC,YAAM;AAC9B,qBAAI,CAACsT,cAAL,GAAsB,IAAtB;;AACA,qBAAI,CAACN,cAAL,CAAoBlf,IAApB,CAAyB;AACvBkD,qBAAK,EAALA,KADuB;AAEvB6M,qBAAK,EAAE,OAAI,CAAC4P;AAFW,eAAzB;;AAKA,qBAAI,CAAC/G,YAAL,CAAkBlM,GAAlB,CACE,sCAAA4R,SAAA,EAAUC,QAAV,EAAoB,WAApB,EACG1b,IADH,CACQ,gDAAA8b,SAAA,EAAUN,OAAV,CADR,EAEGpU,SAFH,CAEa,UAAC2V,UAAD;AAAA,uBAA4B,OAAI,CAACC,WAAL,CAAiBD,UAAjB,CAA5B;AAAA,eAFb,CADF;;AAMA,qBAAI,CAACE,IAAL,CAAU5c,KAAV;AACD,aAdwB,EActB,KAAK+b,QAdiB,CAAzB;AAgBA,iBAAKa,IAAL,CAAU5c,KAAV;AACD;;;iBAED,qBAAYA,KAAZ,EAA6B;AAC3B,gBAAI,KAAKqc,QAAL,IAAiB,CAAC,KAAKC,cAA3B,EAA2C;AACzC,kBAAMO,MAAM,GAAG/U,IAAI,CAACgV,GAAL,CAAS9c,KAAK,CAACgb,OAAN,GAAgB,KAAKmB,MAA9B,IAAwC,EAAvD;AACA,kBAAMY,MAAM,GAAGjV,IAAI,CAACgV,GAAL,CAAS9c,KAAK,CAACkb,OAAN,GAAgB,KAAKkB,MAA9B,IAAwC,EAAvD;;AAEA,kBAAIS,MAAM,IAAIE,MAAd,EAAsB;AACpB,qBAAKC,QAAL;AACD;AACF;AACF;;;iBAED,cAAKhd,KAAL,EAAsB;AAAA;;AACpB,gBAAI,KAAKsc,cAAT,EAAyB;AACvB,mBAAKE,OAAL,GAAexT,UAAU,CAAC,YAAM;AAC9B,uBAAI,CAACiT,YAAL,CAAkBnf,IAAlB,CAAuB;AACrBkD,uBAAK,EAALA,KADqB;AAErB6M,uBAAK,EAAE,OAAI,CAAC4P;AAFS,iBAAvB;;AAIA,uBAAI,CAACG,IAAL,CAAU5c,KAAV;AACD,eANwB,EAMtB,EANsB,CAAzB;AAOD;AACF;;;iBAED,oBAAQ;AACNid,wBAAY,CAAC,KAAKT,OAAN,CAAZ;AACA,iBAAKF,cAAL,GAAsB,KAAtB;AACA,iBAAKD,QAAL,GAAgB,KAAhB;;AACA,iBAAK3B,oBAAL;;AAEA,iBAAKwB,YAAL,CAAkBpf,IAAlB,CAAuB;AACrB+P,mBAAK,EAAE,KAAK4P;AADS,aAAvB;AAGD;;;iBAED,qBAAS;AACP,iBAAKO,QAAL;AACD;;;iBAED,uBAAW;AACT,iBAAKtC,oBAAL;AACD;;;iBAEO,gCAAoB;AAC1B,gBAAI,KAAKhF,YAAT,EAAuB;AACrB,mBAAKA,YAAL,CAAkBrO,WAAlB;AACA,mBAAKqO,YAAL,GAAoB7V,SAApB;AACD;AACF;;;;;;;yBA/GUgc,mB;AAAkB,O;;;cAAlBA,mB;AAAkB,2C;AAAA,mB;AAAA;AAAA;;qBAAlB,uB;AAAmB,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSnBqB,mB;AAWX,qCAAYpb,OAAZ,EAAgEuZ,QAAhE,EAA+E;AAAA;;AAAf,eAAAA,QAAA,GAAAA,QAAA;AAVtD,eAAA7J,OAAA,GAA6B,IAAI,2CAAAjV,YAAJ,EAA7B;AACA,eAAA4gB,aAAA,GAAmC,IAAI,2CAAA5gB,YAAJ,EAAnC;AAUR,eAAK6gB,MAAL,GAActb,OAAO,CAAClB,IAAR,CAAa,EAAb,EAAiBuB,MAAjB,EAAd;AACD;;;;iBAED,8BAAkB;AAChB;AACA,iBAAKkb,mBAAL;AACA,iBAAKC,UAAL,CAAgBnK,OAAhB,CAAwBpM,SAAxB,CAAkC,KAAKsW,mBAAL,CAAyBzgB,IAAzB,CAA8B,IAA9B,CAAlC;AACD;;;iBAED,uBAAW;AACT,iBAAK0gB,UAAL,CAAgBhV,OAAhB,CAAwB,UAAAiV,CAAC,EAAI;AAC3BA,eAAC,CAACnD,SAAF,CAAY/S,WAAZ;AACAkW,eAAC,CAACtE,QAAF,CAAW5R,WAAX;AACAkW,eAAC,CAAClD,OAAF,CAAUhT,WAAV;AACD,aAJD;AAKD;;;iBAED,+BAAmB;AAAA;;AACjB,gBAAMmW,KAAK,GAAG,KAAKJ,MAAL,CAAYhb,IAAZ,CAAiB,KAAKqb,cAAL,EAAjB,CAAd;;AAEA,gBAAID,KAAJ,EAAW;AACT,kBAAMzW,SAAS,GAAG,SAAZA,SAAY,SAA0C;AAAA,oBAAvCwT,YAAuC,UAAvCA,YAAuC;AAAA,oBAAzBmD,aAAyB,UAAzBA,aAAyB;AAC1DrW,2BAAW,CAAC;AAAEqW,+BAAa,EAAbA;AAAF,iBAAD,CAAX;;AAEA,oBAAInD,YAAJ,EAAkB;AAChBA,8BAAY,CAACH,SAAb,CAAuBrT,SAAvB,CAAiC,OAAI,CAAC4W,WAAL,CAAiB/gB,IAAjB,CAAsB,OAAtB,CAAjC;AACA2d,8BAAY,CAACtB,QAAb,CAAsBlS,SAAtB,CAAgC,OAAI,CAAC6W,UAAL,CAAgBhhB,IAAhB,CAAqB,OAArB,CAAhC;AACA2d,8BAAY,CAACF,OAAb,CAAqBtT,SAArB,CAA+B,OAAI,CAAC8W,SAAL,CAAejhB,IAAf,CAAoB,OAApB,CAA/B;AACD;AACF,eARD;;AAUA,kBAAMyK,WAAW,GAAG,SAAdA,WAAc,SAA4B;AAAA,oBAAzBqW,aAAyB,UAAzBA,aAAyB;;AAC9C,oBAAIA,aAAJ,EAAmB;AACjBA,+BAAa,CAACtD,SAAd,CAAwB/S,WAAxB;AACAqW,+BAAa,CAACzE,QAAd,CAAuB5R,WAAvB;AACAqW,+BAAa,CAACrD,OAAd,CAAsBhT,WAAtB;AACD;AACF,eAND;;AAQAmW,mBAAK,CAACM,gBAAN,CAAuB/W,SAAvB,EAnBS,CAoBT;;AACAyW,mBAAK,CAACO,kBAAN,CAAyB1W,WAAzB;AACD;AACF;;;iBAED,uBAAW;AACT,iBAAK2W,SAAL,GAAiB,EAAjB;AAEA,gBAAIxV,CAAC,GAAG,CAAR;;AAHS,wDAIa,KAAK8U,UAAL,CAAgB/J,OAAhB,EAJb;AAAA;;AAAA;AAIT,qEAAiD;AAAA,oBAAtC0K,OAAsC;AAC/C,oBAAMC,GAAG,GAAGD,OAAO,CAAC7hB,OAApB;AACA,oBAAMwG,IAAI,GAAGsB,QAAQ,CAACga,GAAG,CAACC,UAAJ,CAAeza,QAAf,EAAD,EAA4B,CAA5B,CAArB;AACA,qBAAKsa,SAAL,CAAeC,OAAO,CAACzD,SAAR,CAAkB/a,IAAjC,IAAyC;AACvCmD,sBAAI,EAAJA,IADuC;AAEvCE,uBAAK,EAAEF,IAAI,GAAGsB,QAAQ,CAACga,GAAG,CAACE,WAAJ,CAAgB1a,QAAhB,EAAD,EAA6B,CAA7B,CAFiB;AAGvCC,uBAAK,EAAE6E,CAAC,EAH+B;AAIvCpM,yBAAO,EAAE8hB;AAJ8B,iBAAzC;AAMD;AAbQ;AAAA;AAAA;AAAA;AAAA;AAcV;;;iBAED,4BAAyC;AAAA,gBAA5B9hB,OAA4B,UAA5BA,OAA4B;AAAA,gBAAnByQ,KAAmB,UAAnBA,KAAmB;AAAA,gBAAZ7M,KAAY,UAAZA,KAAY;AACvC,gBAAMqe,OAAO,GAAG,KAAKL,SAAL,CAAenR,KAAK,CAACpN,IAArB,CAAhB;AACA,gBAAMY,MAAM,GAAG,KAAKgZ,QAAL,CAAcxM,KAAd,EAAqB7M,KAArB,CAAf;;AAEA,gBAAIK,MAAJ,EAAY;AACV,kBAAI,KAAKie,iBAAL,KAA2Bje,MAAM,CAACmI,CAAtC,EAAyC;AACvC,qBAAK2U,aAAL,CAAmBrgB,IAAnB,CAAwB;AACtBwP,2BAAS,EAAE,KAAKgS,iBADM;AAEtBnF,0BAAQ,EAAE9Y,MAAM,CAACmI,CAFK;AAGtB+Q,8BAAY,EAAE8E,OAAO,CAAC1a;AAHA,iBAAxB;AAKA,qBAAK2a,iBAAL,GAAyBje,MAAM,CAACmI,CAAhC;AACD;AACF,aATD,MASO,IAAI,KAAK8V,iBAAL,KAA2BD,OAAO,CAAC1a,KAAvC,EAA8C;AACnD,mBAAKwZ,aAAL,CAAmBrgB,IAAnB,CAAwB;AACtBwP,yBAAS,EAAE,KAAKgS,iBADM;AAEtB/E,4BAAY,EAAE8E,OAAO,CAAC1a;AAFA,eAAxB;AAIA,mBAAK2a,iBAAL,GAAyBD,OAAO,CAAC1a,KAAjC;AACD;AACF;;;iBAED,2BAAwC;AAAA,gBAA5BvH,OAA4B,UAA5BA,OAA4B;AAAA,gBAAnByQ,KAAmB,UAAnBA,KAAmB;AAAA,gBAAZ7M,KAAY,UAAZA,KAAY;AACtC,gBAAMqe,OAAO,GAAG,KAAKL,SAAL,CAAenR,KAAK,CAACpN,IAArB,CAAhB;AAEA,gBAAMY,MAAM,GAAG,KAAKgZ,QAAL,CAAcxM,KAAd,EAAqB7M,KAArB,CAAf;;AACA,gBAAIK,MAAJ,EAAY;AACV,mBAAKmR,OAAL,CAAa1U,IAAb,CAAkB;AAChBwP,yBAAS,EAAE+R,OAAO,CAAC1a,KADH;AAEhBwV,wBAAQ,EAAE9Y,MAAM,CAACmI,CAFD;AAGhBqE,qBAAK,EAALA;AAHgB,eAAlB;AAKD;;AAED,iBAAKyR,iBAAL,GAAyBze,SAAzB;AACAzD,mBAAO,CAACuf,KAAR,CAAc/Y,IAAd,GAAqB,MAArB;AACD;;;iBAED,kBAASiK,KAAT,EAAqB7M,KAArB,EAA+B;AAAA;;AAC7B,gBAAIwI,CAAC,GAAG,CAAR;AACA,gBAAMsJ,CAAC,GAAG9R,KAAK,CAAC8R,CAAN,IAAW9R,KAAK,CAACgb,OAA3B;AACA,gBAAMC,CAAC,GAAGjb,KAAK,CAACib,CAAN,IAAWjb,KAAK,CAACkb,OAA3B;AACA,gBAAMqD,OAAO,GAAG,KAAKlD,QAAL,CAAcmD,iBAAd,CAAgC1M,CAAhC,EAAmCmJ,CAAnC,CAAhB;;AAJ6B,uCAMlBxb,IANkB;AAO3B;AACA,kBAAMqJ,GAAG,GAAG,OAAI,CAACkV,SAAL,CAAeve,IAAf,CAAZ,CAR2B,CAU3B;;AACA,kBAAIoN,KAAK,CAACpN,IAAN,KAAeA,IAAf,IAAuB8e,OAAO,CAAC3d,IAAR,CAAa,UAAC6d,EAAD;AAAA,uBAAaA,EAAE,KAAK3V,GAAG,CAAC1M,OAAxB;AAAA,eAAb,CAA3B,EAA0E;AACxE;AAAA,qBAAO;AACL0M,uBAAG,EAAHA,GADK;AAELN,qBAAC,EAADA;AAFK;AAAP;AAID;;AAEDA,eAAC;AAlB0B;;AAM7B,iBAAK,IAAM/I,IAAX,IAAmB,KAAKue,SAAxB,EAAmC;AAAA,+BAAxBve,IAAwB;;AAAA;AAalC;AACF;;;iBAEO,0BAAc;AACpB,mBAAO,KAAK6d,UAAL,CAAgB/J,OAAhB,GAA0BrF,MAA1B,CAAiC,UAACwQ,GAAD,EAAMC,IAAN,EAAe;AACrDD,iBAAG,CAACC,IAAI,CAACnE,SAAL,CAAe3W,IAAhB,CAAH,GAA2B8a,IAA3B;AACA,qBAAOD,GAAP;AACD,aAHM,EAGJ,EAHI,CAAP;AAID;;;;;;;yBA1IUxB,mB,EAAkB,2H,EAAA,gEAWiB,6CAAA0B,QAXjB,C;AAWyB,O;;;cAX3C1B,mB;AAAkB,0C;AAAA;AAAA;mFAIZ,kDAAAjD,kB,EAAoB,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCC1B4E,oB;AAYX,sCAAYziB,OAAZ,EAAyC2O,QAAzC,EAA8D;AAAA;;AAArB,eAAAA,QAAA,GAAAA,QAAA;AAXhC,eAAA+T,aAAA,GAAyB,IAAzB;AAIC,eAAArN,MAAA,GAA4B,IAAI,2CAAAlV,YAAJ,EAA5B;AAIV,eAAAwiB,QAAA,GAAoB,KAApB;AAIE,eAAK3iB,OAAL,GAAeA,OAAO,CAACsB,aAAvB;AACD;;;;iBAED,2BAAe;AACb,gBAAMshB,SAAS,GAAG,KAAKjU,QAAvB;AACA,iBAAKkU,YAAL,GAAoBD,SAAS,CAACE,aAAV,CAAwB,MAAxB,CAApB;;AACA,gBAAI,KAAKJ,aAAT,EAAwB;AACtBE,uBAAS,CAACG,QAAV,CAAmB,KAAKF,YAAxB,EAAsC,eAAtC;AACD,aAFD,MAEO;AACLD,uBAAS,CAACG,QAAV,CAAmB,KAAKF,YAAxB,EAAsC,8BAAtC;AACD;;AACDD,qBAAS,CAACI,WAAV,CAAsB,KAAKhjB,OAA3B,EAAoC,KAAK6iB,YAAzC;AACD;;;iBAED,uBAAW;AACT,iBAAKvE,oBAAL;;AACA,gBAAI,KAAK3P,QAAL,CAAcsU,WAAlB,EAA+B;AAC7B,mBAAKtU,QAAL,CAAcsU,WAAd,CAA0B,KAAKJ,YAA/B;AACD,aAFD,MAEO,IAAI,KAAKA,YAAT,EAAuB;AAC5B,mBAAKlU,QAAL,CAAcuU,WAAd,CAA0B,KAAKvU,QAAL,CAAcK,UAAd,CAAyB,KAAK6T,YAA9B,CAA1B,EAAuE,KAAKA,YAA5E;AACD;AACF;;;iBAED,qBAAS;AACP,iBAAKF,QAAL,GAAgB,KAAhB;;AAEA,gBAAI,KAAKrJ,YAAL,IAAqB,CAAC,KAAKA,YAAL,CAAkB6J,MAA5C,EAAoD;AAClD,mBAAK7E,oBAAL;;AACA,mBAAKjJ,MAAL,CAAY3U,IAAZ,CAAiB,KAAKV,OAAL,CAAaojB,WAA9B;AACD;AACF;;;iBAGD,qBAAYxf,KAAZ,EAA6B;AAAA;;AAC3B,gBAAMyf,QAAQ,GAAiBzf,KAAK,CAACK,MAAN,CAAcsa,SAAd,CAAwBG,QAAxB,CAAiC,eAAjC,CAA/B;AACA,gBAAM4E,YAAY,GAAG,KAAKtjB,OAAL,CAAaojB,WAAlC;AACA,gBAAMG,gBAAgB,GAAG3f,KAAK,CAAC4f,OAA/B;;AAEA,gBAAIH,QAAJ,EAAc;AACZzf,mBAAK,CAACS,eAAN;AACA,mBAAKse,QAAL,GAAgB,IAAhB;AAEA,kBAAM5D,OAAO,GAAG,sCAAAC,SAAA,EAAUC,QAAV,EAAoB,SAApB,CAAhB;AACA,mBAAK3F,YAAL,GAAoByF,OAAO,CAACpU,SAAR,CAAkB,UAACuU,EAAD;AAAA,uBAAoB,OAAI,CAACC,SAAL,EAApB;AAAA,eAAlB,CAApB;AAEA,kBAAMC,YAAY,GAAG,sCAAAJ,SAAA,EAAUC,QAAV,EAAoB,WAApB,EAClB1b,IADkB,CACb,gDAAA8b,SAAA,EAAUN,OAAV,CADa,EAElBpU,SAFkB,CAER,UAACnL,CAAD;AAAA,uBAAmB,OAAI,CAAC8f,IAAL,CAAU9f,CAAV,EAAa8jB,YAAb,EAA2BC,gBAA3B,CAAnB;AAAA,eAFQ,CAArB;AAIA,mBAAKjK,YAAL,CAAkBlM,GAAlB,CAAsBgS,YAAtB;AACD;AACF;;;iBAED,cAAKxb,KAAL,EAAwB0f,YAAxB,EAA8CC,gBAA9C,EAAsE;AACpE,gBAAME,SAAS,GAAG7f,KAAK,CAAC4f,OAAN,GAAgBD,gBAAlC;AACA,gBAAMG,QAAQ,GAAGJ,YAAY,GAAGG,SAAhC;AAEA,gBAAME,YAAY,GAAG,CAAC,KAAK7gB,QAAN,IAAkB4gB,QAAQ,IAAI,KAAK5gB,QAAxD;AACA,gBAAM8gB,aAAa,GAAG,CAAC,KAAK7gB,QAAN,IAAkB2gB,QAAQ,IAAI,KAAK3gB,QAAzD;;AAEA,gBAAI4gB,YAAY,IAAIC,aAApB,EAAmC;AACjC,mBAAK5jB,OAAL,CAAauf,KAAb,CAAmB1c,KAAnB,aAA8B6gB,QAA9B;AACD;AACF;;;iBAEO,gCAAuB;AAC7B,gBAAI,KAAKpK,YAAT,EAAuB;AACrB,mBAAKA,YAAL,CAAkBrO,WAAlB;AACA,mBAAKqO,YAAL,GAAoB7V,SAApB;AACD;AACF;;;;;;;yBAnFUgf,oB,EAAmB,sH,EAAA,qH;AAAA,O;;;cAAnBA,oB;AAAmB,2C;AAAA,mB;AAAA;AAAA;;qBAAnB,uB;AAAmB,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBhC;;;;;;;;;;;;;UAYaoB,oB;AAQX,sCAAoB7jB,OAApB,EAAiD8jB,IAAjD,EAA+D;AAAA;;AAA3C,eAAA9jB,OAAA,GAAAA,OAAA;AAA6B,eAAA8jB,IAAA,GAAAA,IAAA;AANjD,eAAAC,SAAA,GAAqB,KAArB;AAEU,eAAAC,OAAA,GAA6B,IAAI,2CAAA7jB,YAAJ,EAA7B;AAIuD;;;;iBAEjE,oBAAQ;AACN,iBAAK8jB,QAAL;AACD;;;iBAED,uBAAW;AACTpD,wBAAY,CAAC,KAAKT,OAAN,CAAZ;AACD;;;iBAED,8BAAkB;AAAA;;AAChB;AACA,iBAAK0D,IAAL,CAAUI,GAAV,CAAc,YAAM;AAClB,qBAAI,CAACH,SAAL,GAAiB,IAAjB;;AACA,qBAAI,CAACC,OAAL,CAAatjB,IAAb,CAAkB,IAAlB;AACD,aAHD;AAID;;;iBAED,oBAAQ;AAAA;;AACN,gBAAMyjB,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB;AACA,0CAAsC,OAAI,CAACnkB,OAAL,CAAasB,aAAnD;AAAA,kBAAQ8iB,YAAR,yBAAQA,YAAR;AAAA,kBAAsBpC,WAAtB,yBAAsBA,WAAtB;;AAEA,kBAAIoC,YAAY,IAAIpC,WAApB,EAAiC;AAC/BnB,4BAAY,CAAC,OAAI,CAACT,OAAN,CAAZ;;AACA,uBAAI,CAACiE,kBAAL;AACD,eAHD,MAGO;AACLxD,4BAAY,CAAC,OAAI,CAACT,OAAN,CAAZ;;AACA,uBAAI,CAAC0D,IAAL,CAAUQ,iBAAV,CAA4B,YAAM;AAChC,yBAAI,CAAClE,OAAL,GAAexT,UAAU,CAAC;AAAA,2BAAMuX,KAAK,EAAX;AAAA,mBAAD,EAAgB,EAAhB,CAAzB;AACD,iBAFD;AAGD;AACF,aAbD;;AAeA,iBAAK/D,OAAL,GAAexT,UAAU,CAAC;AAAA,qBAAMuX,KAAK,EAAX;AAAA,aAAD,CAAzB;AACD;;;;;;;yBA3CUN,oB,EAAmB,sH,EAAA,kH;AAAA,O;;;cAAnBA,oB;AAAmB,mD;AAAA,mB;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCoEnBU,mB;;;;;;;;AACX;;;;AAIA,2BAAe5Q,aAAf,EAAiD;AAC/C,mBAAO;AACL6Q,sBAAQ,EAAED,mBADL;AAELE,uBAAS,EAAE,CAAC;AAAEC,uBAAO,EAAE,eAAX;AAA4BC,wBAAQ,EAAEhR;AAAtC,eAAD;AAFN,aAAP;AAID;;;;;;;yBAVU4Q,mB;AAAkB,O;;;cAAlBA;;;mBA9CA,CAAC,gEAAAK,eAAD,EAAkB,iEAAAC,gBAAlB,EAAoC,8DAAAC,oBAApC,C;AAAyD,kBAD3D,CAAC,8CAAAC,YAAD,CAC2D;;;;6HA8CzDR,mB,EAAkB;AAAA,yBA5C3B,0EAAArK,gCA4C2B,EA3C3B,8DAAA2J,mBA2C2B,EA1C3B,6DAAAhG,kBA0C2B,EAzC3B,8DAAA4E,mBAyC2B,EAxC3B,6DAAA3B,kBAwC2B,EAvC3B,8DAAArB,kBAuC2B,EAtC3B,iEAAAjR,iBAsC2B,EArC3B,8DAAAiF,kBAqC2B,EApC3B,mEAAAX,wBAoC2B,EAnC3B,kEAAA8G,wBAmC2B,EAlC3B,uEAAA0B,4BAkC2B,EAjC3B,8DAAA5S,sBAiC2B,EAhC3B,kEAAAyR,wBAgC2B,EA/B3B,iEAAAE,uBA+B2B,EA9B3B,sEAAA5L,oBA8B2B,EA7B3B,kEAAApI,yBA6B2B,EA5B3B,0EAAAZ,4BA4B2B,EA3B3B,0EAAAiU,2BA2B2B,EA1B3B,2EAAAtU,6BA0B2B,EAzB3B,mFAAAwY,mCAyB2B,EAxB3B,mEAAA7d,0BAwB2B,EAvB3B,mEAAA2P,2BAuB2B,EAtB3B,0EAAAmD,8BAsB2B,EArB3B,wEAAAD,4BAqB2B,EApB3B,iEAAAY,6BAoB2B,EAnB3B,kEAAAmG,wBAmB2B,EAlB3B,oFAAAzU,qCAkB2B,EAjB3B,6EAAA8M,4BAiB2B;AAjBC,oBA9BpB,8CAAA+S,YA8BoB,CAiBD;AA/CP,oBAiCpB,8DAAAtR,kBAjCoB,EAkCpB,0EAAAiG,2BAlCoB,EAmCpB,2EAAAtU,6BAnCoB,EAoCpB,mFAAAwY,mCApCoB,EAqCpB,mEAAA9K,wBArCoB,EAsCpB,0EAAAD,8BAtCoB,EAuCpB,wEAAAD,4BAvCoB,EAwCpB,iEAAAY,6BAxCoB,EAyCpB,0EAAA0G,gCAzCoB,EA0CpB,kEAAAP,wBA1CoB,EA2CpB,iEAAAU,uBA3CoB,EA4CpB,oFAAAnV,qCA5CoB;AA+CO,S;AAHU,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EzC;;;;;;UAKa4f,qB;AADb;AAAA;;AAEU,eAAAE,kBAAA,GAAqB,IAAI,kCAAAC,OAAJ,EAArB;AAST;;;;eAPC,eAAuB;AACrB,mBAAO,KAAKD,kBAAL,CAAwBE,YAAxB,EAAP;AACD;;;iBAED,yBAAa;AACX,iBAAKF,kBAAL,CAAwBzM,IAAxB;AACD;;;;;;;yBATUuM,qB;AAAoB,O;;;eAApBA,qB;AAAoB,iBAApBA,qBAAoB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPjC;;;;;;UAKaD,iB;;;;;;;iBACX,uBAAc7kB,OAAd,EAA8B;AAC5B,mBAAOA,OAAO,CAACmlB,qBAAR,EAAP;AACD;;;;;;;yBAHUN,iB;AAAgB,O;;;eAAhBA,iB;AAAgB,iBAAhBA,iBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ7B;;;;;;UAKaD,gB;AAGX,kCAAsC3F,QAAtC,EAAqD;AAAA;;AAAf,eAAAA,QAAA,GAAAA,QAAA;AAFtC,eAAApc,KAAA,GAAgB,KAAKuiB,QAAL,EAAhB;AAEuD;;;;iBAEvD,oBAAQ;AACN,gBAAMC,KAAK,GAAG,KAAKpG,QAAL,CAAc6D,aAAd,CAA4B,KAA5B,CAAd;AACAuC,iBAAK,CAAC9F,KAAN,CAAY+F,UAAZ,GAAyB,QAAzB;AACAD,iBAAK,CAAC9F,KAAN,CAAY1c,KAAZ,GAAoB,OAApB;AACAwiB,iBAAK,CAAC9F,KAAN,CAAYgG,eAAZ,GAA8B,WAA9B;AACA,iBAAKtG,QAAL,CAAcuG,IAAd,CAAmBxC,WAAnB,CAA+BqC,KAA/B;AAEA,gBAAMI,aAAa,GAAGJ,KAAK,CAACrD,WAA5B;AACAqD,iBAAK,CAAC9F,KAAN,CAAYmG,QAAZ,GAAuB,QAAvB;AAEA,gBAAMC,KAAK,GAAG,KAAK1G,QAAL,CAAc6D,aAAd,CAA4B,KAA5B,CAAd;AACA6C,iBAAK,CAACpG,KAAN,CAAY1c,KAAZ,GAAoB,MAApB;AACAwiB,iBAAK,CAACrC,WAAN,CAAkB2C,KAAlB;AAEA,gBAAMC,eAAe,GAAGD,KAAK,CAAC3D,WAA9B;AACAqD,iBAAK,CAACrW,UAAN,CAAiBkU,WAAjB,CAA6BmC,KAA7B;AAEA,mBAAOI,aAAa,GAAGG,eAAvB;AACD;;;;;;;yBAvBUhB,gB,EAAe,uDAGN,6CAAApC,QAHM,C;AAGE,O;;;eAHjBoC,gB;AAAe,iBAAfA,gBAAe;;;;;;;;;;;;;;;;;;;;;;;;;ACR5B,UAAYiB,UAAZ;;AAAA,iBAAYA,SAAZ,EAAqB;AACnB;AACA;AACD,OAHD,EAAYA,UAAS,KAATA,UAAS,MAArB;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAYhS,WAAZ;;AAAA,iBAAYA,UAAZ,EAAsB;AACpB;AACA;AACA;AACD,OAJD,EAAYA,WAAU,KAAVA,WAAU,MAAtB;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAY8E,gBAAZ;;AAAA,iBAAYA,eAAZ,EAA2B;AACzB;AACA;AACD,OAHD,EAAYA,gBAAe,KAAfA,gBAAe,MAA3B;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAY9I,cAAZ;;AAAA,iBAAYA,aAAZ,EAAyB;AACvB;AACA;AACA;AACA;AACA;AACD,OAND,EAAYA,cAAa,KAAbA,cAAa,MAAzB;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAYjN,cAAZ;;AAAA,iBAAYA,aAAZ,EAAyB;AACvB;AACA;AACD,OAHD,EAAYA,cAAa,KAAbA,cAAa,MAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA,UAAYwR,SAAZ;;AAAA,iBAAYA,QAAZ,EAAoB;AAClB;AACA;AACD,OAHD,EAAYA,SAAQ,KAARA,SAAQ,MAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;AAIO,eAAS0R,UAAT,CAAmBC,GAAnB,EAA8B;AACnC;AACAA,WAAG,GAAGA,GAAG,CAACnhB,OAAJ,CAAY,gBAAZ,EAA8B,GAA9B,CAAN,CAFmC,CAGnC;;AACAmhB,WAAG,GAAGA,GAAG,CAACnhB,OAAJ,CAAY,mBAAZ,EAAiC,KAAjC,CAAN,CAJmC,CAMnC;;AACAmhB,WAAG,GAAGA,GAAG,CACNnhB,OADG,CACK,0BADL,EACiC,EADjC,EAEHohB,IAFG,GAGHC,WAHG,EAAN,CAPmC,CAYnC;;AACAF,WAAG,GAAGA,GAAG,CAACnhB,OAAJ,CAAY,sBAAZ,EAAoC,UAAUshB,CAAV,EAAaC,CAAb,EAAgBpN,CAAhB,EAAmB;AAC3D,iBAAOoN,CAAC,CAACH,IAAF,KAAWjN,CAAC,CAACqN,WAAF,EAAlB;AACD,SAFK,CAAN;AAIA,eAAOL,GAAP;AACD;AAED;;;;;;AAIO,eAASM,YAAT,CAAqBN,GAArB,EAAgC;AACrC,eAAOA,GAAG,CAACnhB,OAAJ,CAAY,UAAZ,EAAwB,UAAA0hB,KAAK;AAAA,4BAAQA,KAAR;AAAA,SAA7B,EAA8C1hB,OAA9C,CAAsD,IAAtD,EAA4D,UAAA0hB,KAAK;AAAA,iBAAIA,KAAK,CAACF,WAAN,EAAJ;AAAA,SAAjE,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBD;;;;;AAGO,eAAS/P,kBAAT,CAA2B/N,OAA3B,EAAmD;AACxD,YAAI,CAACA,OAAL,EAAc,OAD0C,CAGxD;AACA;AACA;;AACA,YAAIie,eAAe,GAAY,KAA/B;;AANwD,oDAQnCje,OARmC;AAAA;;AAAA;AAQxD,iEAA8B;AAAA,gBAAnBvH,MAAmB;;AAC5B,gBAAI,CAACA,MAAM,CAAC0G,IAAZ,EAAkB;AAChB1G,oBAAM,CAAC0G,IAAP,GAAc,qCAAA7H,EAAA,GAAd;AACD,aAH2B,CAK5B;AACA;;;AACA,gBAAI4mB,kBAAiB,CAACzlB,MAAM,CAACsC,IAAR,CAAjB,IAAkCtC,MAAM,CAACmb,IAA7C,EAAmD;AACjDnb,oBAAM,CAACsC,IAAP,GAAc,6CAAAyiB,SAAA,EAAU/kB,MAAM,CAACmb,IAAjB,CAAd;AACD;;AAED,gBAAI,CAACnb,MAAM,CAACqC,aAAZ,EAA2B;AACzBrC,oBAAM,CAACqC,aAAP,GAAuB,sDAAAqjB,aAAA,EAAc1lB,MAAM,CAACsC,IAArB,CAAvB;AACD,aAb2B,CAe5B;;;AACA,gBAAI,CAACmjB,kBAAiB,CAACzlB,MAAM,CAACsC,IAAR,CAAlB,IAAmCmjB,kBAAiB,CAACzlB,MAAM,CAACmb,IAAR,CAAxD,EAAuE;AACrEnb,oBAAM,CAACmb,IAAP,GAAc,6CAAAmK,WAAA,EAAYK,MAAM,CAAC3lB,MAAM,CAACsC,IAAR,CAAlB,CAAd;AACD;;AAED,gBAAImjB,kBAAiB,CAACzlB,MAAM,CAACsC,IAAR,CAAjB,IAAkCmjB,kBAAiB,CAACzlB,MAAM,CAACmb,IAAR,CAAvD,EAAsE;AACpEnb,oBAAM,CAACmb,IAAP,GAAc,EAAd,CADoE,CAClD;AACnB;;AAED,gBAAI,CAACnb,MAAM,CAAC4lB,cAAP,CAAsB,YAAtB,CAAL,EAA0C;AACxC5lB,oBAAM,CAACgb,UAAP,GAAoB,IAApB;AACD;;AAED,gBAAI,CAAChb,MAAM,CAAC4lB,cAAP,CAAsB,UAAtB,CAAL,EAAwC;AACtC5lB,oBAAM,CAAC+a,QAAP,GAAkB,IAAlB;AACD;;AAED,gBAAI,CAAC/a,MAAM,CAAC4lB,cAAP,CAAsB,WAAtB,CAAL,EAAyC;AACvC5lB,oBAAM,CAAC6lB,SAAP,GAAmB,IAAnB;AACD;;AAED,gBAAI,CAAC7lB,MAAM,CAAC4lB,cAAP,CAAsB,eAAtB,CAAL,EAA6C;AAC3C5lB,oBAAM,CAAC8lB,aAAP,GAAuB,IAAvB;AACD;;AAED,gBAAI,CAAC9lB,MAAM,CAAC4lB,cAAP,CAAsB,OAAtB,CAAL,EAAqC;AACnC5lB,oBAAM,CAAC8B,KAAP,GAAe,GAAf;AACD;;AAED,gBAAI,CAAC9B,MAAM,CAAC4lB,cAAP,CAAsB,cAAtB,CAAL,EAA4C;AAC1C5lB,oBAAM,CAACgE,YAAP,GAAsB,KAAtB;AACD,aAFD,MAEO;AACL,kBAAIhE,MAAM,CAACgE,YAAP,IAAuB,CAACwhB,eAA5B,EAA6C;AAC3C;AACA;AACAA,+BAAe,GAAG,IAAlB;AACD,eAJD,MAIO;AACL;AACA;AACAxlB,sBAAM,CAACgE,YAAP,GAAsB,KAAtB;AACD;AACF;AACF;AAjEuD;AAAA;AAAA;AAAA;AAAA;AAkEzD;;AAEM,eAASyhB,kBAAT,CAA8B1lB,KAA9B,EAAyD;AAC9D,eAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK2C,SAAnC;AACD;AAED;;;;;AAGO,eAAS2T,mBAAT,CAA4B0P,SAA5B,EAAiE;AACtE,YAAMC,MAAM,GAAU,EAAtB;;AADsE,oDAEnDD,SAFmD;AAAA;;AAAA;AAEtE,iEAA8B;AAAA,gBAAnB5d,IAAmB;AAC5B,gBAAMoJ,GAAG,GAAQ,EAAjB;AAEA,gBAAM0U,KAAK,GAAGvkB,MAAM,CAACwkB,mBAAP,CAA2B/d,IAA3B,CAAd;;AAH4B,wDAIT8d,KAJS;AAAA;;AAAA;AAI5B,qEAA0B;AAAA,oBAAf3jB,IAAe;AACxBiP,mBAAG,CAACjP,IAAD,CAAH,GAAY6F,IAAI,CAAC7F,IAAD,CAAhB;AACD;AAN2B;AAAA;AAAA;AAAA;AAAA;;AAQ5B,gBAAI6F,IAAI,CAAC+S,cAAT,EAAyB;AACvB3J,iBAAG,CAAC2J,cAAJ,GAAqB/S,IAAI,CAAC+S,cAA1B;AACD;;AAED,gBAAI/S,IAAI,CAAChG,YAAT,EAAuB;AACrBoP,iBAAG,CAACpP,YAAJ,GAAmBgG,IAAI,CAAChG,YAAxB;AACD;;AAED,gBAAIgG,IAAI,CAACyJ,WAAT,EAAsB;AACpBL,iBAAG,CAACK,WAAJ,GAAkBzJ,IAAI,CAACyJ,WAAvB;AACD;;AAED,gBAAIzJ,IAAI,CAACqJ,eAAT,EAA0B;AACxBD,iBAAG,CAACC,eAAJ,GAAsBrJ,IAAI,CAACqJ,eAA3B;AACD;;AAEDwU,kBAAM,CAAChZ,IAAP,CAAYuE,GAAZ;AACD;AA3BqE;AAAA;AAAA;AAAA;AAAA;;AA6BtE,eAAOyU,MAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5GD;;;;;AAGO,eAASG,kBAAT,GAA0B;AAC/B,eAAO,EAAP;AACD;AAED;;;;;;AAIO,eAAST,cAAT,CAAuBpjB,IAAvB,EAA4C;AACjD,YAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,iBAAO6jB,kBAAP;AACD;;AAED,YAAI,OAAO7jB,IAAP,KAAgB,QAApB,EAA8B;AAC5B,iBAAO8jB,mBAAP;AACD,SAFD,MAEO;AACL;AACA,cAAI9jB,IAAI,CAAC+jB,OAAL,CAAa,GAAb,MAAsB,CAAC,CAA3B,EAA8B;AAC5B,mBAAOC,gBAAP;AACD,WAFD,MAEO;AACL,mBAAOC,mBAAP;AACD;AACF;AACF;AAED;;;;;;;;AAMO,eAASH,mBAAT,CAA4BvmB,GAA5B,EAAwC2G,KAAxC,EAAqD;AAC1D,YAAI3G,GAAG,IAAI,IAAX,EAAiB;AACf,iBAAO,EAAP;AACD,SAHyD,CAI1D;;;AACA,YAAI,CAACA,GAAD,IAAQ2G,KAAK,IAAI,IAArB,EAA2B;AACzB,iBAAO3G,GAAP;AACD;;AAED,YAAME,KAAK,GAAGF,GAAG,CAAC2G,KAAD,CAAjB;;AACA,YAAIzG,KAAK,IAAI,IAAb,EAAmB;AACjB,iBAAO,EAAP;AACD;;AACD,eAAOA,KAAP;AACD;AAED;;;;;;;;AAMO,eAASwmB,mBAAT,CAA4BC,GAA5B,EAAsCC,SAAtC,EAAuD;AAC5D,YAAID,GAAG,IAAI,IAAX,EAAiB;AACf,iBAAO,EAAP;AACD;;AACD,YAAI,CAACA,GAAD,IAAQ,CAACC,SAAb,EAAwB;AACtB,iBAAOD,GAAP;AACD;;AAED,YAAMzmB,KAAK,GAAGymB,GAAG,CAACC,SAAD,CAAjB;;AACA,YAAI1mB,KAAK,IAAI,IAAb,EAAmB;AACjB,iBAAO,EAAP;AACD;;AACD,eAAOA,KAAP;AACD;AAED;;;;;AAGO,eAASumB,gBAAT,CAAyBE,GAAzB,EAAmCE,IAAnC,EAA+C;AACpD,YAAIF,GAAG,IAAI,IAAX,EAAiB;AACf,iBAAO,EAAP;AACD;;AACD,YAAI,CAACA,GAAD,IAAQ,CAACE,IAAb,EAAmB;AACjB,iBAAOF,GAAP;AACD,SANmD,CAQpD;AACA;;;AACA,YAAIG,OAAO,GAAGH,GAAG,CAACE,IAAD,CAAjB;;AACA,YAAIC,OAAO,KAAKjkB,SAAhB,EAA2B;AACzB,iBAAOikB,OAAP;AACD;;AAEDA,eAAO,GAAGH,GAAV;AACA,YAAMI,KAAK,GAAGF,IAAI,CAACE,KAAL,CAAW,GAAX,CAAd;;AAEA,YAAIA,KAAK,CAAC3b,MAAV,EAAkB;AAChB,eAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGub,KAAK,CAAC3b,MAA1B,EAAkCI,CAAC,EAAnC,EAAuC;AACrCsb,mBAAO,GAAGA,OAAO,CAACC,KAAK,CAACvb,CAAD,CAAN,CAAjB,CADqC,CAGrC;;AACA,gBAAIsb,OAAO,KAAKjkB,SAAZ,IAAyBikB,OAAO,KAAK,IAAzC,EAA+C;AAC7C,qBAAO,EAAP;AACD;AACF;AACF;;AAED,eAAOA,OAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9GD;;;;;AAGO,eAASzgB,aAAT,CAAsB6R,IAAtB,EAAmC;AACxC,YAAM8O,GAAG,GAA2C;AAClDphB,cAAI,EAAE,EAD4C;AAElDC,gBAAM,EAAE,EAF0C;AAGlDC,eAAK,EAAE;AAH2C,SAApD;;AAMA,YAAIoS,IAAJ,EAAU;AAAA,sDACUA,IADV;AAAA;;AAAA;AACR,mEAAwB;AAAA,kBAAbxG,GAAa;;AACtB,kBAAIA,GAAG,CAACuV,UAAR,EAAoB;AAClBD,mBAAG,CAACphB,IAAJ,CAASuH,IAAT,CAAcuE,GAAd;AACD,eAFD,MAEO,IAAIA,GAAG,CAACwV,WAAR,EAAqB;AAC1BF,mBAAG,CAAClhB,KAAJ,CAAUqH,IAAV,CAAeuE,GAAf;AACD,eAFM,MAEA;AACLsV,mBAAG,CAACnhB,MAAJ,CAAWsH,IAAX,CAAgBuE,GAAhB;AACD;AACF;AATO;AAAA;AAAA;AAAA;AAAA;AAUT;;AAED,eAAOsV,GAAP;AACD;AAED;;;;;AAGO,eAASzgB,kBAAT,CAA2B4gB,MAA3B,EAAwCC,GAAxC,EAAkD;AACvD,eAAO;AACLxhB,cAAI,EAAEyhB,iBAAgB,CAACF,MAAM,CAACvhB,IAAR,CADjB;AAELC,gBAAM,EAAEwhB,iBAAgB,CAACF,MAAM,CAACthB,MAAR,CAFnB;AAGLC,eAAK,EAAEuhB,iBAAgB,CAACF,MAAM,CAACrhB,KAAR,CAHlB;AAILsB,eAAK,EAAE0D,IAAI,CAACE,KAAL,CAAWqc,iBAAgB,CAACD,GAAD,CAA3B;AAJF,SAAP;AAMD;AAED;;;;;AAGO,eAASC,iBAAT,CAA0B3f,OAA1B,EAA0CjF,IAA1C,EAAyD;AAC9D,YAAI6kB,UAAU,GAAG,CAAjB;;AAEA,YAAI5f,OAAJ,EAAa;AAAA,sDACKA,OADL;AAAA;;AAAA;AACX,mEAAyB;AAAA,kBAAdyQ,CAAc;AACvB,kBAAMtB,GAAG,GAAGpU,IAAI,IAAI0V,CAAC,CAAC1V,IAAD,CAArB;AACA,kBAAMR,KAAK,GAAG4U,GAAG,GAAGsB,CAAC,CAAC1V,IAAD,CAAJ,GAAa0V,CAAC,CAAClW,KAAhC;AACAqlB,wBAAU,GAAGA,UAAU,GAAGC,UAAU,CAACtlB,KAAD,CAApC;AACD;AALU;AAAA;AAAA;AAAA;AAAA;AAMZ;;AAED,eAAOqlB,UAAP;AACD;AAED;;;;;AAGO,eAASE,kBAAT,CAA2B9f,OAA3B,EAAyCjF,IAAzC,EAAqD;AAC1D,YAAI6kB,UAAU,GAAG,CAAjB;;AAD0D,qDAGrC5f,OAHqC;AAAA;;AAAA;AAG1D,oEAA8B;AAAA,gBAAnBvH,MAAmB;AAC5B,gBAAM0W,GAAG,GAAGpU,IAAI,IAAItC,MAAM,CAACsC,IAAD,CAA1B;AACA6kB,sBAAU,GAAGA,UAAU,IAAIzQ,GAAG,GAAG1W,MAAM,CAACsC,IAAD,CAAT,GAAkBtC,MAAM,CAAC8B,KAAhC,CAAvB;AACD;AANyD;AAAA;AAAA;AAAA;AAAA;;AAQ1D,eAAOqlB,UAAP;AACD;;AAEM,eAASzf,gBAAT,CAAyB9G,GAAzB,EAAmC;AACxC,YAAM0mB,YAAY,GAAG,EAArB;;AACA,YAAM9f,SAAS,GAAGtB,aAAY,CAACtF,GAAD,CAA9B;;AAEA0mB,oBAAY,CAACta,IAAb,CAAkB;AAAElK,cAAI,EAAE,MAAR;AAAgByE,iBAAO,EAAEC,SAAS,CAAC,MAAD;AAAlC,SAAlB;AACA8f,oBAAY,CAACta,IAAb,CAAkB;AAAElK,cAAI,EAAE,QAAR;AAAkByE,iBAAO,EAAEC,SAAS,CAAC,QAAD;AAApC,SAAlB;AACA8f,oBAAY,CAACta,IAAb,CAAkB;AAAElK,cAAI,EAAE,OAAR;AAAiByE,iBAAO,EAAEC,SAAS,CAAC,OAAD;AAAnC,SAAlB;AAEA,eAAO8f,YAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;AC7ED,UAAI,OAAOpJ,QAAP,KAAoB,WAApB,IAAmC,CAACA,QAAQ,CAACmD,iBAAjD,EAAoE;AAClEnD,gBAAQ,CAACmD,iBAAT,GAA6BA,kBAA7B;AACD;AAED;;AACA;;;;;;;;;AAOO,eAASA,kBAAT,CAA2B1M,CAA3B,EAAsCmJ,CAAtC,EAAiD;AACtD,YAAMyJ,QAAQ,GAAG,EAAjB;AACA,YAAMC,qBAAqB,GAAG,EAA9B;AACA,YAAIb,OAAJ,CAHsD,CAGpC;;AAClB,YAAItb,CAAJ;AACA,YAAI+U,CAAJ,CALsD,CAOtD;AAEA;;AACA,eAAO,CAACuG,OAAO,GAAGzI,QAAQ,CAACuJ,gBAAT,CAA0B9S,CAA1B,EAA6BmJ,CAA7B,CAAX,KAA+CyJ,QAAQ,CAAClB,OAAT,CAAiBM,OAAjB,MAA8B,CAAC,CAA9E,IAAmFA,OAAO,IAAI,IAArG,EAA2G;AACzG;AACAY,kBAAQ,CAACva,IAAT,CAAc2Z,OAAd;AACAa,+BAAqB,CAACxa,IAAtB,CAA2B;AACzBjN,iBAAK,EAAE4mB,OAAO,CAACnI,KAAR,CAAckJ,gBAAd,CAA+B,gBAA/B,CADkB;AAEzBC,oBAAQ,EAAEhB,OAAO,CAACnI,KAAR,CAAcoJ,mBAAd,CAAkC,gBAAlC;AAFe,WAA3B,EAHyG,CAQzG;;AACAjB,iBAAO,CAACnI,KAAR,CAAcqJ,WAAd,CAA0B,gBAA1B,EAA4C,MAA5C,EAAoD,WAApD;AACD,SApBqD,CAsBtD;;;AACA,aAAKxc,CAAC,GAAGmc,qBAAqB,CAACvc,MAA/B,EAAwCmV,CAAC,GAAGoH,qBAAqB,CAAC,EAAEnc,CAAH,CAAjE,GAA2E;AACzEkc,kBAAQ,CAAClc,CAAD,CAAR,CAAYmT,KAAZ,CAAkBqJ,WAAlB,CAA8B,gBAA9B,EAAgDzH,CAAC,CAACrgB,KAAF,GAAUqgB,CAAC,CAACrgB,KAAZ,GAAoB,EAApE,EAAwEqgB,CAAC,CAACuH,QAA1E;AACD,SAzBqD,CA2BtD;;;AACA,eAAOJ,QAAP;AACD;AACD;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;;;;;;AAIO,eAAS1oB,GAAT,GAAc;AACnB,eAAO,CAAC,SAAS,CAAE8L,IAAI,CAACmd,MAAL,KAAgBnd,IAAI,CAACod,GAAL,CAAS,EAAT,EAAa,CAAb,CAAjB,IAAqC,CAAtC,EAAyCxhB,QAAzC,CAAkD,EAAlD,CAAV,EAAiE+R,KAAjE,CAAuE,CAAC,CAAxE,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;ACND,UAAYlV,KAAZ;;AAAA,iBAAYA,IAAZ,EAAgB;AACd;AACA;AACA;AACA;AACA;AACA;AACD,OAPD,EAAYA,KAAI,KAAJA,KAAI,MAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACEA;;;;;AAGO,eAAS4kB,iBAAT,CAA0BzgB,OAA1B,EAA0C;AAC/C,YAAI0gB,aAAa,GAAG,CAApB;;AAD+C,qDAG/B1gB,OAH+B;AAAA;;AAAA;AAG/C,oEAAyB;AAAA,gBAAdyQ,CAAc;AACvBiQ,yBAAa,IAAIjQ,CAAC,CAACkQ,QAAF,IAAc,CAA/B;AACD;AAL8C;AAAA;AAAA;AAAA;AAAA;;AAO/C,eAAOD,aAAP;AACD;AAED;;;;;;AAIO,eAAS9Q,mBAAT,CAA4BgR,UAA5B,EAA6CC,aAA7C,EAAiE;AACtE,YAAMC,YAAY,GAAG,yCAAAhB,iBAAA,EAAkBc,UAAlB,CAArB;;AACA,YAAMF,aAAa,GAAGD,iBAAgB,CAACG,UAAD,CAAtC;;AACA,YAAMG,WAAW,GAAG,yCAAApiB,YAAA,EAAaiiB,UAAb,CAApB;;AAEA,YAAIE,YAAY,KAAKD,aAArB,EAAoC;AAClCG,sBAAY,CAACD,WAAD,EAAcF,aAAd,EAA6BH,aAA7B,CAAZ;AACD;AACF;AAED;;;;;AAGA,eAASM,YAAT,CAAsBD,WAAtB,EAAwCtmB,QAAxC,EAAuDimB,aAAvD,EAA2E;AACzE;AACA,aAAK,IAAMO,IAAX,IAAmBF,WAAnB,EAAgC;AAAA,uDACTA,WAAW,CAACE,IAAD,CADF;AAAA;;AAAA;AAC9B,sEAAwC;AAAA,kBAA7BxoB,MAA6B;;AACtC,kBAAI,CAACA,MAAM,CAAC8lB,aAAZ,EAA2B;AACzB9jB,wBAAQ,IAAIhC,MAAM,CAAC8B,KAAnB;AACAmmB,6BAAa,IAAIjoB,MAAM,CAACkoB,QAAP,GAAkBloB,MAAM,CAACkoB,QAAzB,GAAoC,CAArD;AACD,eAHD,MAGO;AACLloB,sBAAM,CAAC8B,KAAP,GAAe,CAAf;AACD;AACF;AAR6B;AAAA;AAAA;AAAA;AAAA;AAS/B;;AAED,YAAM2mB,WAAW,GAAG,EAApB;AACA,YAAIC,cAAc,GAAG1mB,QAArB,CAdyE,CAgBzE;;AACA,WAAG;AACD,cAAM2mB,iBAAiB,GAAGD,cAAc,GAAGT,aAA3C;AACAS,wBAAc,GAAG,CAAjB;;AAEA,eAAK,IAAMF,KAAX,IAAmBF,WAAnB,EAAgC;AAAA,yDACTA,WAAW,CAACE,KAAD,CADF;AAAA;;AAAA;AAC9B,wEAAwC;AAAA,oBAA7BxoB,OAA6B;;AACtC;AACA,oBAAIA,OAAM,CAAC8lB,aAAP,IAAwB,CAAC2C,WAAW,CAACzoB,OAAM,CAACsC,IAAR,CAAxC,EAAuD;AACrD,sBAAMqgB,QAAQ,GAAG3iB,OAAM,CAAC8B,KAAP,GAAe9B,OAAM,CAACkoB,QAAP,GAAkBS,iBAAlD;;AACA,sBAAI3oB,OAAM,CAAC+B,QAAP,KAAoBW,SAApB,IAAiCigB,QAAQ,GAAG3iB,OAAM,CAAC+B,QAAvD,EAAiE;AAC/D2mB,kCAAc,IAAI/F,QAAQ,GAAG3iB,OAAM,CAAC+B,QAApC;AACA/B,2BAAM,CAAC8B,KAAP,GAAe9B,OAAM,CAAC+B,QAAtB;AACA0mB,+BAAW,CAACzoB,OAAM,CAACsC,IAAR,CAAX,GAA2B,IAA3B;AACD,mBAJD,MAIO;AACLtC,2BAAM,CAAC8B,KAAP,GAAe6gB,QAAf;AACD;AACF;AACF;AAb6B;AAAA;AAAA;AAAA;AAAA;AAc/B;AACF,SAnBD,QAmBS+F,cAAc,KAAK,CAnB5B;AAoBD;AAED;;;;;;;;;;;;;;;;;;;;;AAmBO,eAASxR,sBAAT,CACLiR,UADK,EAELC,aAFK,EAGLQ,QAHK,EAIL3R,UAJK,EAKwB;AAAA,YAA7B4R,eAA6B,uEAAH,GAAG;AAE7B,YAAMC,eAAe,GAAGX,UAAU,CAAC7P,KAAX,CAAiBsQ,QAAQ,GAAG,CAA5B,EAA+BT,UAAU,CAACld,MAA1C,EAAkDwE,MAAlD,CAAyD,UAAAuI,CAAC,EAAI;AACpF,iBAAOA,CAAC,CAAC8N,aAAF,KAAoB,KAA3B;AACD,SAFuB,CAAxB;;AAF6B,qDAMRgD,eANQ;AAAA;;AAAA;AAM7B,oEAAsC;AAAA,gBAA3B9oB,QAA2B;;AACpC,gBAAI,CAACA,QAAM,CAACiY,UAAZ,EAAwB;AACtBjY,sBAAM,CAACiY,UAAP,GAAoBjY,QAAM,CAAC8B,KAA3B;AACD;AACF;AAV4B;AAAA;AAAA;AAAA;AAAA;;AAY7B,YAAIinB,sBAAsB,GAAG,CAA7B;AACA,YAAIC,aAAa,GAAG,KAApB;AACA,YAAIC,YAAY,GAAGC,eAAe,CAACf,UAAD,EAAaU,eAAb,CAAlC;AACA,YAAIH,cAAc,GAAGN,aAAa,GAAGa,YAArC;AACA,YAAME,gBAAgB,GAAU,EAAhC;AACA,YAAMC,mBAAmB,GAAG,CAA5B,CAjB6B,CAiBE;AAE/B;;AACA,WAAG;AACDL,gCAAsB,GAAGL,cAAc,GAAGI,eAAe,CAAC7d,MAA1D;AACA+d,uBAAa,GAAGC,YAAY,IAAIb,aAAhC;;AAFC,uDAIoBU,eAJpB;AAAA;;AAAA;AAID,sEAAsC;AAAA,kBAA3B9oB,MAA2B;;AACpC,kBAAIgpB,aAAa,IAAI/R,UAArB,EAAiC;AAC/BjX,sBAAM,CAAC8B,KAAP,GAAe9B,MAAM,CAACiY,UAAP,IAAqBjY,MAAM,CAAC8B,KAA5B,IAAqC+mB,eAApD;AACD,eAFD,MAEO;AACL,oBAAMQ,OAAO,GAAG,CAACrpB,MAAM,CAAC8B,KAAP,IAAgB+mB,eAAjB,IAAoCE,sBAApD;;AAEA,oBAAI/oB,MAAM,CAAC+B,QAAP,IAAmBsnB,OAAO,GAAGrpB,MAAM,CAAC+B,QAAxC,EAAkD;AAChD/B,wBAAM,CAAC8B,KAAP,GAAe9B,MAAM,CAAC+B,QAAtB;AACAonB,kCAAgB,CAACnc,IAAjB,CAAsBhN,MAAtB;AACD,iBAHD,MAGO,IAAIA,MAAM,CAACgC,QAAP,IAAmBqnB,OAAO,GAAGrpB,MAAM,CAACgC,QAAxC,EAAkD;AACvDhC,wBAAM,CAAC8B,KAAP,GAAe9B,MAAM,CAACgC,QAAtB;AACAmnB,kCAAgB,CAACnc,IAAjB,CAAsBhN,MAAtB;AACD,iBAHM,MAGA;AACLA,wBAAM,CAAC8B,KAAP,GAAeunB,OAAf;AACD;AACF;;AAEDrpB,oBAAM,CAAC8B,KAAP,GAAe6I,IAAI,CAACsB,GAAL,CAAS,CAAT,EAAYjM,MAAM,CAAC8B,KAAnB,CAAf;AACD;AAtBA;AAAA;AAAA;AAAA;AAAA;;AAwBDmnB,sBAAY,GAAGC,eAAe,CAACf,UAAD,CAA9B;AACAO,wBAAc,GAAGN,aAAa,GAAGa,YAAjC;AACAK,gCAAsB,CAACR,eAAD,EAAkBK,gBAAlB,CAAtB;AACD,SA3BD,QA2BST,cAAc,GAAGU,mBAAjB,IAAwCN,eAAe,CAAC7d,MAAhB,KAA2B,CA3B5E;AA4BD;AAED;;;;;AAGA,eAASqe,sBAAT,CAAgCR,eAAhC,EAAwDK,gBAAxD,EAAiF;AAAA,qDAC1DA,gBAD0D;AAAA;;AAAA;AAC/E,oEAAuC;AAAA,gBAA5BnpB,MAA4B;AACrC,gBAAMwG,KAAK,GAAGsiB,eAAe,CAACzC,OAAhB,CAAwBrmB,MAAxB,CAAd;AACA8oB,2BAAe,CAAC/b,MAAhB,CAAuBvG,KAAvB,EAA8B,CAA9B;AACD;AAJ8E;AAAA;AAAA;AAAA;AAAA;AAKhF;AAED;;;;;AAGA,eAAS0iB,eAAT,CAAyBf,UAAzB,EAAuE;AAAA,YAA7BU,eAA6B,uEAAH,GAAG;AACrE,YAAII,YAAY,GAAG,CAAnB;;AADqE,qDAGhDd,UAHgD;AAAA;;AAAA;AAGrE,oEAAiC;AAAA,gBAAtBnoB,MAAsB;AAC/BipB,wBAAY,IAAIjpB,MAAM,CAAC8B,KAAP,IAAgB+mB,eAAhC;AACD;AALoE;AAAA;AAAA;AAAA;AAAA;;AAOrE,eAAOI,YAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpKD,UAAMM,KAAK,GAAG,EAAd;AACA,UAAMC,SAAS,GAAG,OAAOtL,QAAP,KAAoB,WAApB,GAAkCA,QAAQ,CAAC6D,aAAT,CAAuB,KAAvB,EAA8BvD,KAAhE,GAAwE9b,SAA1F,C,CAEA;AACA;;AACA,UAAM+mB,MAAM,GAAI,YAAY;AAC1B,YAAMtkB,MAAM,GAAG,OAAOukB,MAAP,KAAkB,WAAlB,GAAgCA,MAAM,CAACC,gBAAP,CAAwBzL,QAAQ,CAAC0L,eAAjC,EAAkD,EAAlD,CAAhC,GAAwFlnB,SAAvG;AACA,YAAM6iB,KAAK,GACT,OAAOpgB,MAAP,KAAkB,WAAlB,GACIyR,KAAK,CAACiT,SAAN,CAAgBvR,KAAhB,CACGwR,IADH,CACQ3kB,MADR,EAEG4kB,IAFH,CAEQ,EAFR,EAGGxE,KAHH,CAGS,mBAHT,CADJ,GAKI,IANN;AAOA,YAAMyE,GAAG,GAAGzE,KAAK,KAAK,IAAV,GAAiBA,KAAK,CAAC,CAAD,CAAtB,GAA4B7iB,SAAxC,CAT0B,CAU1B;;AACA,YAAM4L,GAAG,GAAG,OAAO0b,GAAP,KAAe,WAAf,GAA6B,kBAAkBzE,KAAlB,CAAwB,IAAI0E,MAAJ,CAAW,MAAMD,GAAN,GAAY,GAAvB,EAA4B,GAA5B,CAAxB,EAA0D,CAA1D,CAA7B,GAA4FtnB,SAAxG;AAEA,eAAO4L,GAAG,GACN;AACEA,aAAG,EAAHA,GADF;AAEE4b,mBAAS,EAAEF,GAFb;AAGEG,aAAG,aAAMH,GAAN,MAHL;AAIEI,YAAE,EAAEJ,GAAG,CAAC,CAAD,CAAH,CAAO3E,WAAP,KAAuB2E,GAAG,CAACK,MAAJ,CAAW,CAAX;AAJ7B,SADM,GAON3nB,SAPJ;AAQD,OArBc,EAAf;;AAuBO,eAAS4nB,sBAAT,CAA+BC,QAA/B,EAAiD;AACtD,YAAMpP,IAAI,GAAG,6CAAA4J,SAAA,EAAUwF,QAAV,CAAb;;AAEA,YAAI,CAAChB,KAAK,CAACpO,IAAD,CAAV,EAAkB;AAChB,cAAIsO,MAAM,KAAK/mB,SAAX,IAAwB8mB,SAAS,CAACC,MAAM,CAACU,GAAP,GAAaI,QAAd,CAAT,KAAqC7nB,SAAjE,EAA4E;AAC1E6mB,iBAAK,CAACpO,IAAD,CAAL,GAAcsO,MAAM,CAACU,GAAP,GAAaI,QAA3B;AACD,WAFD,MAEO,IAAIf,SAAS,CAACe,QAAD,CAAT,KAAwB7nB,SAA5B,EAAuC;AAC5C6mB,iBAAK,CAACpO,IAAD,CAAL,GAAcoP,QAAd;AACD;AACF;;AAED,eAAOhB,KAAK,CAACpO,IAAD,CAAZ;AACD;;;;;;;;;;;;;;;;;;;;;;;;AC1CD;;;;;;;;;;;UASajT,e;AAAb;AAAA;;AACE;;;;;AAKQ,eAAAsiB,SAAA,GAAsB,EAAtB;AA2IT;AAzIC;;;;;;;iBAGA,sBAAU;AACR,iBAAKA,SAAL,GAAiB,EAAjB;AACD;AAED;;;;;;;;;;iBAOA,mBAAUC,OAAV,EAAsB;AACpB,gBAAQlf,IAAR,GAAmGkf,OAAnG,CAAQlf,IAAR;AAAA,gBAActL,SAAd,GAAmGwqB,OAAnG,CAAcxqB,SAAd;AAAA,gBAAyBsM,eAAzB,GAAmGke,OAAnG,CAAyBle,eAAzB;AAAA,gBAA0CC,eAA1C,GAAmGie,OAAnG,CAA0Cje,eAA1C;AAAA,gBAA2D/C,QAA3D,GAAmGghB,OAAnG,CAA2DhhB,QAA3D;AAAA,gBAAqEnB,UAArE,GAAmGmiB,OAAnG,CAAqEniB,UAArE;AAAA,gBAAiFE,aAAjF,GAAmGiiB,OAAnG,CAAiFjiB,aAAjF;AACA,gBAAMkiB,IAAI,GAAG,OAAOzqB,SAAP,KAAqB,UAAlC;AACA,gBAAM0qB,UAAU,GAAG,OAAOpe,eAAP,KAA2B,UAA9C;;AAEA,gBAAI,CAACme,IAAD,IAASxoB,KAAK,CAACjC,SAAD,CAAlB,EAA+B;AAC7B,oBAAM,IAAIvB,KAAJ,iIAC+BuB,SAD/B,qCAAN;AAED,aARmB,CAUpB;;;AACA,gBAAI,CAAC0qB,UAAD,IAAezoB,KAAK,CAACqK,eAAD,CAAxB,EAA2C;AACzC,oBAAM,IAAI7N,KAAJ,uIAC+B6N,eAD/B,qCAAN;AAED;;AAED,gBAAMqe,CAAC,GAAGpe,eAAe,GAAG/C,QAAH,GAAc8B,IAAI,CAACN,MAA5C;AACA,iBAAKuf,SAAL,GAAiB,IAAI5T,KAAJ,CAAUgU,CAAV,CAAjB;;AAEA,iBAAK,IAAIvf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuf,CAApB,EAAuB,EAAEvf,CAAzB,EAA4B;AAC1B,mBAAKmf,SAAL,CAAenf,CAAf,IAAoB,CAApB;AACD;;AAED,iBAAK,IAAIA,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGuf,CAApB,EAAuB,EAAEvf,GAAzB,EAA4B;AAC1B,kBAAMxL,GAAG,GAAG0L,IAAI,CAACF,GAAD,CAAhB;AACA,kBAAIwf,gBAAgB,GAAG5qB,SAAvB;;AACA,kBAAIyqB,IAAJ,EAAU;AACRG,gCAAgB,GAAG5qB,SAAS,CAACJ,GAAD,CAA5B;AACD,eALyB,CAO1B;AACA;;;AACA,kBAAMkB,QAAQ,GAAGyH,aAAa,CAACkO,GAAd,CAAkB7W,GAAlB,CAAjB;;AACA,kBAAIA,GAAG,IAAIkB,QAAX,EAAqB;AACnB,oBAAI4pB,UAAJ,EAAgB;AACd,sBAAMnkB,KAAK,GAAG8B,UAAU,CAACkF,GAAX,CAAe3N,GAAf,CAAd;AACAgrB,kCAAgB,IAAIte,eAAe,CAAC1M,GAAD,EAAM2G,KAAN,CAAnC;AACD,iBAHD,MAGO;AACLqkB,kCAAgB,IAAIte,eAApB;AACD;AACF;;AAED,mBAAKO,MAAL,CAAYzB,GAAZ,EAAewf,gBAAf;AACD;AACF;AAED;;;;;;;iBAIA,qBAAYC,OAAZ,EAA2B;AACzB,gBAAIA,OAAO,KAAK,CAAhB,EAAmB,OAAO,CAAP;AACnB,mBAAO,KAAKC,YAAL,CAAkBD,OAAlB,CAAP;AACD;AAED;;;;;;;iBAIA,gBAAOE,UAAP,EAA2BC,WAA3B,EAA8C;AAC5C,gBAAI,CAAC,KAAKT,SAAL,CAAevf,MAApB,EAA4B;AAC1B,oBAAM,IAAIvM,KAAJ,2BAA6BssB,UAA7B,yBAAsDC,WAAtD,yDAAN;AAED;;AAED,gBAAML,CAAC,GAAG,KAAKJ,SAAL,CAAevf,MAAzB;AACA+f,sBAAU,IAAI,CAAd;;AAEA,mBAAOA,UAAU,GAAGJ,CAApB,EAAuB;AACrB,mBAAKJ,SAAL,CAAeQ,UAAf,KAA8BC,WAA9B;AACAD,wBAAU,IAAIA,UAAU,GAAG,CAA3B;AACD;AACF;AAED;;;;;;iBAGA,eAAME,OAAN,EAAqB;AACnB,gBAAI,CAAC,KAAKV,SAAL,CAAevf,MAApB,EAA4B;AAC1B,oBAAM,IAAIvM,KAAJ,0BAA4BwsB,OAA5B,kDAAN;AACD;;AAED,gBAAIC,GAAG,GAAG,CAAV;AACAD,mBAAO,IAAI,CAAX;;AAEA,mBAAOA,OAAO,IAAI,CAAlB,EAAqB;AACnBC,iBAAG,IAAI,KAAKX,SAAL,CAAeU,OAAf,CAAP;AACAA,qBAAO,GAAG,CAACA,OAAO,GAAIA,OAAO,GAAG,CAAtB,IAA4B,CAAtC;AACD;;AAED,mBAAOC,GAAP;AACD;AAED;;;;;;iBAGA,sBAAaC,QAAb,EAA+BC,QAA/B,EAA+C;AAC7C,mBAAO,KAAK3hB,KAAL,CAAW2hB,QAAX,IAAuB,KAAK3hB,KAAL,CAAW0hB,QAAQ,GAAG,CAAtB,CAA9B;AACD;AAED;;;;;;;iBAIQ,sBAAaD,GAAb,EAAwB;AAC9B,gBAAI,CAAC,KAAKX,SAAL,CAAevf,MAApB,EAA4B,OAAO,CAAP;AAE5B,gBAAIU,GAAG,GAAG,CAAC,CAAX;AACA,gBAAM2f,UAAU,GAAG,KAAKd,SAAL,CAAevf,MAAlC,CAJ8B,CAM9B;;AACA,gBAAMsgB,UAAU,GAAG5gB,IAAI,CAACod,GAAL,CAAS,CAAT,EAAYuD,UAAU,CAAC/kB,QAAX,CAAoB,CAApB,EAAuB0E,MAAvB,GAAgC,CAA5C,CAAnB;;AAEA,iBAAK,IAAIugB,SAAS,GAAGD,UAArB,EAAiCC,SAAS,KAAK,CAA/C,EAAkDA,SAAS,KAAK,CAAhE,EAAmE;AACjE,kBAAMC,OAAO,GAAG9f,GAAG,GAAG6f,SAAtB;;AACA,kBAAIC,OAAO,GAAGH,UAAV,IAAwBH,GAAG,IAAI,KAAKX,SAAL,CAAeiB,OAAf,CAAnC,EAA4D;AAC1DN,mBAAG,IAAI,KAAKX,SAAL,CAAeiB,OAAf,CAAP;AACA9f,mBAAG,GAAG8f,OAAN;AACD;AACF;;AAED,mBAAO9f,GAAG,GAAG,CAAb;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzJI,eAAS4D,WAAT,CAAoB3H,QAApB,EAAqC/H,GAArC,EAA+C6rB,SAA/C,EAA+D;AACpE,YAAMC,aAAa,GAAGD,SAAS,CAAC7rB,GAAD,EAAM+H,QAAN,CAA/B;;AAEA,YAAI+jB,aAAa,GAAG,CAAC,CAArB,EAAwB;AACtB/jB,kBAAQ,CAACmF,MAAT,CAAgB4e,aAAhB,EAA+B,CAA/B;AACD,SAFD,MAEO;AACL/jB,kBAAQ,CAACoF,IAAT,CAAcnN,GAAd;AACD;;AAED,eAAO+H,QAAP;AACD;;AAEM,eAASsH,kBAAT,CACLtH,QADK,EAEL2D,IAFK,EAGL/E,KAHK,EAIL2I,SAJK,EAKLuc,SALK,EAKS;AAEd,YAAME,OAAO,GAAGplB,KAAK,GAAG2I,SAAxB;;AAEA,aAAK,IAAI9D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,IAAI,CAACN,MAAzB,EAAiCI,CAAC,EAAlC,EAAsC;AACpC,cAAMxL,GAAG,GAAG0L,IAAI,CAACF,CAAD,CAAhB;AACA,cAAMwgB,OAAO,GAAGxgB,CAAC,IAAI8D,SAAL,IAAkB9D,CAAC,IAAI7E,KAAvC;AACA,cAAMslB,MAAM,GAAGzgB,CAAC,IAAI8D,SAAL,IAAkB9D,CAAC,IAAI7E,KAAtC;AAEA,cAAIulB,KAAK,GAAG;AAAEC,iBAAK,EAAE,CAAT;AAAYC,eAAG,EAAE;AAAjB,WAAZ;;AACA,cAAIL,OAAJ,EAAa;AACXG,iBAAK,GAAG;AACNC,mBAAK,EAAExlB,KADD;AAENylB,iBAAG,EAAE9c;AAFC,aAAR;AAID,WALD,MAKO;AACL4c,iBAAK,GAAG;AACNC,mBAAK,EAAE7c,SADD;AAEN8c,iBAAG,EAAEzlB,KAAK,GAAG;AAFP,aAAR;AAID;;AAED,cAAKolB,OAAO,IAAIE,MAAZ,IAAwB,CAACF,OAAD,IAAYC,OAAxC,EAAkD;AAChD;AACA;AACA,gBAAIxgB,CAAC,IAAI0gB,KAAK,CAACC,KAAX,IAAoB3gB,CAAC,IAAI0gB,KAAK,CAACE,GAAnC,EAAwC;AACtCrkB,sBAAQ,CAACoF,IAAT,CAAcnN,GAAd;AACD;AACF;AACF;;AAED,eAAO+H,QAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CD;;;;;AAGO,eAAS0T,YAAT,CAAqBlI,QAArB,EAAyCuT,OAAzC,EAA+D;AACpE,YAAIvT,QAAQ,KAAK,8CAAAC,QAAA,OAAjB,EAAkC;AAChC,cAAIsT,OAAO,KAAK,wDAAA9kB,aAAA,IAAhB,EAAmC;AACjC,mBAAO,wDAAAA,aAAA,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,wDAAAA,aAAA,IAAP;AACD;AACF,SAND,MAMO;AACL,cAAI,CAAC8kB,OAAL,EAAc;AACZ,mBAAO,wDAAA9kB,aAAA,IAAP;AACD,WAFD,MAEO,IAAI8kB,OAAO,KAAK,wDAAA9kB,aAAA,IAAhB,EAAmC;AACxC,mBAAO,wDAAAA,aAAA,KAAP;AACD,WAFM,MAEA,IAAI8kB,OAAO,KAAK,wDAAA9kB,aAAA,KAAhB,EAAoC;AACzC,mBAAOa,SAAP;AACD,WAPI,CAQL;;;AACA,iBAAOA,SAAP;AACD;AACF;AAED;;;;;;AAIO,eAASwpB,kBAAT,CAA2B/G,CAA3B,EAAmCC,CAAnC,EAAyC;AAC9C,YAAID,CAAC,KAAK,IAAN,IAAc,OAAOA,CAAP,KAAa,WAA/B,EAA4CA,CAAC,GAAG,CAAJ;AAC5C,YAAIC,CAAC,KAAK,IAAN,IAAc,OAAOA,CAAP,KAAa,WAA/B,EAA4CA,CAAC,GAAG,CAAJ;;AAC5C,YAAID,CAAC,YAAYgH,IAAb,IAAqB/G,CAAC,YAAY+G,IAAtC,EAA4C;AAC1C,cAAIhH,CAAC,GAAGC,CAAR,EAAW,OAAO,CAAC,CAAR;AACX,cAAID,CAAC,GAAGC,CAAR,EAAW,OAAO,CAAP;AACZ,SAHD,MAGO,IAAIljB,KAAK,CAACklB,UAAU,CAACjC,CAAD,CAAX,CAAL,IAAwB,CAACiH,QAAQ,CAACjH,CAAD,CAAjC,IAAwCjjB,KAAK,CAACklB,UAAU,CAAChC,CAAD,CAAX,CAA7C,IAAgE,CAACgH,QAAQ,CAAChH,CAAD,CAA7E,EAAkF;AACvF;AACAD,WAAC,GAAGQ,MAAM,CAACR,CAAD,CAAV;AACAC,WAAC,GAAGO,MAAM,CAACP,CAAD,CAAV,CAHuF,CAIvF;;AACA,cAAID,CAAC,CAACD,WAAF,KAAkBE,CAAC,CAACF,WAAF,EAAtB,EAAuC,OAAO,CAAC,CAAR;AACvC,cAAIC,CAAC,CAACD,WAAF,KAAkBE,CAAC,CAACF,WAAF,EAAtB,EAAuC,OAAO,CAAP;AACxC,SAPM,MAOA;AACL;AACA,cAAIkC,UAAU,CAACjC,CAAD,CAAV,GAAgBiC,UAAU,CAAChC,CAAD,CAA9B,EAAmC,OAAO,CAAC,CAAR;AACnC,cAAIgC,UAAU,CAACjC,CAAD,CAAV,GAAgBiC,UAAU,CAAChC,CAAD,CAA9B,EAAmC,OAAO,CAAP;AACpC,SAjB6C,CAmB9C;;;AACA,eAAO,CAAP;AACD;AAED;;;;;;AAIO,eAAS1M,SAAT,CAAkBnN,IAAlB,EAA+BhE,OAA/B,EAA+C8kB,IAA/C,EAAkE;AACvE,YAAI,CAAC9gB,IAAL,EAAW,OAAO,EAAP;AACX,YAAI,CAAC8gB,IAAD,IAAS,CAACA,IAAI,CAACphB,MAAf,IAAyB,CAAC1D,OAA9B,EAAuC,0BAAWgE,IAAX;AAEvC;;;;;AAIA,YAAM+gB,aAAa,GAAG,IAAI9V,GAAJ,EAAtB;AACAjL,YAAI,CAACJ,OAAL,CAAa,UAACtL,GAAD,EAAM2G,KAAN;AAAA,iBAAgB8lB,aAAa,CAACphB,GAAd,CAAkBrL,GAAlB,EAAuB2G,KAAvB,CAAhB;AAAA,SAAb;;AAEA,YAAM2B,IAAI,sBAAOoD,IAAP,CAAV;;AACA,YAAMwM,IAAI,GAAGxQ,OAAO,CAACwJ,MAAR,CAAe,UAACyV,GAAD,EAAMjV,GAAN,EAAc;AACxC,cAAIA,GAAG,CAACgb,UAAJ,IAAkB,OAAOhb,GAAG,CAACgb,UAAX,KAA0B,UAAhD,EAA4D;AAC1D/F,eAAG,CAACjV,GAAG,CAACjP,IAAL,CAAH,GAAgBiP,GAAG,CAACgb,UAApB;AACD;;AACD,iBAAO/F,GAAP;AACD,SALY,EAKV,EALU,CAAb,CAZuE,CAmBvE;AACA;;AACA,YAAMgG,UAAU,GAAGH,IAAI,CAAC/a,GAAL,CAAS,UAAA3N,GAAG,EAAI;AACjC,cAAMrB,IAAI,GAAGqB,GAAG,CAACrB,IAAjB;AACA,iBAAO;AACLA,gBAAI,EAAJA,IADK;AAELqB,eAAG,EAAEA,GAAG,CAACA,GAFJ;AAGL8oB,uBAAW,EAAE,sDAAA/G,aAAA,EAAcpjB,IAAd,CAHR;AAILoqB,qBAAS,EAAE3U,IAAI,CAACzV,IAAD,CAAJ,IAAc4pB;AAJpB,WAAP;AAMD,SARkB,CAAnB;AAUA,eAAO/jB,IAAI,CAAC3E,IAAL,CAAU,UAAUmpB,IAAV,EAAqBC,IAArB,EAAgC;AAAA,uDACvBJ,UADuB;AAAA;;AAAA;AAC/C,sEAAoC;AAAA,kBAAzBK,SAAyB;AAClC;AACA,kBAAQvqB,IAAR,GAA8BuqB,SAA9B,CAAQvqB,IAAR;AAAA,kBAAcmqB,WAAd,GAA8BI,SAA9B,CAAcJ,WAAd,CAFkC,CAGlC;;AACA,kBAAMK,KAAK,GAAGL,WAAW,CAACE,IAAD,EAAOrqB,IAAP,CAAzB;AACA,kBAAMyqB,KAAK,GAAGN,WAAW,CAACG,IAAD,EAAOtqB,IAAP,CAAzB,CALkC,CAOlC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,kBAAM0qB,UAAU,GACdH,SAAS,CAAClpB,GAAV,KAAkB,wDAAA9B,aAAA,KAAlB,GACIgrB,SAAS,CAACH,SAAV,CAAoBI,KAApB,EAA2BC,KAA3B,EAAkCJ,IAAlC,EAAwCC,IAAxC,EAA8CC,SAAS,CAAClpB,GAAxD,CADJ,GAEI,CAACkpB,SAAS,CAACH,SAAV,CAAoBI,KAApB,EAA2BC,KAA3B,EAAkCJ,IAAlC,EAAwCC,IAAxC,EAA8CC,SAAS,CAAClpB,GAAxD,CAHP,CAdkC,CAmBlC;;AACA,kBAAIqpB,UAAU,KAAK,CAAnB,EAAsB,OAAOA,UAAP;AACvB;AAtB8C;AAAA;AAAA;AAAA;AAAA;;AAwB/C,cAAI,EAAEV,aAAa,CAAC5V,GAAd,CAAkBiW,IAAlB,KAA2BL,aAAa,CAAC5V,GAAd,CAAkBkW,IAAlB,CAA7B,CAAJ,EAA2D,OAAO,CAAP;AAE3D;;;;AAGA,iBAAON,aAAa,CAAC9e,GAAd,CAAkBmf,IAAlB,IAA0BL,aAAa,CAAC9e,GAAd,CAAkBof,IAAlB,CAA1B,GAAoD,CAAC,CAArD,GAAyD,CAAhE;AACD,SA9BM,CAAP;AA+BD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxHD;;;;;AAGO,eAASK,SAAT,CAAkBC,IAAlB,EAA6BC,IAA7B,EAA2CC,OAA3C,EAA0D;AAC/DA,eAAO,GAAGA,OAAO,IAAI,EAArB;AACA,YAAIC,OAAJ;AACA,YAAIC,IAAJ;AACA,YAAItH,MAAJ;AACA,YAAI3G,OAAO,GAAQ,IAAnB;AACA,YAAIkO,QAAQ,GAAG,CAAf;;AAEA,iBAASC,KAAT,GAAiB;AACfD,kBAAQ,GAAGH,OAAO,CAACK,OAAR,KAAoB,KAApB,GAA4B,CAA5B,GAAgC,CAAC,IAAItB,IAAJ,EAA5C;AACA9M,iBAAO,GAAG,IAAV;AACA2G,gBAAM,GAAGkH,IAAI,CAACQ,KAAL,CAAWL,OAAX,EAAoBC,IAApB,CAAT;AACD;;AAED,eAAO;AACL,cAAMK,GAAG,GAAG,CAAC,IAAIxB,IAAJ,EAAb;;AAEA,cAAI,CAACoB,QAAD,IAAaH,OAAO,CAACK,OAAR,KAAoB,KAArC,EAA4C;AAC1CF,oBAAQ,GAAGI,GAAX;AACD;;AAED,cAAMC,SAAS,GAAGT,IAAI,IAAIQ,GAAG,GAAGJ,QAAV,CAAtB;AACAF,iBAAO,GAAG,IAAV;AACAC,cAAI,GAAGO,SAAP;;AAEA,cAAID,SAAS,IAAI,CAAjB,EAAoB;AAClB9N,wBAAY,CAACT,OAAD,CAAZ;AACAA,mBAAO,GAAG,IAAV;AACAkO,oBAAQ,GAAGI,GAAX;AACA3H,kBAAM,GAAGkH,IAAI,CAACQ,KAAL,CAAWL,OAAX,EAAoBC,IAApB,CAAT;AACD,WALD,MAKO,IAAI,CAACjO,OAAD,IAAY+N,OAAO,CAACU,QAAR,KAAqB,KAArC,EAA4C;AACjDzO,mBAAO,GAAGxT,UAAU,CAAC2hB,KAAD,EAAQI,SAAR,CAApB;AACD;;AAED,iBAAO5H,MAAP;AACD,SArBD;AAsBD;AAED;;;;;;;;;;AAQO,eAAS9M,aAAT,CAAsB0F,QAAtB,EAAwCwO,OAAxC,EAAuD;AAC5D,eAAO,SAASW,cAAT,CAAwB7qB,MAAxB,EAAqC2R,GAArC,EAAuDmZ,UAAvD,EAAuF;AAC5F,iBAAO;AACLC,wBAAY,EAAE,IADT;AAELC,sBAAU,EAAEF,UAAU,CAACE,UAFlB;AAGL1gB,eAAG,EAAE,SAAS2gB,MAAT,GAAkB;AACrBzsB,oBAAM,CAAC0sB,cAAP,CAAsB,IAAtB,EAA4BvZ,GAA5B,EAAiC;AAC/BoZ,4BAAY,EAAE,IADiB;AAE/BC,0BAAU,EAAEF,UAAU,CAACE,UAFQ;AAG/BnuB,qBAAK,EAAEktB,SAAQ,CAACe,UAAU,CAACjuB,KAAZ,EAAmB6e,QAAnB,EAA6BwO,OAA7B;AAHgB,eAAjC;AAMA,qBAAO,KAAKvY,GAAL,CAAP;AACD;AAXI,WAAP;AAaD,SAdD;AAeD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cC9DD;;;AACA,UAAMpS,SAAS,GAAG,OAAOinB,MAAP,KAAkB,WAAlB,GAAgC,2CAAAY,qBAAA,EAAsB,WAAtB,CAAhC,GAAqE5nB,SAAvF;AACA,UAAM2rB,kBAAkB,GAAG,OAAO3E,MAAP,KAAkB,WAAlB,GAAgC,2CAAAY,qBAAA,EAAsB,oBAAtB,CAAhC,GAA8E5nB,SAAzG;AACA,UAAM4rB,gBAAgB,GAAG,OAAO5E,MAAP,KAAkB,WAAlB,GAAgC,CAAC,CAAC,2CAAAY,qBAAA,EAAsB,WAAtB,CAAlC,GAAuE5nB,SAAhG;AACA,UAAM6rB,kBAAkB,GAAG,OAAO7E,MAAP,KAAkB,WAAlB,GAAgC,CAAC,CAAC,2CAAAY,qBAAA,EAAsB,aAAtB,CAAlC,GAAyE5nB,SAApG;AACA,UAAM8rB,EAAE,GAAG,OAAO9E,MAAP,KAAkB,WAAlB,GAAgCA,MAAM,CAAC+E,SAAP,CAAiBC,SAAjD,GAA6D,QAAxE;AACA,UAAMC,QAAQ,GAAG,WAAWC,IAAX,CAAgBJ,EAAhB,KAAuB,CAAC,WAAWI,IAAX,CAAgBJ,EAAhB,CAAzC;;AAEO,eAAS3nB,YAAT,CAAqB1B,MAArB,EAAkCwP,CAAlC,EAA6CmJ,CAA7C,EAAwD;AAC7D,YAAI,OAAOrb,SAAP,KAAqB,WAArB,IAAoC6rB,gBAAxC,EAA0D;AACxD,cAAI,CAACK,QAAD,IAAaJ,kBAAjB,EAAqC;AACnCppB,kBAAM,CAAC1C,SAAD,CAAN,yBAAmCkS,CAAnC,iBAA2CmJ,CAA3C;AACA3Y,kBAAM,CAACkpB,kBAAD,CAAN,GAA6B,QAA7B;AACD,WAHD,MAGO;AACLlpB,kBAAM,CAAC,6CAAA4f,SAAA,EAAUtiB,SAAV,CAAD,CAAN,uBAA4CkS,CAA5C,iBAAoDmJ,CAApD;AACD;AACF,SAPD,MAOO;AACL3Y,gBAAM,CAACsZ,GAAP,aAAgBX,CAAhB;AACA3Y,gBAAM,CAACM,IAAP,aAAiBkP,CAAjB;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBM,eAASM,sBAAT,CAA+B3S,IAA/B,EAAoD;AACzD,eAAOA,IAAI,IAAK,UAAAzC,GAAG;AAAA,iBAAI,sDAAA6lB,aAAA,EAAcpjB,IAAd,EAAoBzC,GAApB,EAAyByC,IAAzB,CAAJ;AAAA,SAAnB;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCO,eAAS0S,mBAAT,CAA4BzJ,IAA5B,EAAyCsL,IAAzC,EAAqEgY,EAArE,EAA6F;AAClG,YAAIhY,IAAI,IAAIgY,EAAZ,EAAgB;AACd,cAAMC,QAAQ,GAAG,EAAjB;AACA,cAAMC,CAAC,GAAGxjB,IAAI,CAACN,MAAf;AACA,cAAI+jB,IAAI,GAAoB,IAA5B;AAEAF,kBAAQ,CAAC,CAAD,CAAR,GAAc,IAAIG,QAAJ,EAAd,CALc,CAKgB;;AAE9B,cAAMC,OAAO,GAAG3jB,IAAI,CAACwF,MAAL,CAAY,UAACoF,GAAD,EAAMM,IAAN,EAAe;AACzC,gBAAM0Y,OAAO,GAAGN,EAAE,CAACpY,IAAD,CAAlB;;AACA,gBAAIN,GAAG,CAACkQ,OAAJ,CAAY8I,OAAZ,MAAyB,CAAC,CAA9B,EAAiC;AAC/BhZ,iBAAG,CAACnJ,IAAJ,CAASmiB,OAAT;AACD;;AACD,mBAAOhZ,GAAP;AACD,WANe,EAMb,EANa,CAAhB;;AAQA,eAAK,IAAI9K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0jB,CAApB,EAAuB1jB,CAAC,EAAxB,EAA4B;AAC1B;AACAyjB,oBAAQ,CAACD,EAAE,CAACtjB,IAAI,CAACF,CAAD,CAAL,CAAH,CAAR,GAAwB,IAAI4jB,QAAJ,CAAa1jB,IAAI,CAACF,CAAD,CAAjB,CAAxB;AACD;;AAED,eAAK,IAAIA,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG0jB,CAApB,EAAuB1jB,GAAC,EAAxB,EAA4B;AAC1B;AACA2jB,gBAAI,GAAGF,QAAQ,CAACD,EAAE,CAACtjB,IAAI,CAACF,GAAD,CAAL,CAAH,CAAf;AACA,gBAAI+jB,MAAM,GAAG,CAAb;AACA,gBAAMC,SAAS,GAAGxY,IAAI,CAACmY,IAAI,CAACnvB,GAAN,CAAtB;;AACA,gBAAI,CAAC,CAACwvB,SAAF,IAAeH,OAAO,CAAC7I,OAAR,CAAgBgJ,SAAhB,IAA6B,CAAC,CAAjD,EAAoD;AAClDD,oBAAM,GAAGC,SAAT;AACD;;AACDL,gBAAI,CAACI,MAAL,GAAcN,QAAQ,CAACM,MAAD,CAAtB;AACAJ,gBAAI,CAACnvB,GAAL,CAAS,OAAT,IAAoBmvB,IAAI,CAACI,MAAL,CAAYvvB,GAAZ,CAAgB,OAAhB,IAA2B,CAA/C;AACAmvB,gBAAI,CAACI,MAAL,CAAY7e,QAAZ,CAAqBvD,IAArB,CAA0BgiB,IAA1B;AACD;;AAED,cAAIM,YAAY,GAAU,EAA1B;AACAR,kBAAQ,CAAC,CAAD,CAAR,CAAYS,OAAZ,CAAoB,YAAY;AAC9BD,wBAAY,gCAAOA,YAAP,IAAqB,KAAKzvB,GAA1B,EAAZ;AACD,WAFD,EAEG,IAFH;AAIA,iBAAOyvB,YAAP;AACD,SAvCD,MAuCO;AACL,iBAAO/jB,IAAP;AACD;AACF;;UAEK0jB,Q;AAKJ,4BAAoC;AAAA,cAAxBpvB,GAAwB,uEAAN,IAAM;;AAAA;;AAClC,cAAI,CAACA,GAAL,EAAU;AACRA,eAAG,GAAG;AACJoE,mBAAK,EAAE,CAAC,CADJ;AAEJ7D,wBAAU,EAAE;AAFR,aAAN;AAID;;AACD,eAAKP,GAAL,GAAWA,GAAX;AACA,eAAKuvB,MAAL,GAAc,IAAd;AACA,eAAK7e,QAAL,GAAgB,EAAhB;AACD;;;;iBAED,iBAAQif,CAAR,EAAgBC,SAAhB,EAAoC;AAClC,gBAAI,KAAK5vB,GAAL,CAAS,YAAT,MAA2B,UAA/B,EAA2C;AACzC,mBAAK,IAAIwL,CAAC,GAAG,CAAR,EAAW0jB,CAAC,GAAG,KAAKxe,QAAL,CAActF,MAAlC,EAA0CI,CAAC,GAAG0jB,CAA9C,EAAiD1jB,CAAC,EAAlD,EAAsD;AACpD,oBAAMqkB,KAAK,GAAG,KAAKnf,QAAL,CAAclF,CAAd,CAAd;AACAmkB,iBAAC,CAAC9B,KAAF,CAAQgC,KAAR,EAAe9Y,KAAK,CAACiT,SAAN,CAAgBvR,KAAhB,CAAsBwR,IAAtB,CAA2B+D,SAA3B,EAAsC,CAAtC,CAAf;AACA,oBAAI4B,SAAJ,EAAeC,KAAK,CAACH,OAAN,CAAc7B,KAAd,CAAoBgC,KAApB,EAA2B7B,SAA3B;AAChlHH;;;AAIA;AA0BA;AAOA;AAKA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA,UAAM8B,MAAM,GAAW,EAAvB;;UAMaC,iB;;;;;yBAAAA,iB;AAAgB,O;;;cAAhBA;;;kBAHF,CAAC,6CAAAC,YAAA,SAAqBF,MAArB,EAA6B;AAAEG,gCAAsB,EAAE;AAA1B,SAA7B,CAAD,C,EACC,6CAAAD,Y;;;;4HAECD,iB,EAAgB;AAAA;AAAA,oBAFjB,6CAAAC,YAEiB;AAAA,S;AAFL,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC8LpB;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AAGA;;;;;;AACA;;;;;;AAGA;;;;;;AACA;;;;;;AAGA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AAGA;;;;;;AACA;;;;;;AAGA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AAGA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AAGA;;;;;;AACA;;;;;;AAGA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AAGA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;UClPSE,a,GAKX,uBAAYC,QAAZ,EAAgC;AAAA;;AAFhC,aAAAC,OAAA,GAAU,iFAAV;AAGE,aAAKC,KAAL,GAAaF,QAAQ,CAACtJ,IAAT,CAAc,IAAd,CAAb;AACD,O;;;yBAPUqJ,a,EAAY,wH;AAAA,O;;;cAAZA,a;AAAY,iC;AAAA,qFARZ,CACT,8CAAAI,QADS,EAET;AACExM,iBAAO,EAAE,8CAAAyM,gBADX;AAEEC,kBAAQ,EAAE,8CAAAC;AAFZ,SAFS,CAQY,E;AAFtB,kB;AAAA,gB;AAAA,goE;AAAA;AAAA;ADpBH;;AACE;;AACE;;AACE;;AAAc;;AAAO;;AAAe;;AACtC;;AACA;;AACE;;AACE;;AAAI;;AAAa;;AACjB;;AACE;;AACE;;AAA8E;;AAAM;;AACtF;;AACA;;AACE;;AAA2F;;AAAG;;AAChG;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AACE;;AACE;;AAA0B;AAAA,iCAAiB,gBAAjB;AAAiC,aAAjC;;AAAmC;;AAAQ;;AACvE;;AACA;;AACE;;AAAuB;AAAA,iCAAiB,aAAjB;AAA8B,aAA9B;;AAAgC;;AAAW;;AACpE;;AACA;;AACE;;AAAuB;AAAA,iCAAiB,aAAjB;AAA8B,aAA9B;;AAAgC;;AAAc;;AACvE;;AACA;;AACE;;AAA+B;AAAA,iCAAiB,qBAAjB;AAAsC,aAAtC;;AAAwC;;AAAmB;;AAC5F;;AACA;;AACE;;AAA2B;AAAA,iCAAiB,iBAAjB;AAAkC,aAAlC;;AAAoC;;AAAe;;AAChF;;AACA;;AAAI;;AAAkB;AAAA,iCAAiB,QAAjB;AAAyB,aAAzB;;AAA2B;;AAAS;;AAAI;;AAC9D;;AACE;;AAAkB;AAAA,iCAAiB,QAAjB;AAAyB,aAAzB;;AAA2B;;AAAc;;AAC7D;;AACA;;AAAI;;AAAgB;AAAA,iCAAiB,MAAjB;AAAuB,aAAvB;;AAAyB;;AAAS;;AAAI;;AAC1D;;AAAI;;AAAc;AAAA,iCAAiB,IAAjB;AAAqB,aAArB;;AAAuB;;AAAI;;AAAI;;AACjD;;AACE;;AAAuB;AAAA,iCAAiB,aAAjB;AAA8B,aAA9B;;AAAgC;;AAAY;;AACrE;;AACA;;AAAI;;AAAe;AAAA,iCAAiB,KAAjB;AAAsB,aAAtB;;AAAwB;;AAAW;;AAAI;;AAC1D;;AACE;;AAAkB;AAAA,iCAAiB,QAAjB;AAAyB,aAAzB;;AAA2B;;AAAe;;AAC9D;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAM;;AACV;;AACE;;AAAI;;AAAgB;AAAA,iCAAiB,MAAjB;AAAuB,aAAvB;;AAAyB;;AAAU;;AAAI;;AAC3D;;AACE;;AAAqB;AAAA,iCAAiB,WAAjB;AAA4B,aAA5B;;AAA8B;;AAAe;;AACpE;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAI;;AACR;;AACE;;AACE;;AAA2B;AAAA,iCAAiB,iBAAjB;AAAkC,aAAlC;;AAAoC;;AAAgB;;AACjF;;AACA;;AACE;;AAAuB;AAAA,iCAAiB,aAAjB;AAA8B,aAA9B;;AAAgC;;AAAgB;;AACzE;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAI;;AACR;;AACE;;AACE;;AAAwB;AAAA,iCAAiB,cAAjB;AAA+B,aAA/B;;AAAiC;;AAAY;;AACvE;;AACA;;AAAI;;AAAY;AAAA,iCAAiB,EAAjB;AAAmB,aAAnB;;AAAqB;;AAAgB;;AAAI;;AACzD;;AACE;;AAAuB;AAAA,iCAAiB,aAAjB;AAA8B,aAA9B;;AAAgC;;AAAgB;;AACzE;;AACA;;AACE;;AAAmB;AAAA,iCAAiB,SAAjB;AAA0B,aAA1B;;AAA4B;;AAAkB;;AACnE;;AACA;;AACE;;AAAuB;AAAA,iCAAiB,aAAjB;AAA8B,aAA9B;;AAAgC;;AAAU;;AACnE;;AACA;;AACE;;AAAsB;AAAA,iCAAiB,YAAjB;AAA6B,aAA7B;;AAA+B;;AAAU;;AACjE;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAM;;AACV;;AACE;;AACE;;AAAyB;AAAA,iCAAiB,eAAjB;AAAgC,aAAhC;;AAAkC;;AAAW;;AACxE;;AACA;;AACE;;AAAyB;AAAA,iCAAiB,eAAjB;AAAgC,aAAhC;;AAAkC;;AAAW;;AACxE;;AACA;;AACE;;AAA6C;AAAA,iCAAiB,mCAAjB;AAAoD,aAApD;;AAC1C;;AAAoB;;AAEzB;;AACA;;AACE;;AAA4B;AAAA,iCAAiB,kBAAjB;AAAmC,aAAnC;;AAAqC;;AAAqB;;AACxF;;AACA;;AACE;;AAA0B;AAAA,iCAAiB,gBAAjB;AAAiC,aAAjC;;AAAmC;;AAAmB;;AAClF;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAO;;AACX;;AACE;;AACE;;AAA0B;AAAA,iCAAiB,gBAAjB;AAAiC,aAAjC;;AAAmC;;AAAW;;AAC1E;;AACA;;AACE;;AAA2B;AAAA,iCAAiB,iBAAjB;AAAkC,aAAlC;;AAAoC;;AAAY;;AAC7E;;AACA;;AACE;;AAA0B;AAAA,iCAAiB,gBAAjB;AAAiC,aAAjC;;AAAmC;;AAAW;;AAC1E;;AACA;;AACE;;AAA8B;AAAA,iCAAiB,oBAAjB;AAAqC,aAArC;;AAAuC;;AAAU;;AACjF;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAS;;AACb;;AACE;;AACE;;AAA0B;AAAA,iCAAiB,gBAAjB;AAAiC,aAAjC;;AAAmC;;AAAI;;AACnE;;AACA;;AACE;;AAA4B;AAAA,iCAAiB,kBAAjB;AAAmC,aAAnC;;AAAqC;;AAAU;;AAC7E;;AACA;;AACE;;AAA2B;AAAA,iCAAiB,iBAAjB;AAAkC,aAAlC;;AAAoC;;AAAS;;AAC1E;;AACA;;AACE;;AAAiC;AAAA,iCAAiB,uBAAjB;AAAwC,aAAxC;;AAA0C;;AAAe;;AAC5F;;AACA;;AACE;;AAAkC;AAAA,iCAAiB,wBAAjB;AAAyC,aAAzC;;AAA2C;;AAAgB;;AAC/F;;AACA;;AACE;;AAA4B;AAAA,iCAAiB,kBAAjB;AAAmC,aAAnC;;AAAqC;;AAAQ;;AAC3E;;AACA;;AACE;;AAAqC;AAAA,iCAAiB,2BAAjB;AAA4C,aAA5C;;AAA8C;;AAAe;;AACpG;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAS;;AACb;;AACE;;AAAI;;AAAkB;AAAA,iCAAiB,QAAjB;AAAyB,aAAzB;;AAA2B;;AAAM;;AAAI;;AAC3D;;AACE;;AAAuB;AAAA,iCAAiB,aAAjB;AAA8B,aAA9B;;AAAgC;;AAAW;;AACpE;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAM;;AACV;;AACE;;AAAI;;AAAgB;AAAA,iCAAiB,MAAjB;AAAuB,aAAvB;;AAAyB;;AAAI;;AAAI;;AACrD;;AAAI;;AAAkB;AAAA,iCAAiB,QAAjB;AAAyB,aAAzB;;AAA2B;;AAAQ;;AAAI;;AAC7D;;AAAI;;AAAiB;AAAA,iCAAiB,OAAjB;AAAwB,aAAxB;;AAA0B;;AAAK;;AAAI;;AACxD;;AAAI;;AAAiB;AAAA,iCAAiB,OAAjB;AAAwB,aAAxB;;AAA0B;;AAAK;;AAAI;;AACxD;;AAAI;;AAAmB;AAAA,iCAAiB,SAAjB;AAA0B,aAA1B;;AAA4B;;AAAO;;AAAI;;AAC9D;;AAAI;;AAAmB;AAAA,iCAAiB,SAAjB;AAA0B,aAA1B;;AAA4B;;AAAO;;AAAI;;AAChE;;AACF;;AACA;;AACE;;AAAI;;AAAW;;AACf;;AACE;;AACE;;AAA0B;AAAA,iCAAiB,gBAAjB;AAAiC,aAAjC;;AAAmC;;AAAM;;AACrE;;AACA;;AACE;;AAAmC;AAAA,iCAAiB,yBAAjB;AAA0C,aAA1C;;AAA4C;;AAAe;;AAChG;;AACA;;AACE;;AAA0B;AAAA,iCAAiB,gBAAjB;AAAiC,aAAjC;;AAAmC;;AAAkB;;AACjF;;AACA;;AACE;;AAA+B;AAAA,iCAAiB,qBAAjB;AAAsC,aAAtC;;AAAwC;;AAAW;;AACpF;;AACF;;AACF;;AACF;;AACF;;AACA;;AAEE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AAGA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACF;;AACF;;;;AA1QK;;AAGsB;;AAAA;;AAkML;;AAAA;;AACC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACG;;AAAA;;AACK;;AAAA;;AACJ;;AAAA;;AACJ;;AAAA;;AACD;;AAAA;;AACJ;;AAAA;;AACF;;AAAA;;AACK;;AAAA;;AACP;;AAAA;;AACS;;AAAA;;AACJ;;AAAA;;AACO;;AAAA;;AACR;;AAAA;;AAGU;;AAAA;;AACK;;AAAA;;AAGL;;AAAA;;AACA;;AAAA;;AAGJ;;AAAA;;AACC;;AAAA;;AACA;;AAAA;;AAElB;;AAAA;;AAEqB;;AAAA;;AACF;;AAAA;;AAGA;;AAAA;;AACC;;AAAA;;AACD;;AAAA;;AACI;;AAAA;;AAGJ;;AAAA;;AACE;;AAAA;;AACD;;AAAA;;AACO;;AAAA;;AACN;;AAAA;;AACS;;AAAA;;AACJ;;AAAA;;AAGT;;AAAA;;AACI;;AAAA;;AAGL;;AAAA;;AACE;;AAAA;;AACE;;AAAA;;AACH;;AAAA;;AACE;;AAAA;;AACA;;AAAA;;AAGI;;AAAA;;AACS;;AAAA;;AACF;;AAAA;;AACP;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cElQ9B;AAoBA;AAIA;AAOA;AAMA;AAIA;AAIA;AASA;AAQA;;;UA4EaC,U;;;;;yBAAAA,U;AAAS,O;;;cAATA,U;AAAS,oBAFR,4CAAAR,YAEQ;;;kBAdX,CACP,8CAAA/L,YADO,EAEP,wDAAAwM,aAFO,EAGP,kDAAAZ,gBAHO,EAIP,6EAAApM,kBAAA,SAA2B;AACzB1P,kBAAQ,EAAE;AACRC,wBAAY,EAAE,oBADN;AAERC,wBAAY,EAAE,OAFN;AAGRC,2BAAe,EAAE,UAHT,CAGoB;;AAHpB;AADe,SAA3B,CAJO,C;;;;6HAcEsc,U,EAAS;AAAA,yBAlElB,4CAAAR,YAkEkB,EAjElB,yDAAAU,kBAiEkB,EAhElB,0DAAAC,mBAgEkB,EA/DlB,yDAAAC,mBA+DkB,EA9DlB,yDAAAC,uBA8DkB,EA7DlB,qDAAAC,mBA6DkB,EA5DlB,sDAAAC,sBA4DkB,EA3DlB,wDAAAC,iBA2DkB,EA1DlB,uDAAAC,uBA0DkB,EAzDlB,yDAAAC,mBAyDkB,EAxDlB,0DAAAC,mBAwDkB,EAvDlB,8DAAAC,qBAuDkB,EAtDlB,8DAAAC,qBAsDkB,EArDlB,kFAAAC,wCAqDkB,EApDlB,iEAAAC,wBAoDkB,EAnDlB,gEAAAC,sBAmDkB,EAlDlB,iEAAAC,uBAkDkB,EAjDlB,gEAAAC,sBAiDkB,EAhDlB,oEAAAC,0BAgDkB,EA/ClB,kEAAAC,sBA+CkB,EA9ClB,mEAAAC,uBA8CkB,EA7ClB,gEAAAC,wBA6CkB,EA5ClB,gEAAAC,6BA4CkB,EA3ClB,6DAAAC,mBA2CkB,EA1ClB,+DAAAC,qBA0CkB,EAzClB,iEAAAC,uBAyCkB,EAxClB,8DAAAC,oBAwCkB,EAvClB,yDAAAC,sBAuCkB,EAtClB,gEAAAC,sBAsCkB,EArClB,sDAAAC,kBAqCkB,EApClB,+DAAAC,sBAoCkB,EAnClB,0DAAAC,kBAmCkB,EAlClB,oDAAAC,iBAkCkB,EAjClB,oEAAAC,wBAiCkB,EAhClB,oDAAAC,iBAgCkB,EA/BlB,sEAAAC,8BA+BkB,EA9BlB,kDAAAC,eA8BkB,EA7BlB,2DAAAC,wBA6BkB,EA5BlB,oEAAAC,0BA4BkB,EA3BlB,6EAAAC,gCA2BkB,EA1BlB,yEAAAC,4BA0BkB,EAzBlB,mDAAAC,eAyBkB,EAxBlB,8DAAAC,sBAwBkB,EAvBlB,sDAAAC,mBAuBkB,EAtBlB,4DAAAC,oBAsBkB,EArBlB,yDAAAC,uBAqBkB,EApBlB,0DAAAC,mBAoBkB,EAnBlB,oEAAAC,yBAmBkB,EAlBlB,6EAAAC,iCAkBkB,EAjBlB,2EAAAC,+BAiBkB,EAhBlB,yEAAAC,6BAgBkB;AAhBW,oBAG7B,8CAAA1P,YAH6B,EAI7B,wDAAAwM,aAJ6B,EAK7B,kDAAAZ,gBAL6B,EAKb,8GALa;AAgBX,S;AAXF,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCpGPa,mB;AASX,uCAAc;AAAA;;AAAA;;AARd,eAAAllB,IAAA,GAAO,EAAP;AACA,eAAAO,gBAAA,GAAmB,IAAnB;AACA,eAAAoH,WAAA,GAAc,IAAd;AAEA,eAAA3L,OAAA,GAAU,CAAC;AAAEjF,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAE6Y,gBAAI,EAAE;AAAR,WAAnB,EAAuC;AAAEA,gBAAI,EAAE,SAAR;AAAmBJ,oBAAQ,EAAE;AAA7B,WAAvC,CAAV;AAEA,eAAAjI,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACA/nB,sBAAU,CAAC,YAAM;AACf,qBAAI,CAACC,gBAAL,GAAwB,KAAxB;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WALD;AAMD;;;;iBAED,eAAM+nB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBA3BU3D,mB;AAAkB,O;;;cAAlBA,mB;AAAkB,wC;AAAA,gB;AAAA,e;AAAA,0R;AAAA;AAAA;AA3B3B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAYF;;;;AAVI;;AAAA,uFAAa,kBAAb,EAAa,oBAAb,EAAa,SAAb,EAAa,WAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,aAAb,EAAa,eAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWKC,oB;AAMX,wCAAc;AAAA;;AAAA;;AALd,eAAAnlB,IAAA,GAAO,EAAP;AACA,eAAAhE,OAAA,GAAU,CAAC;AAAEjF,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAE6Y,gBAAI,EAAE;AAAR,WAAnB,EAAwC;AAAEA,gBAAI,EAAE;AAAR,WAAxC,CAAV;AAEA,eAAArI,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBArBU1D,oB;AAAmB,O;;;cAAnBA,oB;AAAmB,yC;AAAA,gB;AAAA,e;AAAA,2P;AAAA;AAAA;AAzB5B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAUF;;;;AARI;;AAAA,uFAAa,SAAb,EAAa,WAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,WAAb,EAAa,EAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBK2C,wB;AAaX,4CAAc;AAAA;;AAAA;;AAZd,eAAA9nB,IAAA,GAAO,EAAP;AACA,eAAAO,gBAAA,GAAmB,IAAnB;AACA,eAAAoH,WAAA,GAAc,IAAd;AAEA,eAAA3L,OAAA,GAAU,CACR;AAAEjF,gBAAI,EAAE,MAAR;AAAgBsP,uBAAW,EAAE;AAAA,qBAAM,IAAN;AAAA;AAA7B,WADQ,EAER;AAAEuJ,gBAAI,EAAE,QAAR;AAAkBvJ,uBAAW,EAAE,qBAAAjB,KAAK;AAAA,qBAAI,OAAI,CAAC0jB,gBAAL,CAAsB1jB,KAAtB,CAAJ;AAAA;AAApC,WAFQ,EAGR;AAAEwK,gBAAI,EAAE,SAAR;AAAmBvJ,uBAAW,EAAE;AAAA,qBAAM,IAAN;AAAA;AAAhC,WAHQ,CAAV;AAMA,eAAAkB,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACA/nB,sBAAU,CAAC,YAAM;AACf,qBAAI,CAACC,gBAAL,GAAwB,KAAxB;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WALD;AAMD;;;;iBAED,eAAM+nB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAEO,0BAAiBzjB,KAAjB,EAAkC;AACxC,gBAAM2jB,KAAK,GAAG3jB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAIA,IAAI,KAAK,MAAb;AAAA,aAAjB,EAAsC5F,MAApD;AACA,gBAAMspB,OAAO,GAAG5jB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAIA,IAAI,KAAK,QAAb;AAAA,aAAjB,EAAwC5F,MAAxD;AAEA,oCAAiBqpB,KAAjB,wBAAoCC,OAApC;AACD;;;;;;;yBAtCUlB,wB;AAAuB,O;;;cAAvBA,wB;AAAuB,mD;AAAA,gB;AAAA,gB;AAAA,oU;AAAA;AAAA;AA9BhC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAeF;;;;AAbI;;AAAA,uFAAa,kBAAb,EAAa,oBAAb,EAAa,SAAb,EAAa,WAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,YAAb,EAAa,IAAb,EAAa,iBAAb,EAAa,QAAb,EAAa,cAAb,EAAa,EAAb,EAAa,OAAb,EAAa,EAAb,EAAa,aAAb,EAAa,eAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGA;;AACE;;AAAQ;;AAAe;;AAAU;;AAAM;;AAA4C;;AACrF;;;;;;AADyC;;AAAA;;;;;;AAEzC;;AAA0B;;AAAQ;;AAAI;;AAAU;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAChD;;AACE;;AAAQ;;AAAO;;AAAU;;AAC3B;;;;;;AAD2B;;AAAA,yJAAAlY,IAAA;;;;UAiBtB0X,yB;AAWX,6CAAc;AAAA;;AAAA;;AAVd,eAAAtnB,IAAA,GAAO,EAAP;AAEA,eAAAhE,OAAA,GAAU,CAAC;AAAEjF,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAE6Y,gBAAI,EAAE;AAAR,WAAnB,EAAuC;AAAEA,gBAAI,EAAE;AAAR,WAAvC,CAAV;AAMA,eAAArI,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,4BAAmBY,gBAAnB,EAAqC;AACnCC,mBAAO,CAACC,GAAR,CAAYF,gBAAZ;AAEA,iBAAKG,QAAL,GAAgBH,gBAAgB,CAAC3xB,KAAjC;;AACA,gBAAI2xB,gBAAgB,CAAC1xB,IAAjB,KAA0B,MAA9B,EAAsC;AACpC,mBAAK8xB,cAAL,GAAsBJ,gBAAgB,CAAC3c,OAAvC;AACA,mBAAKgd,iBAAL,GAAyBnyB,SAAzB;AACD,aAHD,MAGO;AACL,mBAAKmyB,iBAAL,GAAyBL,gBAAgB,CAAC3c,OAA1C;AACA,mBAAK+c,cAAL,GAAsBlyB,SAAtB;AACD;;AAED8xB,4BAAgB,CAAC3xB,KAAjB,CAAuBQ,cAAvB;AACAmxB,4BAAgB,CAAC3xB,KAAjB,CAAuBS,eAAvB;AACD;;;iBAED,eAAMuwB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBA1CUvB,yB;AAAwB,O;;;cAAxBA,yB;AAAwB,yC;AAAA,iB;AAAA,e;AAAA,sS;AAAA;AAAA;AAvCjC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAQ;;AAAK;;AAAU;;AACZ;;AAAM;;AAAW;;AAAQ;;AACtC;;AACA;;AAGA;;AACA;;AAGF;;AACA;;AAQE;AAAA,qBAAoB,IAAAiC,kBAAA,QAApB;AAA8C,aAA9C;;AAEF;;AACF;;;;AAnBQ;;AAAA;;AAGA;;AAAA;;AACA;;AAAA;;AAMJ;;AAAA,uFAAa,SAAb,EAAa,WAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCK7B,gB;AAOX,oCAAc;AAAA;;AAAA;;AANd,eAAA1nB,IAAA,GAAO,EAAP;AACA,eAAAxK,QAAA,GAAW,EAAX;AAGA,eAAA+R,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjB,kBAAMzoB,IAAI,GAAG0oB,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAb;AACAN,gBAAE,CAACtoB,IAAI,CAACwB,MAAL,CAAY,CAAZ,EAAe,EAAf,CAAD,CAAF;AACD,aAHD;;AAKA1O,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,qBAAYv0B,GAAZ,EAAiB;AACf,mBAAO;AACL,4BAAcA,GAAG,CAACk1B,GAAJ,GAAU,EAAV,KAAiB;AAD1B,aAAP;AAGD;;;iBAED,8BAAmC;AAAA,gBAApBl1B,GAAoB,UAApBA,GAAoB;AAAA,gBAAfG,MAAe,UAAfA,MAAe;AAAA,gBAAPD,KAAO,UAAPA,KAAO;AACjC,mBAAO;AACL,2BAAaA,KAAK,KAAK;AADlB,aAAP;AAGD;;;;;;;yBAnCUkzB,gB;AAAe,O;;;cAAfA,gB;AAAe,qC;AAAA,iB;AAAA,e;AAAA,0U;AAAA;AAAA;AA5BxB;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AASE;;AACA;;AACA;;AACF;;AACF;;;;AAXI;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,WAAb,EAAa,EAAb,EAAa,UAAb,EAAa,eAAb,EAAa,YAAb,EAAa,IAAb;;AAQ4D;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOvDV,mB;AAaX,uCAAc;AAAA;;AAAA;;AAZd,eAAAhnB,IAAA,GAAO,EAAP;AACA,eAAAO,gBAAA,GAAmB,IAAnB;AACA,eAAAoH,WAAA,GAAc,IAAd;AAEA,eAAA3L,OAAA,GAAU,CACR;AAAEjF,gBAAI,EAAE,MAAR;AAAgBsP,uBAAW,EAAE;AAAA,qBAAM,IAAN;AAAA;AAA7B,WADQ,EAER;AAAEuJ,gBAAI,EAAE,QAAR;AAAkBvJ,uBAAW,EAAE,qBAAAjB,KAAK;AAAA,qBAAI,OAAI,CAAC0jB,gBAAL,CAAsB1jB,KAAtB,CAAJ;AAAA;AAApC,WAFQ,EAGR;AAAEwK,gBAAI,EAAE,SAAR;AAAmBvJ,uBAAW,EAAE;AAAA,qBAAM,IAAN;AAAA;AAAhC,WAHQ,CAAV;AAMA,eAAAkB,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACA/nB,sBAAU,CAAC,YAAM;AACf,qBAAI,CAACC,gBAAL,GAAwB,KAAxB;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WALD;AAMD;;;;iBAED,eAAM+nB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAEO,0BAAiBzjB,KAAjB,EAAkC;AACxC,gBAAM2jB,KAAK,GAAG3jB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAIA,IAAI,KAAK,MAAb;AAAA,aAAjB,EAAsC5F,MAApD;AACA,gBAAMspB,OAAO,GAAG5jB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAIA,IAAI,KAAK,QAAb;AAAA,aAAjB,EAAwC5F,MAAxD;AAEA,oCAAiBqpB,KAAjB,wBAAoCC,OAApC;AACD;;;;;;;yBAtCUhC,mB;AAAkB,O;;;cAAlBA,mB;AAAkB,8C;AAAA,gB;AAAA,e;AAAA,6S;AAAA;AAAA;AA7B3B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAcF;;;;AAZI;;AAAA,uFAAa,kBAAb,EAAa,oBAAb,EAAa,SAAb,EAAa,WAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,YAAb,EAAa,IAAb,EAAa,cAAb,EAAa,EAAb,EAAa,OAAb,EAAa,EAAb,EAAa,aAAb,EAAa,eAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcKW,uB;AAOX,2CAAc;AAAA;;AAAA;;AANd,eAAA3nB,IAAA,GAAO,EAAP;AACA,eAAAxK,QAAA,GAAW,EAAX;AAGA,eAAA+R,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjB,kBAAMzoB,IAAI,GAAG0oB,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,EAAyBpnB,MAAzB,CAAgC,CAAhC,EAAmC,GAAnC,CAAb;;AADiB,2DAGCxB,IAHD;AAAA;;AAAA;AAGjB,0EAAwB;AAAA,sBAAb1L,GAAa;AACtBA,qBAAG,CAACoC,MAAJ,GAAa0I,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACmd,MAAL,KAAgB,EAA3B,IAAiC,EAA9C;AACD;AALgB;AAAA;AAAA;AAAA;AAAA;;AAOjB+L,gBAAE,CAACtoB,IAAD,CAAF;AACD,aARD;;AAUAlN,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,sBAAav0B,GAAb,EAAkB;AAChB40B,mBAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB70B,GAAnB;;AACA,gBAAI,CAACA,GAAL,EAAU;AACR,qBAAO,EAAP;AACD;;AACD,gBAAIA,GAAG,CAACoC,MAAJ,KAAeS,SAAnB,EAA8B;AAC5B,qBAAO,EAAP;AACD;;AACD,mBAAO7C,GAAG,CAACoC,MAAX;AACD;;;;;;;yBAvCUixB,uB;AAAsB,O;;;cAAtBA,uB;AAAsB,4C;AAAA,iB;AAAA,e;AAAA,sU;AAAA;AAAA;AA5B/B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AASE;;AACA;;AACA;;AACF;;AACF;;;;AAXI;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,WAAb,EAAa,gBAAb,EAAa,YAAb,EAAa,IAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCoBKb,mB;AAUX,uCAAc;AAAA;;AAAA;;AATd,eAAA9mB,IAAA,GAAO,EAAP;AAEA,eAAApD,IAAA,GAAO,EAAP;AAEA,eAAAZ,OAAA,GAAU,CAAC;AAAEjF,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAE6Y,gBAAI,EAAE;AAAR,WAAnB,EAAwC;AAAEA,gBAAI,EAAE;AAAR,WAAxC,CAAV;AAGA,eAAArI,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB;AACA,mBAAI,CAACzrB,IAAL,sBAAgByrB,IAAhB,EAFiB,CAIjB;;AACA,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAND;AAOD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,sBAAavxB,KAAb,EAAoB;AAClB,gBAAMjC,GAAG,GAAGiC,KAAK,CAACK,MAAN,CAAanD,KAAb,CAAmBmlB,WAAnB,EAAZ,CADkB,CAGlB;;AACA,gBAAM/c,IAAI,GAAG,KAAKA,IAAL,CAAUsH,MAAV,CAAiB,UAAU2Q,CAAV,EAAa;AACzC,qBAAOA,CAAC,CAACjF,IAAF,CAAO+J,WAAP,GAAqBmB,OAArB,CAA6BzlB,GAA7B,MAAsC,CAAC,CAAvC,IAA4C,CAACA,GAApD;AACD,aAFY,CAAb,CAJkB,CAQlB;;AACA,iBAAK2K,IAAL,GAAYpD,IAAZ,CATkB,CAUlB;;AACA,iBAAK6sB,KAAL,CAAW7tB,MAAX,GAAoB,CAApB;AACD;;;;;;;yBA3CUkrB,mB;AAAkB,O;;;cAAlBA,mB;AAAkB,oC;AAAA;AAAA;sEAMlB,qGAAA3f,kB,EAAkB,C;;;;;;;;;;;;;;AAvC3B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAIE;AAAA,qBAAS,IAAAuiB,YAAA,QAAT;AAA6B,aAA7B;;AAJF;;AAMA;;AAYF;;;;AATI;;AAAA,6FAAmB,YAAnB,EAAmB,oBAAnB,EAAmB,cAAnB,EAAmB,EAAnB,EAAmB,cAAnB,EAAmB,EAAnB,EAAmB,OAAnB,EAAmB,EAAnB,EAAmB,MAAnB,EAAmB,QAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQI;;AACE;;AAAK;;AAAQ;;AAAO;;AAAS;;AAAgB;;AAC7C;;AACA;;AAAK;;AAA2F;;AAClG;;;;;;;;;AADO;;AAAA;;;;;;AAZX;;AACE;;AAcF;;;;UAKK9B,oB;AAOX,wCAAc;AAAA;;AAAA;;AANd,eAAA5nB,IAAA,GAAO,EAAP;AAEA,eAAAhE,OAAA,GAAU,CAAC;AAAEjF,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAE6Y,gBAAI,EAAE;AAAR,WAAnB,EAAuC;AAAEA,gBAAI,EAAE;AAAR,WAAvC,CAAV;AAEA,eAAArI,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAI,CAAC7mB,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAM8mB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBAtBUjB,oB;AAAmB,O;;;cAAnBA,oB;AAAmB,oC;AAAA,gB;AAAA,e;AAAA,yV;AAAA;AAAA;AAzC5B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AASE;;AAgBF;;AACF;;;;AAxBI;;AAAA,uFAAa,SAAb,EAAa,WAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,GAAb,EAAa,cAAb,EAAa,EAAb;;AAOuB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYlBxC,oB;AAKX,wCAAc;AAAA;;AAAA;;AAJd,eAAAplB,IAAA,GAAO,EAAP;AAEA,eAAAuH,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBApBUzD,oB;AAAmB,O;;;cAAnBA,oB;AAAmB,yC;AAAA,iB;AAAA,gB;AAAA,6e;AAAA;AAAA;AAjC5B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAWE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACF;;AACF;;;;AAfI;;AAAA,yGAA+B,cAA/B,EAA+B,EAA/B,EAA+B,cAA/B,EAA+B,CAA/B,EAA+B,WAA/B,EAA+B,EAA/B,EAA+B,YAA/B,EAA+B,IAA/B,EAA+B,YAA/B,EAA+B,IAA/B,EAA+B,MAA/B,EAA+B,QAA/B;;AAQgC;;AAAA;;AACE;;AAAA;;AAGA;;AAAA;;AACC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJ/B;;AAEE;AAAA;;AAAA;;AAAA;;AAAA,gDAA+B,OAA/B,IAA0C,IAA1C;AAA8C,WAA9C;;AAGA;;AACF;;;;;;AADE;;AAAA;;;;;;;;AAEF;;AAEE;AAAA;;AAAA;;AAAA;;AAAA,+CAA4B,MAA5B,EAAoC,WAApC;AAAkC,WAAlC;;AAFF;;;;;;AAKE;;;;;;AAZF;;AAOA;;;;;;;;AAJG;;AAOA;;AAAA;;;;;;;;AAQH;;AAEE;AAAA;;AAAA;;AAAA;;AAAA,kDAA+B,SAA/B,IAA4C,IAA5C;AAAgD,WAAhD;;AAGA;;AACF;;;;;;AADE;;AAAA;;;;;;;;AAEF;;AAEE;AAAA;;AAAA;;AAAA;;AAAA,kDAA2B,SAA3B,IAAwC,KAAxC;AAA6C,WAA7C,EAA8C,QAA9C,EAA8C;AAAA;;AAAA;;AAAA;;AAAA,+CAChB,QADgB,EACN,YADM;AACR,WADtC;;AAIA;;AAAqB;;AAAI;;AACzB;;AAAuB;;AAAM;;AAC/B;;;;;;AAJE;;;;;;AAXF;;AAOA;;;;;;;;AAJG;;AAKA;;AAAA;;;;;;AAYH;;;;;;AAAA;;;;UAOCE,oB;AAMX,wCAAc;AAAA;;AAAA;;AALd,eAAAqE,OAAA,GAAU,EAAV;AACA,eAAA3pB,IAAA,GAAO,EAAP;AAEA,eAAAuH,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,qBAAYvxB,KAAZ,EAAmBgO,IAAnB,EAAyB1Q,QAAzB,EAAmC;AACjCs0B,mBAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCv0B,QAAvC;AACA,iBAAK+0B,OAAL,CAAa/0B,QAAQ,GAAG,GAAX,GAAiB0Q,IAA9B,IAAsC,KAAtC;AACA,iBAAKtF,IAAL,CAAUpL,QAAV,EAAoB0Q,IAApB,IAA4BhO,KAAK,CAACK,MAAN,CAAanD,KAAzC;AACA,iBAAKwL,IAAL,sBAAgB,KAAKA,IAArB;AACAkpB,mBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKnpB,IAAL,CAAUpL,QAAV,EAAoB0Q,IAApB,CAAxB;AACD;;;;;;;yBA7BUggB,oB;AAAmB,O;;;cAAnBA,oB;AAAmB,yC;AAAA,iB;AAAA,e;AAAA,6rB;AAAA;AAAA;AArE5B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAUE;;AACE;;AAgBF;;AACA;;AACE;;AAkBF;;AACA;;AACE;;AAGF;;AACF;;AACF;;;;AAnDI;;AAAA,yFAAmB,OAAnB,EAAmB,CAAnB,EAAmB,YAAnB,EAAmB,oBAAnB,EAAmB,cAAnB,EAAmB,EAAnB,EAAmB,MAAnB,EAAmB,QAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCqBK6B,kB;AAWX,oCAAoBxzB,EAApB,EAA2C;AAAA;;AAAA;;AAAvB,eAAAA,EAAA,GAAAA,EAAA;AARpB,eAAA2W,KAAA,GAAQ,EAAR;AACA,eAAAtK,IAAA,GAAc,EAAd;AACA,eAAA4pB,MAAA,GAAS,IAAT;AACA,eAAAhtB,IAAA,GAAc,EAAd;AACA,eAAA4P,IAAA,GAAY,CAAC,MAAD,EAAS,QAAT,EAAmB,SAAnB,CAAZ;AAEA,eAAAjF,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAI,CAACtiB,GAAL,CAAS,UAAA8O,CAAC,EAAI;AACxBA,eAAC,CAACgV,OAAF,GAAYjJ,IAAI,CAACwB,GAAL,GAAWpnB,QAAX,EAAZ;AACA,qBAAO6Z,CAAP;AACD,aAHW,CAAZ;AAKA,mBAAI,CAACjY,IAAL,sBAAgB,OAAI,CAACoD,IAArB;AACD,WAPD;AASA,eAAKygB,KAAL;AACD;;;;iBAED,mBAAUA,KAAV,EAAyBC,GAAzB,EAAoC;AAClC,mBAAOthB,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACmd,MAAL,KAAgBmE,GAA3B,IAAkCD,KAAzC;AACD;;;iBAED,iBAAK;AACH,gBAAI,CAAC,KAAKmJ,MAAV,EAAkB;AAChB;AACD;;AAEDtpB,sBAAU,CAAC,KAAKwpB,YAAL,CAAkB51B,IAAlB,CAAuB,IAAvB,CAAD,EAA+B,EAA/B,CAAV;AACD;;;iBAED,gBAAI;AACF,iBAAK01B,MAAL,GAAc,KAAd;AACD;;;iBAED,eAAM;AACJ,iBAAK5pB,IAAL,CAAUwB,MAAV,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,KAAK5E,IAAL,CAAU,KAAK0N,KAAL,EAAV,CAAvB;AACD;;;iBAED,kBAAS;AACP,iBAAKtK,IAAL,CAAUwB,MAAV,CAAiB,CAAjB,EAAoB,KAAKxB,IAAL,CAAUN,MAA9B;AACD;;;iBAED,wBAAe;AACb,gBAAMqqB,MAAM,GAAG,KAAKC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAf;AACA,gBAAMC,OAAO,GAAG,KAAKD,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAhB;AACA,gBAAME,MAAM,GAAG,KAAKF,SAAL,CAAe,CAAf,EAAkB,GAAlB,CAAf;AACA,gBAAMjzB,IAAI,GAAG,KAAKyV,IAAL,CAAUyd,OAAV,CAAb;AACA,gBAAMjqB,IAAI,GAAG,KAAKA,IAAlB;;AAEA,gBAAIA,IAAI,CAACN,MAAT,EAAiB;AACf,kBAAMpL,GAAG,GAAG0L,IAAI,CAAC+pB,MAAD,CAAhB;AACAz1B,iBAAG,CAACyC,IAAD,CAAH,GAAYiJ,IAAI,CAACkqB,MAAD,CAAJ,CAAanzB,IAAb,CAAZ;AACAzC,iBAAG,CAACu1B,OAAJ,GAAcjJ,IAAI,CAACwB,GAAL,GAAWpnB,QAAX,EAAd;AACD;;AAED,iBAAKgF,IAAL,sBAAgB,KAAKA,IAArB,EAba,CAeb;AACA;;AACA,iBAAKygB,KAAL;AACD;;;iBAED,eAAM6H,EAAN,EAAa;AACX,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBA7EU1B,kB,EAAiB,6H;AAAA,O;;;cAAjBA,kB;AAAiB,uC;AAAA;AAAA;;;;;;;;;;;;;;;AApC1B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACA;;AACE;;AAA6B;AAAA,qBAAS,IAAA1G,KAAA,EAAT;AAAgB,aAAhB;;AAAkB;;AAAK;;AAAK;;AACzD;;AAA6B;AAAA,qBAAS,IAAA0J,IAAA,EAAT;AAAe,aAAf;;AAAiB;;AAAI;;AAAK;;AACvD;;AAA6B;AAAA,qBAAS,IAAArpB,GAAA,EAAT;AAAc,aAAd;;AAAgB;;AAAG;;AAAK;;AACrD;;AAA6B;AAAA,qBAAS,IAAAoR,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AACxD;;AACF;;AACA;;AAWE;;AACA;;AACA;;AACF;;AACF;;;;AAZI;;AAAA,yFAAmB,OAAnB,EAAmB,CAAnB,EAAmB,YAAnB,EAAmB,oBAAnB,EAAmB,cAAnB,EAAmB,EAAnB,EAAmB,aAAnB,EAAmB,SAAnB,EAAmB,MAAnB,EAAmB,QAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcKuT,wB,GAtCb;AAAA;;AAuCE,aAAA2E,QAAA,GAAW,CAAC;AAAErzB,cAAI,EAAE;AAAR,SAAD,EAAmB;AAAE6Y,cAAI,EAAE;AAAR,SAAnB,EAAuC;AAAEA,cAAI,EAAE;AAAR,SAAvC,CAAX;AAEA,aAAAya,QAAA,GAAW,CAAC;AAAEtzB,cAAI,EAAE,MAAR;AAAgB6Y,cAAI,EAAE;AAAtB,SAAD,EAAiC;AAAEA,cAAI,EAAE;AAAR,SAAjC,CAAX;AAEA,aAAA0a,KAAA,GAAQ,CACN;AAAE1a,cAAI,EAAE,OAAR;AAAiB2a,gBAAM,EAAE,MAAzB;AAAiCC,iBAAO,EAAE;AAA1C,SADM,EAEN;AAAE5a,cAAI,EAAE,QAAR;AAAkB2a,gBAAM,EAAE,QAA1B;AAAoCC,iBAAO,EAAE;AAA7C,SAFM,CAAR;AAKA,aAAAC,KAAA,GAAQ,CACN;AAAE7a,cAAI,EAAE,QAAR;AAAkB2a,gBAAM,EAAE;AAA1B,SADM,EAEN;AAAE3a,cAAI,EAAE,QAAR;AAAkB2a,gBAAM,EAAE;AAA1B,SAFM,CAAR;AAKA,aAAAhjB,UAAA,GAAa,4EAAAA,UAAb;AACD,O;;;yBAhBYke,wB;AAAuB,O;;;cAAvBA,wB;AAAuB,6C;AAAA,gB;AAAA,gB;AAAA,yU;AAAA;AAAA;AAnChC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAUA;;AACA;;AASF;;;;AAlBI;;AAAA,wFAAc,SAAd,EAAc,YAAd,EAAc,YAAd,EAAc,oBAAd,EAAc,cAAd,EAAc,EAAd,EAAc,cAAd,EAAc,CAAd,EAAc,WAAd,EAAc,GAAd;;AAWA;;AAAA,wFAAc,SAAd,EAAc,YAAd,EAAc,cAAd,EAAc,EAAd,EAAc,cAAd,EAAc,EAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqBI;;AACE;;AAAK;;AAA+B;;AACtC;;;;;;AADO;;AAAA;;;;;;;;AAcP;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAGF;;;;;;AANE,2GAAwC,qBAAxC,EAAwC,YAAxC;;;;;;AAYF;;;;;;AAAA;;;;;;AAMA;;AAA4B;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAI5B;;AAA4B;;AAAW;;;;;;AAAX;;AAAA;;;;;;AAM5B;;AAA4B;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAI5B;;AAA4B;;AAAW;;;;;;AAAX;;AAAA;;;;UAc3BE,oB;AASX,wCAAc;AAAA;;AAAA;;AANd,eAAA3lB,IAAA,GAAc,EAAd;AACA,eAAAxK,QAAA,GAAgB,EAAhB;AAGA,eAAA+R,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,gBAAO/wB,KAAP,EAAc;AACZid,wBAAY,CAAC,KAAKT,OAAN,CAAZ;AACA,iBAAKA,OAAL,GAAexT,UAAU,CAAC,YAAM;AAC9B4oB,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB7xB,KAAtB;AACD,aAFwB,EAEtB,GAFsB,CAAzB;AAGD;;;iBAED,eAAMgxB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,yBAAgBv0B,GAAhB,EAAqB;AACnB40B,mBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC70B,GAAnC;AACA,iBAAKm1B,KAAL,CAAWtsB,SAAX,CAAqButB,eAArB,CAAqCp2B,GAArC;AACD;;;iBAED,wBAAegD,KAAf,EAAsB;AACpB4xB,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B7xB,KAA9B;AACD;;;;;;;yBAxCUquB,oB;AAAmB,O;;;cAAnBA,oB;AAAmB,wC;AAAA;AAAA;;;;;;;;;;;;;;;AAzF5B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AASE;AAAA,qBAAQ,IAAAgF,MAAA,QAAR;AAAsB,aAAtB;;AAGA;;AAAwD;AAAA,qBAAU,IAAAC,cAAA,QAAV;AAAgC,aAAhC;;AACtD;;AAKF;;AAGA;;AAOE;;AAWF;;AAEA;;AACE;;AAGF;;AAEA;;AACE;;AAIA;;AAGF;;AAEA;;AACE;;AAIA;;AAGF;;AACF;;AACF;;AAEA;;AACE;;AAA4C;;AAAG;;AAAU;;AAAK;;AAAW;;AAAG;;AAAI;;AAAK;;AACrF;;AAAG;;AAAM;;AAAK;;AAEhB;;;;AAtEI;;AAAA,yGAA+B,cAA/B,EAA+B,EAA/B,EAA+B,cAA/B,EAA+B,EAA/B,EAA+B,WAA/B,EAA+B,EAA/B,EAA+B,YAA/B,EAA+B,IAA/B,EAA+B,MAA/B,EAA+B,QAA/B;;AAS0B;;AAAA;;AAUxB;;AAAA,kFAAY,YAAZ,EAAY,KAAZ,EAAY,UAAZ,EAAY,KAAZ,EAAY,WAAZ,EAAY,KAAZ,EAAY,eAAZ,EAAY,KAAZ;;AAmBgC;;AAAA,oFAAc,UAAd,EAAc,GAAd;;AAME;;AAAA;;AAUH;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1D7B;;AACE;;AAAK;;AAAQ;;AAAO;;AAAS;;AAC7B;;AAAK;;AAA+C;;AACtD;;;;;;AADO;;AAAA;;;;;;;;AAcP;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEF;;;;;;AALE,2GAAwC,qBAAxC,EAAwC,YAAxC;;;;;;AAUF;;AAAQ;;AAAc;;;;;;AAAd;;AAAA;;;;;;AAKR;;AAAQ;;AAAoB;;;;;;AAApB;;AAAA;;;;;;AAKR;;AAAQ;;AAAW;;;;;;AAAX;;AAAA;;;;;;AAKR;;AAAkC;;AAAI;;AAAG;;AAAW;;;;;;;AAAjD;;AAAsC;;AAAA;;;;UASxClF,oB;AASX,wCAAc;AAAA;;AAAA;;AANd,eAAA1lB,IAAA,GAAc,EAAd;AACA,eAAAxK,QAAA,GAAgB,EAAhB;AAGA,eAAA+R,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,gBAAO/wB,KAAP,EAAc;AACZid,wBAAY,CAAC,KAAKT,OAAN,CAAZ;AACA,iBAAKA,OAAL,GAAexT,UAAU,CAAC,YAAM;AAC9B4oB,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB7xB,KAAtB;AACD,aAFwB,EAEtB,GAFsB,CAAzB;AAGD;;;iBAED,eAAMgxB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,yBAAgBv0B,GAAhB,EAAqB;AACnB40B,mBAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmC70B,GAAnC;AACA,iBAAKm1B,KAAL,CAAWtsB,SAAX,CAAqButB,eAArB,CAAqCp2B,GAArC;AACD;;;iBAED,wBAAegD,KAAf,EAAsB;AACpB4xB,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B7xB,KAA9B;AACD;;;;;;;yBAxCUouB,oB;AAAmB,O;;;cAAnBA,oB;AAAmB,yC;AAAA;AAAA;;;;;;;;;;;;;;;AAnF5B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACA;;AACE;;AAA6B;AAAA,qBAAS,IAAA+D,KAAA,0BAAT;AAAwC,aAAxC;;AAA0C;;AAAU;;AACjF;;AACA;;AAA6B;AAAA,qBAAS,IAAAA,KAAA,4BAAT;AAA0C,aAA1C;;AAA4C;;AAAY;;AACvF;;AACF;;AACA;;AASE;AAAA,qBAAQ,IAAAkB,MAAA,QAAR;AAAsB,aAAtB;;AAGA;;AAAyD;AAAA,qBAAU,IAAAC,cAAA,QAAV;AAAgC,aAAhC;;AACvD;;AAMF;;AAGA;;AAOE;;AAUF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACA;;AACF;;AACF;;;;AA3DI;;AAAA,yGAA+B,cAA/B,EAA+B,EAA/B,EAA+B,cAA/B,EAA+B,EAA/B,EAA+B,WAA/B,EAA+B,EAA/B,EAA+B,YAA/B,EAA+B,IAA/B,EAA+B,MAA/B,EAA+B,QAA/B;;AAS0B;;AAAA;;AAWxB;;AAAA,kFAAY,YAAZ,EAAY,KAAZ,EAAY,UAAZ,EAAY,KAAZ,EAAY,WAAZ,EAAY,KAAZ,EAAY,eAAZ,EAAY,KAAZ;;AAiBiC;;AAAA;;AAKG;;AAAA;;AAKJ;;AAAA;;AAKE;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3ChC;;AACE;;AAKE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAG;;AAA6B;;AAClC;;AACF;;;;;;;AAPI;;AAAA,0GAAwC,qBAAxC,EAAwC,WAAxC;;AAKG;;AAAA;;;;;;;;AAeP;;AACE;;AAME;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AANF;;AASF;;AACA;;AACE;;AAME;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AANF;;AASF;;AACA;;AACE;;AAME;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AANF;;AASF;;;;;;;AAhCO;;AAGH;;AAAA;;AACA;;AAIA;;AAGG;;AAAA;;AAGH;;AAAA;;AACA;;AAIA;;AAGG;;AAAA;;AAGH;;AAAA;;AACA;;AAIA;;;;;;;;AAmBJ;;AAEE;AAAA;;AAAA;;AAAA;;AAAA,+CAA4B,SAA5B,EAAuC,YAAvC;AAAqC,WAArC;;AAFF;;;;;;AAKE;;;;UAQD/C,qB;AAaX,yCAAc;AAAA;;AAAA;;AAVd,eAAAgD,MAAA,GAAS,EAAT;AACA,eAAAC,UAAA,GAAa,EAAb;AACA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAtP,MAAA,GAAS,EAAT;AAEA,eAAAkO,OAAA,GAAU,EAAV;AACA,eAAA3pB,IAAA,GAAO,EAAP;AAEA,eAAAuH,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,2BAAkBt0B,KAAlB,EAAyBG,SAAzB,EAAoC;AAClC,gBAAIue,KAAK,GAAG,EAAZ;AAEAA,iBAAK,GAAG;AACNvc,oBAAM,EAAEnC,KAAK,CAACmL,MAAN,GAAe,EAAf,GAAoB,IADtB;AAENnJ,mBAAK,EAAE;AAFD,aAAR;AAKA,mBAAO0c,KAAP;AACD;;;iBAED,oBAAW3b,KAAX,EAAkBhD,GAAlB,EAAuBM,QAAvB,EAAiCL,KAAjC,EAAwC;AACtC,gBAAIy2B,WAAW,GAAG,SAAlB;AACA,gBAAIC,wBAAwB,GAAG,IAA/B;AAEA32B,eAAG,CAAC42B,SAAJ,GAAgB,CAAhB;AACA52B,eAAG,CAAC62B,QAAJ,GAAe,CAAf;AACA72B,eAAG,CAAC82B,aAAJ,GAAoB,CAApB;;AAEA,gBAAI9zB,KAAK,CAACK,MAAN,CAAa0zB,OAAjB,EAA0B;AACxB,kBAAI/zB,KAAK,CAACK,MAAN,CAAanD,KAAb,KAAuB,GAA3B,EAAgC;AAC9B;AACAF,mBAAG,CAAC42B,SAAJ,GAAgB,CAAhB;AACD,eAHD,MAGO,IAAI5zB,KAAK,CAACK,MAAN,CAAanD,KAAb,KAAuB,GAA3B,EAAgC;AACrC;AACAF,mBAAG,CAAC62B,QAAJ,GAAe,CAAf;AACD,eAHM,MAGA,IAAI7zB,KAAK,CAACK,MAAN,CAAanD,KAAb,KAAuB,GAA3B,EAAgC;AACrC;AACAF,mBAAG,CAAC82B,aAAJ,GAAoB,CAApB;AACD;AACF;;AAED,gBAAI72B,KAAK,CAACmL,MAAN,KAAiB,CAArB,EAAwB;AACtB;AACA;AACA,kBACE,CAAC,YAAD,EAAe,QAAf,EAAyBob,OAAzB,CAAiCvmB,KAAK,CAAC,CAAD,CAAL,CAAS+2B,MAA1C,IAAoD,CAAC,CAArD,IACA,CAAC,YAAD,EAAe,QAAf,EAAyBxQ,OAAzB,CAAiCvmB,KAAK,CAAC,CAAD,CAAL,CAAS+2B,MAA1C,IAAoD,CAAC,CAFvD,EAGE;AACA;AACA;AACA,oBAAI/2B,KAAK,CAAC,CAAD,CAAL,CAASg3B,SAAT,KAAuBh3B,KAAK,CAAC,CAAD,CAAL,CAASg3B,SAAhC,IAA6Ch3B,KAAK,CAAC,CAAD,CAAL,CAASi3B,OAAT,KAAqBj3B,KAAK,CAAC,CAAD,CAAL,CAASi3B,OAA/E,EAAwF;AACtF;AACA,uBAAK,IAAIvwB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG1G,KAAK,CAACmL,MAAlC,EAA0CzE,KAAK,EAA/C,EAAmD;AACjD,wBAAI1G,KAAK,CAAC0G,KAAD,CAAL,CAAaqwB,MAAb,KAAwBh3B,GAAG,CAACg3B,MAAhC,EAAwC;AACtC,0BAAIh0B,KAAK,CAACK,MAAN,CAAanD,KAAb,KAAuB,GAA3B,EAAgC;AAC9B;AACAD,6BAAK,CAAC0G,KAAD,CAAL,CAAaiwB,SAAb,GAAyB,CAAzB;AACA32B,6BAAK,CAAC0G,KAAD,CAAL,CAAamwB,aAAb,GAA6B,CAA7B;AACA72B,6BAAK,CAAC0G,KAAD,CAAL,CAAakwB,QAAb,GAAwB,CAAxB;AACD;AACF;;AAED,wBAAI52B,KAAK,CAAC0G,KAAD,CAAL,CAAaiwB,SAAb,KAA2B,CAA3B,IAAgC32B,KAAK,CAAC0G,KAAD,CAAL,CAAakwB,QAAb,KAA0B,CAA1D,IAA+D52B,KAAK,CAAC0G,KAAD,CAAL,CAAamwB,aAAb,KAA+B,CAAlG,EAAqG;AACnGH,8CAAwB,GAAG,KAA3B;AACD;;AACD/B,2BAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC8B,wBAAxC;AACD;AACF;AACF;AACF,aA5BD,MA4BO;AACL,mBAAK,IAAIhwB,MAAK,GAAG,CAAjB,EAAoBA,MAAK,GAAG1G,KAAK,CAACmL,MAAlC,EAA0CzE,MAAK,EAA/C,EAAmD;AACjD,oBAAI1G,KAAK,CAAC0G,MAAD,CAAL,CAAaiwB,SAAb,KAA2B,CAA3B,IAAgC32B,KAAK,CAAC0G,MAAD,CAAL,CAAakwB,QAAb,KAA0B,CAA1D,IAA+D52B,KAAK,CAAC0G,MAAD,CAAL,CAAamwB,aAAb,KAA+B,CAAlG,EAAqG;AACnGH,0CAAwB,GAAG,KAA3B;AACD;;AACD/B,uBAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC8B,wBAAxC;AACD;AACF,aAxDqC,CA0DtC;;;AACA,gBACE12B,KAAK,CAAC2P,MAAN,CAAa,UAAAunB,SAAS;AAAA,qBAAIA,SAAS,CAACL,aAAV,KAA4B,CAAhC;AAAA,aAAtB,EAAyD1rB,MAAzD,KAAoE,CAApE,IACAnL,KAAK,CAAC2P,MAAN,CAAa,UAAAunB,SAAS;AAAA,qBAAIA,SAAS,CAACL,aAAV,KAA4B,CAA5B,IAAiCK,SAAS,CAACP,SAAV,KAAwB,CAAzD,IAA8DO,SAAS,CAACN,QAAV,KAAuB,CAAzF;AAAA,aAAtB,EACGzrB,MADH,KACc,CAHhB,EAIE;AACAwpB,qBAAO,CAACC,GAAR,CAAY,6BAAZ,EADA,CAGA;;AACA,kBAAMuC,iBAAiB,GAAGn3B,KAAK,CAAC2P,MAAN,CAAa,UAAAunB,SAAS;AAAA,uBAAIA,SAAS,CAACP,SAAV,KAAwB,CAA5B;AAAA,eAAtB,EAAqDxrB,MAA/E;AACA,kBAAMisB,oBAAoB,GAAGp3B,KAAK,CAAC2P,MAAN,CAAa,UAAAunB,SAAS;AAAA,uBAAIA,SAAS,CAACP,SAAV,KAAwB,CAAxB,IAA6BO,SAAS,CAACH,MAAV,KAAqB,QAAtD;AAAA,eAAtB,EAC1B5rB,MADH;AAEA,kBAAMksB,wBAAwB,GAAGr3B,KAAK,CAAC2P,MAAN,CAC/B,UAAAunB,SAAS;AAAA,uBAAIA,SAAS,CAACP,SAAV,KAAwB,CAAxB,IAA6BO,SAAS,CAACH,MAAV,KAAqB,YAAtD;AAAA,eADsB,EAE/B5rB,MAFF;AAGA,kBAAMmsB,oBAAoB,GAAGt3B,KAAK,CAAC2P,MAAN,CAAa,UAAAunB,SAAS;AAAA,uBAAIA,SAAS,CAACP,SAAV,KAAwB,CAAxB,IAA6BO,SAAS,CAACH,MAAV,KAAqB,QAAtD;AAAA,eAAtB,EAC1B5rB,MADH;AAGAwpB,qBAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCuC,iBAAjC;AACAxC,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCwC,oBAApC;AACAzC,qBAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCyC,wBAAxC;AACA1C,qBAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC0C,oBAApC;;AAEA,kBAAIH,iBAAiB,GAAG,CAAxB,EAA2B;AACzB,oBAAIA,iBAAiB,KAAKC,oBAA1B,EAAgD;AAC9CX,6BAAW,GAAG,iBAAd;AACD,iBAFD,MAEO,IAAIU,iBAAiB,KAAKE,wBAA1B,EAAoD;AACzDZ,6BAAW,GAAG,qBAAd;AACD,iBAFM,MAEA,IAAIU,iBAAiB,KAAKG,oBAA1B,EAAgD;AACrDb,6BAAW,GAAG,iBAAd;AACD,iBAFM,MAEA;AACLA,6BAAW,GAAG,iBAAd;AACD;AACF;AACF;;AAEDz2B,iBAAK,CAAC,CAAD,CAAL,CAASu3B,WAAT,GAAuBd,WAAvB;AACD;;;iBAED,qBAAY1zB,KAAZ,EAAmBgO,IAAnB,EAAyB1Q,QAAzB,EAAmC;AACjC,iBAAK+0B,OAAL,CAAa/0B,QAAQ,GAAG,GAAX,GAAiB0Q,IAA9B,IAAsC,KAAtC;AACA,iBAAKtF,IAAL,CAAUpL,QAAV,EAAoB0Q,IAApB,IAA4BhO,KAAK,CAACK,MAAN,CAAanD,KAAzC;AACA,iBAAKwL,IAAL,sBAAgB,KAAKA,IAArB;AACD;;;iBAED,2BAAkBzL,KAAlB,EAAyB;AACvB20B,mBAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC50B,KAArC;AACA,iBAAKk1B,KAAL,CAAW/qB,WAAX,CAAuBqtB,iBAAvB,CAAyCx3B,KAAzC;AACD;;;iBAED,wBAAe+C,KAAf,EAAsB;AACpB4xB,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B7xB,KAA9B;AACD;;;;;;;yBAvJUuwB,qB;AAAoB,O;;;cAApBA,qB;AAAoB,0C;AAAA;AAAA;;;;;;;;;;;;;;;AAjH7B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAcE;;AAA4D;AAAA,qBAAU,IAAA+C,cAAA,QAAV;AAAgC,aAAhC;;AAC1D;;AAaF;;AAGA;;AACE;;AAyCF;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACE;;AAgBF;;AACF;;AACF;;;;AA/FI;;AAAA,uFAAa,aAAb,EAAa,KAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,YAAb,EAAa,IAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,WAAb,EAAa,EAAb,EAAa,OAAb,EAAa,CAAb,EAAa,uBAAb,EAAa,IAAb;;AAW4B;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCJvBvD,gB;AAOX,oCAAc;AAAA;;AAAA;;AAJd,eAAArrB,OAAA,GAAU,CAAC;AAAE4T,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAEA,gBAAI,EAAE;AAAR,WAAnB,EAAuC;AAAEA,gBAAI,EAAE;AAAR,WAAvC,CAAV;AAEA,eAAArI,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAKvH,IAAL,GAAY,kCAAAgsB,UAAA,QAAkB,UAAAC,UAAU,EAAI;AAC1C,mBAAI,CAAC7D,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB4D,wBAAU,CAAChgB,IAAX,CAAgBoc,IAAI,CAAC7mB,MAAL,CAAY,CAAZ,EAAe,EAAf,CAAhB;AACAyqB,wBAAU,CAAChgB,IAAX,CAAgBoc,IAAI,CAAC7mB,MAAL,CAAY,EAAZ,EAAgB,EAAhB,CAAhB;AACAyqB,wBAAU,CAACC,QAAX;AACD,aAJD;AAKD,WANW,CAAZ,CADY,CASZ;AACA;AACD;;;;iBAED,eAAM5D,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBA7BUxB,gB;AAAe,O;;;cAAfA,gB;AAAe,gC;AAAA,gB;AAAA,e;AAAA,kP;AAAA;AAAA;AAtBxB;;AACE;;AACE;;AACA;;AACE;;AACE;;AACF;;AACF;;AACF;;AACA;;;;AAUF;;;;AARI;;AAAA,wJAAqB,SAArB,EAAqB,WAArB,EAAqB,YAArB,EAAqB,oBAArB,EAAqB,cAArB,EAAqB,EAArB,EAAqB,cAArB,EAAqB,EAArB,EAAqB,WAArB,EAAqB,EAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCkBK7B,kB;AAGX,sCAAc;AAAA;;AAAA;;AAFd,eAAAxlB,IAAA,GAAO,EAAP;AAGE,eAAKooB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBAlBUrD,kB;AAAiB,O;;;cAAjBA,kB;AAAiB,iD;AAAA,iB;AAAA,e;AAAA,yb;AAAA;AAAA;AA/B1B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAUE;;AACA;;AACA;;AACA;;AACA;;AACF;;AACF;;;;AAdI;;AAAA,uFAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,CAAb,EAAa,WAAb,EAAa,EAAb,EAAa,YAAb,EAAa,IAAb,EAAa,YAAb,EAAa,IAAb;;AAQkC;;AAAA;;AAGA;;AAAA;;AACC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBnC;;AACE;;AAAI;;AAAU;;AACd;;AASE;;AACA;;AACA;;AACF;;AACF;;;;;;AAXI;;AAAA,wFAAa,YAAb,EAAa,uBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,WAAb,EAAa,EAAb,EAAa,YAAb,EAAa,IAAb;;AAOkC;;AAAA;;AACE;;AAAA;;AACH;;AAAA;;;;UAOhCyB,kB;AASX,sCAAc;AAAA;;AAAA;;AARd,eAAAjnB,IAAA,GAAO,EAAP;AAEA,eAAAmsB,IAAA,GAAO,IAAP;AACA,eAAAC,IAAA,GAAO,KAAP;AACA,eAAAC,IAAA,GAAO,KAAP;AAEA,eAAA9kB,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBAxBU5B,kB;AAAiB,O;;;cAAjBA,kB;AAAiB,kC;AAAA,iB;AAAA,gB;AAAA,4a;AAAA;AAAA;AA7D1B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAsB;AAAA,yBAAgB,IAAhB;AAAsB,iBAAF,KAAE,GAAO,KAAP;AAAc,qBAAF,WAAS,KAAP;AAAY,aAAhD;;AAAkD;;AAAO;;AAC/E;;AAAsB;AAAA,yBAAgB,IAAhB;AAAsB,iBAAF,KAAE,GAAO,KAAP;AAAc,qBAAF,WAAS,KAAP;AAAY,aAAhD;;AAAkD;;AAAM;;AAC9E;;AAAsB;AAAA,yBAAgB,IAAhB;AAAsB,iBAAF,KAAE,GAAO,KAAP;AAAc,qBAAF,WAAS,KAAP;AAAY,aAAhD;;AAAkD;;AAAI;;AAC9E;;AAEA;;AACE;;AAAG;;AAA2C;;AAChD;;AAEA;;AACE;;AAAI;;AAAY;;AAChB;;AASE;;AACA;;AACA;;AACF;;AACF;;AAEA;;AAgBF;;AACF;;;;AAtCS;;AAAA;;AAIA;;AAAA;;AAID;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,WAAb,EAAa,EAAb,EAAa,YAAb,EAAa,IAAb;;AAOkC;;AAAA;;AACE;;AAAA;;AACH;;AAAA;;AAI/B;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBF;;AAAQ;;AAAW;;;;;;AAAX;;AAAA;;;;;;AAKR;;AAAkC;;AAAI;;AAAG;;AAAW;;;;;;;AAAjD;;AAAsC;;AAAA;;;;UAQxC1B,uB;AAOX,2CAAc;AAAA;;AAAA;;AALd,eAAA/vB,QAAA,GAAW,EAAX;AAGA,eAAA+R,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,gBAAO/wB,KAAP,EAAc;AACZid,wBAAY,CAAC,KAAKT,OAAN,CAAZ;AACA,iBAAKA,OAAL,GAAexT,UAAU,CAAC,YAAM;AAC9B4oB,qBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB7xB,KAAtB;AACD,aAFwB,EAEtB,GAFsB,CAAzB;AAGD;;;iBAED,eAAMgxB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjB,kBAAMzoB,IAAI,GAAG0oB,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAb;;AADiB,2DAGC5oB,IAHD;AAAA;;AAAA;AAGjB,0EAAwB;AAAA,sBAAb1L,GAAa;AACtBA,qBAAG,CAACoC,MAAJ,GAAa0I,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACmd,MAAL,KAAgB,EAA3B,IAAiC,EAA9C;AACD;AALgB;AAAA;AAAA;AAAA;AAAA;;AAOjB+L,gBAAE,CAACtoB,IAAD,CAAF;AACD,aARD;;AAUAlN,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,sBAAav0B,GAAb,EAAkB;AAChB,mBAAOA,GAAG,CAACoC,MAAX;AACD;;;;;;;yBAvCU6uB,uB;AAAsB,O;;;cAAtBA,uB;AAAsB,4C;AAAA,iB;AAAA,e;AAAA,ka;AAAA;AAAA;AArC/B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAQE;AAAA,qBAAQ,IAAAoF,MAAA,QAAR;AAAsB,aAAtB;;AAEA;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACA;;AACF;;AACF;;;;AApBI;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,WAAb,EAAa,gBAAb,EAAa,YAAb,EAAa,IAAb;;AAQkC;;AAAA;;AAKE;;AAAA;;AAKkB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVlD;;;;;;AAAA;;;;;;AAKA;;;;;;AAAA;;;;;;AAKA;;;;;;AAAA;;;;UAOCnE,oB;AAKX,wCAAc;AAAA;;AAAA;;AAJd,eAAAxmB,IAAA,GAAO,EAAP;AAEA,eAAAuH,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAI,CAAC7mB,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAM8mB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBApBUrC,oB;AAAmB,O;;;cAAnBA,oB;AAAmB,yC;AAAA,iB;AAAA,e;AAAA,wX;AAAA;AAAA;AAvC5B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAQE;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACF;;AACF;;;;AAtBI;;AAAA,wGAA8B,cAA9B,EAA8B,EAA9B,EAA8B,cAA9B,EAA8B,EAA9B,EAA8B,MAA9B,EAA8B,QAA9B;;AAMkC;;AAAA;;AAKE;;AAAA;;AAKH;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR7B;;;;;;AAAA;;;;;;AAKA;;;;;;AAAA;;;;;;AAKA;;;;;;AAAA;;;;UAOCG,qB;AAKX,yCAAc;AAAA;;AAAA;;AAJd,eAAA3mB,IAAA,GAAO,EAAP;AAEA,eAAAuH,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAI,CAAC7mB,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAM8mB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBApBUlC,qB;AAAoB,O;;;cAApBA,qB;AAAoB,0C;AAAA,iB;AAAA,e;AAAA,gX;AAAA;AAAA;AAvC7B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAQE;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACF;;AACF;;;;AAtBI;;AAAA,yGAA+B,cAA/B,EAA+B,EAA/B,EAA+B,cAA/B,EAA+B,EAA/B,EAA+B,MAA/B,EAA+B,QAA/B;;AAMkC;;AAAA;;AAKE;;AAAA;;AAKH;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACajC;;AACE;;AACA;;AACF;;;;;;AAHK;;;;UAQAE,uB;AAUX,2CAAc;AAAA;;AAAA;;AATd,eAAA7mB,IAAA,GAAO,EAAP;AACA,eAAAO,gBAAA,GAAmB,IAAnB;AACA,eAAAoH,WAAA,GAAc,IAAd;AACA,eAAAC,WAAA,GAAc,KAAd;AAEA,eAAA5L,OAAA,GAAU,CAAC;AAAEjF,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAE6Y,gBAAI,EAAE;AAAR,WAAnB,EAAuC;AAAEA,gBAAI,EAAE,SAAR;AAAmBJ,oBAAQ,EAAE;AAA7B,WAAvC,CAAV;AAEA,eAAAjI,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACA/nB,sBAAU,CAAC,YAAM;AACf,qBAAI,CAACC,gBAAL,GAAwB,KAAxB;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WALD;AAMD;;;;iBAED,eAAM+nB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBA5BUhC,uB;AAAsB,O;;;cAAtBA,uB;AAAsB,4C;AAAA,gB;AAAA,e;AAAA,2b;AAAA;AAAA;AAnC/B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAcA;;AAMF;;;;;;AAlBI;;AAAA,uFAAa,kBAAb,EAAa,oBAAb,EAAa,SAAb,EAAa,WAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,aAAb,EAAa,eAAb,EAAa,aAAb,EAAa,eAAb,EAAa,sBAAb,EAAa,GAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRI;;;;;;AAAA;;;;;;AAKA;;;;;;AAAA;;;;;;AAKA;;;;;;AAAA;;;;UAOCH,wB;AAKX,4CAAc;AAAA;;AAAA;;AAJd,eAAA1mB,IAAA,GAAO,EAAP;AAEA,eAAAuH,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAI,CAAC7mB,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAM8mB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBApBUnC,wB;AAAuB,O;;;cAAvBA,wB;AAAuB,6C;AAAA,iB;AAAA,e;AAAA,mX;AAAA;AAAA;AAvChC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAQE;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACF;;AACF;;;;AAtBI;;AAAA,uFAAa,YAAb,EAAa,uBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb;;AAMkC;;AAAA;;AAKE;;AAAA;;AAKH;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACT/B;;;;;;AAAkD;;;;;;;;AAMlD;;AACE;;AAAuC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAvC;;AACA;;AAA6B;;AAAc;;AAC7C;;;;;;;;AAFyB;;AAAA,sFAAe,SAAf,EAAe,wBAAf;;AAChB;;AAAA;;AAAsB;;AAAA;;;;UAO5BD,sB;AAvCb;AAAA;;AAwCE,eAAAzmB,IAAA,GAAO,CACL;AACE4P,gBAAI,EAAE,eADR;AAEE2a,kBAAM,EAAE,QAFV;AAGEC,mBAAO,EAAE;AAHX,WADK,EAML;AACE5a,gBAAI,EAAE,YADR;AAEE2a,kBAAM,EAAE,QAFV;AAGEC,mBAAO,EAAE;AAHX,WANK,CAAP;AAaA,eAAAxuB,OAAA,GAAU,CAAC;AAAE4T,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAEA,gBAAI,EAAE;AAAR,WAAnB,EAAuC;AAAEA,gBAAI,EAAE;AAAR,WAAvC,CAAV;AAEA,eAAAgN,UAAA,GAAa,CAAC;AAAEhN,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAEA,gBAAI,EAAE;AAAR,WAAnB,EAAuC;AAAEA,gBAAI,EAAE;AAAR,WAAvC,CAAb;AAEA,eAAArI,UAAA,GAAa,4EAAAA,UAAb;AAqBD;;;;iBAnBC,gBAAOvB,GAAP,EAAY;AACV,gBAAMsmB,SAAS,GAAG,KAAKA,SAAL,CAAetmB,GAAf,CAAlB;;AAEA,gBAAIsmB,SAAJ,EAAe;AACb,mBAAKtwB,OAAL,GAAe,KAAKA,OAAL,CAAakI,MAAb,CAAoB,UAAAuI,CAAC,EAAI;AACtC,uBAAOA,CAAC,CAACmD,IAAF,KAAW5J,GAAG,CAAC4J,IAAtB;AACD,eAFc,CAAf;AAGD,aAJD,MAIO;AACL,mBAAK5T,OAAL,gCAAmB,KAAKA,OAAxB,IAAiCgK,GAAjC;AACD;AACF;;;iBAED,mBAAUA,GAAV,EAAe;AACb,mBACE,KAAKhK,OAAL,CAAa9D,IAAb,CAAkB,UAAAuU,CAAC,EAAI;AACrB,qBAAOA,CAAC,CAACmD,IAAF,KAAW5J,GAAG,CAAC4J,IAAtB;AACD,aAFD,MAEOzY,SAHT;AAKD;;;;;;;yBAtCUsvB,sB;AAAqB,O;;;cAArBA,sB;AAAqB,2C;AAAA,iB;AAAA,e;AAAA,4a;AAAA;AAAA;AApC9B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AACE;;AAQE;;AACF;;AACF;;AACA;;AACE;;AAAI;;AAAiB;;AACrB;;AACE;;AAIF;;AACF;;AACF;;;;AAlBM;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb;;AAMsC;;AAAA;;AAMlB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKjBG,uB;AAKX,2CAAc;AAAA;;AAAA;;AAJd,eAAA5mB,IAAA,GAAO,EAAP;AAEA,eAAAuH,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBApBUjC,uB;AAAsB,O;;;cAAtBA,uB;AAAsB,4C;AAAA,iB;AAAA,gB;AAAA,6c;AAAA;AAAA;AAhC/B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAUE;;AACA;;AACA;;AACA;;AACA;;AAEF;;AACF;;;;AAfI;;AAAA,yGAA+B,cAA/B,EAA+B,EAA/B,EAA+B,cAA/B,EAA+B,EAA/B,EAA+B,WAA/B,EAA+B,EAA/B,EAA+B,YAA/B,EAA+B,IAA/B,EAA+B,YAA/B,EAA+B,IAA/B,EAA+B,MAA/B,EAA+B,QAA/B;;AAQkC;;AAAA,mFAAa,YAAb,EAAa,IAAb;;AAGA;;AAAA;;AACC;;AAAA,mFAAa,aAAb,EAAa,IAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvB3C;;;;;UAIa2F,yB;;;;;;;;AACX;;;;;AAKO,8BAAWhwB,IAAX,EAAqB;AAAA;;AAC1B,mBAAO,sCAAAiwB,EAAA,EAAG,yDAAH,EACJv1B,IADI,CACC,gDAAA8O,GAAA,EAAI,UAAA8O,CAAC;AAAA,qBAAI,OAAI,CAAC4X,YAAL,CAAkBlwB,IAAlB,CAAJ;AAAA,aAAL,CADD,EAEJtF,IAFI,CAEC,gDAAAy1B,KAAA,EAAM,OAAOttB,IAAI,CAACmd,MAAL,EAAb,CAFD,CAAP;AAGD;AAED;;;;;;;;iBAKQ,sBAAahgB,IAAb,EAAuB;AAC7B,gBAAMowB,SAAS,GAAG,IAAI,+CAAAC,SAAJ,EAAlB;AACArwB,gBAAI,CAACswB,aAAL,GAAqB,gEAArB;AACAtwB,gBAAI,CAAC8R,UAAL,GAAkB9R,IAAI,CAACswB,aAAL,GAAqBtwB,IAAI,CAAC6P,IAA5C;AACA,gBAAMqU,KAAK,GAAGlkB,IAAI,CAACuwB,UAAL,GAAkBvwB,IAAI,CAAC6P,IAArC;AACA,gBAAMsU,GAAG,GAAGthB,IAAI,CAACuB,GAAL,CAAS8f,KAAK,GAAGlkB,IAAI,CAAC6P,IAAtB,EAA4B7P,IAAI,CAACswB,aAAjC,CAAZ;;AACA,iBAAK,IAAI/sB,CAAC,GAAG2gB,KAAb,EAAoB3gB,CAAC,GAAG4gB,GAAxB,EAA6B5gB,CAAC,EAA9B,EAAkC;AAChC,kBAAMitB,OAAO,GAAG,yDAAW,CAACjtB,CAAD,CAA3B;AACA,kBAAMktB,QAAQ,GAAG,IAAI,uDAAAC,iBAAJ,CAAsBF,OAAO,CAACnd,IAA9B,EAAoCmd,OAAO,CAACxC,MAA5C,EAAoDwC,OAAO,CAACvC,OAA5D,EAAqEuC,OAAO,CAACvD,GAA7E,CAAjB;AACAmD,uBAAS,CAACtE,IAAV,CAAe5mB,IAAf,CAAoBurB,QAApB;AACD;;AACDL,qBAAS,CAACpwB,IAAV,GAAiBA,IAAjB;AACA,mBAAOowB,SAAP;AACD;;;;;;;yBA9BUJ,yB;AAAwB,O;;;eAAxBA,yB;AAAwB,iBAAxBA,yBAAwB;;;;;;;;;;;;;;;;;;;;;;;;ACbrC;;;;;UAGaU,kB,GAMX,4BAAYrd,IAAZ,EAA0B2a,MAA1B,EAA0CC,OAA1C,EAA2DhB,GAA3D,EAAwE;AAAA;;AACtE,aAAK5Z,IAAL,GAAYA,IAAZ;AACA,aAAK2a,MAAL,GAAcA,MAAd;AACA,aAAKC,OAAL,GAAeA,OAAf;AACA,aAAKhB,GAAL,GAAWA,GAAX;AACD,O;;;;;;;;;;;;;;;;;;;;;;;;ACdH;;;;;UAGa0D,K,GAAb;AAAA;;AACE;AACA,aAAA9gB,IAAA,GAAe,CAAf,CAFF,CAGE;;AACA,aAAAygB,aAAA,GAAwB,CAAxB,CAJF,CAKE;;AACA,aAAAxe,UAAA,GAAqB,CAArB,CANF,CAOE;;AACA,aAAAye,UAAA,GAAqB,CAArB;AACD,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVD;;;;;UAGaF,U,GAAb;AAAA;;AACE,aAAAvE,IAAA,GAAO,IAAIhd,KAAJ,EAAP;AACA,aAAA9O,IAAA,GAAO,IAAI,mCAAA2wB,IAAJ,EAAP;AACD,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCwBYtH,sB;AAKX,0CAAc;AAAA;;AAAA;;AAJd,eAAA5lB,IAAA,GAAO,EAAP;AAEA,eAAAuH,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBApBUjD,sB;AAAqB,O;;;cAArBA,sB;AAAqB,2C;AAAA,gB;AAAA,gB;AAAA,oQ;AAAA;AAAA;AA1B9B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAWF;;;;AATI;;AAAA,uFAAa,SAAb,EAAa,0RAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,OAAb,EAAa,EAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCsBKE,yC;AAMX,2DAAoBqH,oBAApB,EAAoE;AAAA;;AAAhD,eAAAA,oBAAA,GAAAA,oBAAA;AALpB,eAAA5wB,IAAA,GAAO,IAAI,yCAAA2wB,IAAJ,EAAP;AACA,eAAAltB,IAAA,GAAO,IAAIqL,KAAJ,EAAP;AAEA,eAAA9D,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAKhL,IAAL,CAAUuwB,UAAV,GAAuB,CAAvB;AACA,eAAKvwB,IAAL,CAAU6P,IAAV,GAAiB,EAAjB;AACD;;;;iBAED,oBAAW;AACT,iBAAKghB,OAAL,CAAa;AAAExxB,oBAAM,EAAE;AAAV,aAAb;AACD;AAED;;;;;;;iBAIA,iBAAQyxB,QAAR,EAAkB;AAAA;;AAChB,iBAAK9wB,IAAL,CAAUuwB,UAAV,GAAuBO,QAAQ,CAACzxB,MAAhC;AACA,iBAAKuxB,oBAAL,CAA0BG,UAA1B,CAAqC,KAAK/wB,IAA1C,EAAgD8B,SAAhD,CAA0D,UAAAsuB,SAAS,EAAI;AACrE,qBAAI,CAACpwB,IAAL,GAAYowB,SAAS,CAACpwB,IAAtB;AACA,qBAAI,CAACyD,IAAL,GAAY2sB,SAAS,CAACtE,IAAtB;AACD,aAHD;AAID;;;;;;;yBAzBUvC,yC,EAAwC,mJ;AAAA,O;;;cAAxCA,yC;AAAwC,+D;AAAA,oFAlCxC,CAAC,0DAAAyG,wBAAD,CAkCwC,E;AAlCd,gB;AAAA,gB;AAAA,qW;AAAA;AAAA;AAEnC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAcE;AAAA,qBAAQ,IAAAa,OAAA,QAAR;AAAuB,aAAvB;;AAEF;;AACF;;;;AAfI;;AAAA,uFAAa,SAAb,EAAa,8RAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,YAAb,EAAa,IAAb,EAAa,gBAAb,EAAa,KAAb,EAAa,gBAAb,EAAa,IAAb,EAAa,OAAb,EAAa,sBAAb,EAAa,QAAb,EAAa,mBAAb,EAAa,OAAb,EAAa,aAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBKvH,sB;AAMX,wCAAoBsH,oBAApB,EAAoE;AAAA;;AAAhD,eAAAA,oBAAA,GAAAA,oBAAA;AALpB,eAAA5wB,IAAA,GAAO,IAAI,yCAAA2wB,IAAJ,EAAP;AACA,eAAAltB,IAAA,GAAO,IAAIqL,KAAJ,EAAP;AAEA,eAAA9D,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAKhL,IAAL,CAAUuwB,UAAV,GAAuB,CAAvB;AACA,eAAKvwB,IAAL,CAAU6P,IAAV,GAAiB,EAAjB;AACD;;;;iBAED,oBAAW;AACT,iBAAKghB,OAAL,CAAa;AAAExxB,oBAAM,EAAE;AAAV,aAAb;AACD;AAED;;;;;;;iBAIA,iBAAQyxB,QAAR,EAAkB;AAAA;;AAChB,iBAAK9wB,IAAL,CAAUuwB,UAAV,GAAuBO,QAAQ,CAACzxB,MAAhC;AACA,iBAAKuxB,oBAAL,CAA0BG,UAA1B,CAAqC,KAAK/wB,IAA1C,EAAgD8B,SAAhD,CAA0D,UAAAsuB,SAAS,EAAI;AACrE,qBAAI,CAACpwB,IAAL,GAAYowB,SAAS,CAACpwB,IAAtB;AACA,qBAAI,CAACyD,IAAL,GAAY2sB,SAAS,CAACtE,IAAtB;AACD,aAHD;AAID;;;;;;;yBAzBUxC,sB,EAAqB,mJ;AAAA,O;;;cAArBA,sB;AAAqB,2C;AAAA,oFAhCrB,CAAC,0DAAA0G,wBAAD,CAgCqB,E;AAhCK,gB;AAAA,gB;AAAA,iT;AAAA;AAAA;AAEnC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAYE;AAAA,qBAAQ,IAAAa,OAAA,QAAR;AAAuB,aAAvB;;AAEF;;AACF;;;;AAbI;;AAAA,uFAAa,SAAb,EAAa,6RAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,gBAAb,EAAa,IAAb,EAAa,OAAb,EAAa,sBAAb,EAAa,QAAb,EAAa,mBAAb,EAAa,OAAb,EAAa,aAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC8BKrG,uB;AAUX,yCAAoBoG,oBAApB,EAAoE;AAAA;;AAAhD,eAAAA,oBAAA,GAAAA,oBAAA;AANpB,eAAAnP,KAAA,GAAa,EAAb;AAEA,eAAAzW,UAAA,GAAa,4EAAAA,UAAb;AAEA,eAAAgmB,SAAA,GAAY,CAAZ;AAGE,eAAKT,UAAL,GAAkB,CAAlB;AACD;;;;iBAED,iBAAQO,QAAR,EAA4B;AAAA;;AAC1B;AACA;AACA;AACA;AACA,iBAAKP,UAAL,GAAkBO,QAAQ,CAACzxB,MAA3B,CAL0B,CAO1B;AACA;;AACA,gBAAM4xB,SAAS,GAAGH,QAAQ,CAACzxB,MAAT,GAAkByxB,QAAQ,CAACxuB,QAA7C,CAT0B,CAW1B;AACA;AACA;;AACA,gBAAMtC,IAAI,GAAG,IAAI,yCAAA2wB,IAAJ,EAAb;AACA3wB,gBAAI,CAAC6P,IAAL,GAAY,EAAZ;AACA7P,gBAAI,CAACuwB,UAAL,GAAkB1tB,IAAI,CAACE,KAAL,CAAWkuB,SAAS,GAAGjxB,IAAI,CAAC6P,IAA5B,CAAlB,CAhB0B,CAkB1B;AACA;;AACA,gBAAI,KAAK4R,KAAL,CAAWzhB,IAAI,CAACuwB,UAAhB,CAAJ,EAAiC;AACjC,iBAAK9O,KAAL,CAAWzhB,IAAI,CAACuwB,UAAhB,IAA8B,IAA9B,CArB0B,CAuB1B;;AACA,iBAAKS,SAAL;AAEA,iBAAKJ,oBAAL,CAA0BG,UAA1B,CAAqC/wB,IAArC,EAA2C8B,SAA3C,CAAqD,UAAAsuB,SAAS,EAAI;AAChE;AACA,qBAAI,CAACE,aAAL,GAAqBF,SAAS,CAACpwB,IAAV,CAAeswB,aAApC,CAFgE,CAIhE;AACA;;AACA,kBAAI,CAAC,OAAI,CAAC7sB,IAAV,EAAgB;AACd,uBAAI,CAACA,IAAL,GAAY,IAAIqL,KAAJ,CAA6B,OAAI,CAACwhB,aAAL,IAAsB,CAAnD,CAAZ;AACD,eAR+D,CAUhE;AACA;;;AACA,kBAAMpM,KAAK,GAAGkM,SAAS,CAACpwB,IAAV,CAAeuwB,UAAf,GAA4BH,SAAS,CAACpwB,IAAV,CAAe6P,IAAzD,CAZgE,CAchE;;AACA,kBAAMpM,IAAI,sBAAO,OAAI,CAACA,IAAZ,CAAV,CAfgE,CAiBhE;;;AACAA,kBAAI,CAACwB,MAAL,OAAAxB,IAAI,GAAQygB,KAAR,EAAekM,SAAS,CAACpwB,IAAV,CAAe6P,IAA9B,4BAAuCugB,SAAS,CAACtE,IAAjD,GAAJ,CAlBgE,CAoBhE;;AACA,qBAAI,CAACroB,IAAL,GAAYA,IAAZ,CArBgE,CAuBhE;;AACA,qBAAI,CAACutB,SAAL;AACD,aAzBD;AA0BD;;;;;;;yBAlEUxG,uB,EAAsB,mJ;AAAA,O;;;cAAtBA,uB;AAAsB,4C;AAAA,oFAtCtB,CAAC,0DAAAwF,wBAAD,CAsCsB,E;AAtCI,gB;AAAA,gB;AAAA,sV;AAAA;AAAA;AAEnC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAkBE;AAAA,qBAAQ,IAAAa,OAAA,QAAR;AAAuB,aAAvB;;AAEF;;AACF;;;;AAnBI;;AAAA,uFAAa,SAAb,EAAa,8RAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,kBAAb,EAAa,iBAAb,EAAa,YAAb,EAAa,IAAb,EAAa,cAAb,EAAa,EAAb,EAAa,WAAb,EAAa,EAAb,EAAa,gBAAb,EAAa,IAAb,EAAa,iBAAb,EAAa,IAAb,EAAa,OAAb,EAAa,iBAAb,EAAa,QAAb,EAAa,cAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBR,UAAMK,WAAW,GAAG,yDAApB;;UAEMb,S;;;AAIN;;;;;UAIaL,0B;;;;;;;iBACJ,oBAAW3wB,MAAX,EAA2B2O,KAA3B,EAAwC;AAC7C,mBAAO,sCAAAiiB,EAAA,EAAGiB,WAAW,CAAC1gB,KAAZ,CAAkBnR,MAAlB,EAA0BA,MAAM,GAAG2O,KAAnC,CAAH,EAA8CtT,IAA9C,CACL,gDAAAy1B,KAAA,EAAM,IAAI9L,IAAJ,CAASA,IAAI,CAACwB,GAAL,KAAa,GAAtB,CAAN,CADK,EAEL,gDAAArc,GAAA,EAAI,UAAA8O,CAAC;AAAA,qBAAK;AAAEwT,oBAAI,EAAExT;AAAR,eAAL;AAAA,aAAL,CAFK,CAAP;AAID;;;;;;;yBANU0X,0B;AAAwB,O;;;eAAxBA,0B;AAAwB,iBAAxBA,0BAAwB;;;UAwCxBxG,yB;AAUX,2CAAoBoH,oBAApB,EAA4EpX,EAA5E,EAA4F;AAAA;;AAAxE,eAAAoX,oBAAA,GAAAA,oBAAA;AAAwD,eAAApX,EAAA,GAAAA,EAAA;AATnE,eAAAvO,YAAA,GAAe,EAAf;AACA,eAAA9S,SAAA,GAAY,EAAZ;AACA,eAAAg5B,SAAA,GAAY,EAAZ;AAET,eAAA1tB,IAAA,GAA4B,EAA5B;AAGA,eAAAuH,UAAA,GAAa,4EAAAA,UAAb;AAE8F;;;;iBAE9F,oBAAW;AACT,iBAAKomB,QAAL,CAAc,CAAd;AACD;;;iBAED,kBAAS9wB,OAAT,EAA0B;AACxB;AACA,gBAAM+wB,UAAU,GAAG,KAAK7X,EAAL,CAAQ/gB,aAAR,CAAsB6jB,qBAAtB,GAA8CniB,MAA9C,GAAuD,KAAK8Q,YAA/E,CAFwB,CAIxB;;AACA,gBAAI,CAAC,KAAK+lB,SAAN,IAAmB1wB,OAAO,GAAG+wB,UAAV,IAAwB,KAAK5tB,IAAL,CAAUN,MAAV,GAAmB,KAAKhL,SAAvE,EAAkF;AAChF;AACA,kBAAI6V,KAAK,GAAG,KAAKmjB,SAAjB,CAFgF,CAIhF;;AACA,kBAAI,KAAK1tB,IAAL,CAAUN,MAAV,KAAqB,CAAzB,EAA4B;AAC1B;AACA,oBAAMb,QAAQ,GAAGO,IAAI,CAACC,IAAL,CAAUuuB,UAAU,GAAG,KAAKl5B,SAA5B,CAAjB,CAF0B,CAI1B;AACA;;AACA6V,qBAAK,GAAGnL,IAAI,CAACsB,GAAL,CAAS7B,QAAT,EAAmB,KAAK6uB,SAAxB,CAAR;AACD;;AACD,mBAAKG,QAAL,CAActjB,KAAd;AACD;AACF;;;iBAEO,kBAASA,KAAT,EAAwB;AAAA;;AAC9B;AACA;AACA;AACA,iBAAKgjB,SAAL,GAAiB,IAAjB;AAEA,iBAAKJ,oBAAL,CAA0BG,UAA1B,CAAqC,KAAKttB,IAAL,CAAUN,MAA/C,EAAuD6K,KAAvD,EAA8DlM,SAA9D,CAAwE,UAAAyvB,OAAO,EAAI;AACjF,kBAAM9tB,IAAI,gCAAO,OAAI,CAACA,IAAZ,sBAAqB8tB,OAAO,CAACzF,IAA7B,EAAV;AACA,qBAAI,CAACroB,IAAL,GAAYA,IAAZ;AACA,qBAAI,CAACutB,SAAL,GAAiB,KAAjB;AACD,aAJD;AAKD;;;;;;;yBAjDUxH,yB,EAAwB,gEAUOwG,0BAVP,C,EAU+B,sH;AAAA,O;;;cAVvDxG,yB;AAAwB,8C;AAAA,oFA7BxB,CAACwG,0BAAD,CA6BwB,E;AA7BE,gB;AAAA,gB;AAAA,2S;AAAA;AAAA;AAEnC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AASE;AAAA,qBAAU,IAAAoB,QAAA,gBAAV;AAAkC,aAAlC;;AACD;;AACH;;;;AATI;;AAAA,uFAAa,SAAb,EAAa,2RAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,gBAAb,EAAa,WAAb,EAAa,aAAb,EAAa,kBAAb,EAAa,aAAb,EAAa,YAAb,EAAa,IAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCTKvH,uB;AAQX,2CAAc;AAAA;;AAAA;;AAPd,eAAApmB,IAAA,GAAc,EAAd;AACA,eAAA3D,QAAA,GAAkB,EAAlB;AACA,eAAAL,OAAA,GAAiB,CAAC;AAAEjF,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAE6Y,gBAAI,EAAE;AAAR,WAAnB,EAAwC;AAAEA,gBAAI,EAAE;AAAR,WAAxC,CAAjB;AAEA,eAAArI,UAAA,GAAa,4EAAAA,UAAb;AACA,eAAAhE,aAAA,GAAgB,4EAAAA,aAAhB;AAGE,eAAK6kB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,kBAASvxB,KAAT,EAAgB;AACd4xB,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B7xB,KAA7B,EAAoC,KAAK+E,QAAzC;AACD;;;iBAED,oBAAW/E,KAAX,EAAkB;AAChB4xB,mBAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B7xB,KAA/B;AACD;;;;;;;yBA/BU8uB,uB;AAAsB,O;;;cAAtBA,uB;AAAsB,4C;AAAA,gB;AAAA,e;AAAA,4T;AAAA;AAAA;AA7B/B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAUE;AAAA,qBAAU,IAAA2H,QAAA,QAAV;AAA0B,aAA1B,EAA2B,UAA3B,EAA2B;AAAA,qBACf,IAAAC,UAAA,QADe;AACG,aAD9B;;AAGF;;AACF;;;;AAZI;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,SAAb,EAAa,WAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,WAAb,EAAa,EAAb,EAAa,UAAb,EAAa,YAAb,EAAa,eAAb,EAAa,sBAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC+BM;;AAAmD;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAnD;;;;;;AAAuB;;;;;;;;AAQvB;;AAA8C;AAAA;;AAAA;AAAA;AAAA;;AAA9C;;;;;;AAAuB;;;;;;AAc3B;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AAA8B;;AAAa;;;;UAMxCxG,iC;AAOX,qDAAc;AAAA;;AAAA;;AANd,eAAAxnB,IAAA,GAAO,EAAP;AACA,eAAA3D,QAAA,GAAW,EAAX;AAEA,eAAAkL,UAAA,GAAa,4EAAAA,UAAb;AACA,eAAAhE,aAAA,GAAgB,4EAAAA,aAAhB;AAGE,eAAK6kB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,0BAAuB;AAAA;;AAAA,gBAAZxsB,QAAY,UAAZA,QAAY;AACrB6sB,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B9sB,QAA5B,EAAsC,KAAKA,QAA3C;AAEA,iBAAKA,QAAL,CAAcmF,MAAd,CAAqB,CAArB,EAAwB,KAAKnF,QAAL,CAAcqD,MAAtC;;AACA,oCAAKrD,QAAL,EAAcoF,IAAd,2CAAsBpF,QAAtB;AACD;;;iBAED,oBAAW/E,KAAX,EAAkB;AAChB4xB,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B7xB,KAA9B;AACD;;;iBAED,eAAM;AACJ,iBAAK+E,QAAL,CAAcoF,IAAd,CAAmB,KAAKzB,IAAL,CAAU,CAAV,CAAnB,EAAiC,KAAKA,IAAL,CAAU,CAAV,CAAjC;AACD;;;iBAED,kBAAS;AACP,iBAAK3D,QAAL,GAAgB,CAAC,KAAK2D,IAAL,CAAU,CAAV,CAAD,EAAe,KAAKA,IAAL,CAAU,CAAV,CAAf,CAAhB;AACD;;;iBAED,kBAAS;AACP,iBAAK3D,QAAL,GAAgB,EAAhB;AACD;;;;;;;yBA7CUmrB,iC;AAAgC,O;;;cAAhCA,iC;AAAgC,uD;AAAA,iB;AAAA,gB;AAAA,ytB;AAAA;AAAA;AA5EzC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACA;;AACE;;AAA6B;AAAA,qBAAS,IAAA1mB,GAAA,EAAT;AAAc,aAAd;;AAAgB;;AAAG;;AAAK;;AACrD;;AAA6B;AAAA,qBAAS,IAAAS,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAAK;;AAC3D;;AAA6B;AAAA,qBAAS,IAAA2Q,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AACxD;;AACF;;AACA;;AACE;;AAWE;AAAA,qBAAY,IAAA8b,UAAA,QAAZ;AAA8B,aAA9B,EAA+B,QAA/B,EAA+B;AAAA,qBACrB,IAAAD,QAAA,QADqB;AACL,aAD1B;;AAGA;;AAOE;;AAQA;;AAQF;;AACA;;AACA;;AACA;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAO;;AAAwB;;AAC5C;;AACA;;AACE;;AAGA;;AACF;;AACF;;AACF;;;;AApDM;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,OAAb,EAAa,CAAb,EAAa,UAAb,EAAa,YAAb,EAAa,eAAb,EAAa,0BAAb;;AAYE;;AAAA,kFAAY,UAAZ,EAAY,KAAZ,EAAY,eAAZ,EAAY,KAAZ,EAAY,WAAZ,EAAY,KAAZ,EAAY,YAAZ,EAAY,KAAZ;;AA+BgB;;AAAA;;AAGE;;AAAA;;AAGf;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfL;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AAA8B;;AAAa;;;;UAMxCxG,2B;AAOX,+CAAc;AAAA;;AAAA;;AANd,eAAAvnB,IAAA,GAAO,EAAP;AACA,eAAA3D,QAAA,GAAW,EAAX;AAEA,eAAAkL,UAAA,GAAa,4EAAAA,UAAb;AACA,eAAAhE,aAAA,GAAgB,4EAAAA,aAAhB;AAGE,eAAK6kB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,0BAAuB;AAAA;;AAAA,gBAAZxsB,QAAY,UAAZA,QAAY;AACrB6sB,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B9sB,QAA5B,EAAsC,KAAKA,QAA3C;AAEA,iBAAKA,QAAL,CAAcmF,MAAd,CAAqB,CAArB,EAAwB,KAAKnF,QAAL,CAAcqD,MAAtC;;AACA,oCAAKrD,QAAL,EAAcoF,IAAd,2CAAsBpF,QAAtB;AACD;;;iBAED,oBAAW/E,KAAX,EAAkB;AAChB4xB,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B7xB,KAA9B;AACD;;;iBAED,eAAM;AACJ,iBAAK+E,QAAL,CAAcoF,IAAd,CAAmB,KAAKzB,IAAL,CAAU,CAAV,CAAnB,EAAiC,KAAKA,IAAL,CAAU,CAAV,CAAjC;AACD;;;iBAED,kBAAS;AACP,iBAAK3D,QAAL,GAAgB,CAAC,KAAK2D,IAAL,CAAU,CAAV,CAAD,EAAe,KAAKA,IAAL,CAAU,CAAV,CAAf,CAAhB;AACD;;;iBAED,kBAAS;AACP,iBAAK3D,QAAL,GAAgB,EAAhB;AACD;;;iBAED,sBAAa/H,GAAb,EAAkB;AAChB,mBAAOA,GAAG,CAACsb,IAAJ,KAAa,aAApB;AACD;;;;;;;yBAjDU2X,2B;AAA0B,O;;;cAA1BA,2B;AAA0B,8C;AAAA,iB;AAAA,gB;AAAA,mqB;AAAA;AAAA;AAhEnC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACA;;AACE;;AAA6B;AAAA,qBAAS,IAAAzmB,GAAA,EAAT;AAAc,aAAd;;AAAgB;;AAAG;;AAAK;;AACrD;;AAA6B;AAAA,qBAAS,IAAAS,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAAK;;AAC3D;;AAA6B;AAAA,qBAAS,IAAA2Q,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AACxD;;AACF;;AACA;;AACE;;AAaE;AAAA,qBAAY,IAAA8b,UAAA,QAAZ;AAA8B,aAA9B,EAA+B,QAA/B,EAA+B;AAAA,qBACrB,IAAAD,QAAA,QADqB;AACL,aAD1B;;AAGA;;AAUA;;AACA;;AACA;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAAW;;AAAO;;AAAwB;;AAC5C;;AACA;;AACE;;AAGA;;AACF;;AACF;;AACF;;;;AAxCM;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,OAAb,EAAa,CAAb,EAAa,UAAb,EAAa,YAAb,EAAa,eAAb,EAAa,0BAAb,EAAa,qBAAb,EAAa,KAAb,EAAa,cAAb,EAAa,gBAAb;;AAcE;;AAAA,kFAAY,UAAZ,EAAY,KAAZ,EAAY,eAAZ,EAAY,KAAZ,EAAY,WAAZ,EAAY,KAAZ,EAAY,YAAZ,EAAY,KAAZ,EAAY,oBAAZ,EAAY,IAAZ,EAAY,cAAZ,EAAY,IAAZ;;AAiBgB;;AAAA;;AAGE;;AAAA;;AAGf;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBL;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AAA6B;;AAAa;;;;UAMvC3G,+B;AAUX,mDAAc;AAAA;;AAAA;;AATd,eAAApnB,IAAA,GAAO,EAAP;AAEA,eAAA3D,QAAA,GAAW,EAAX;AAEA,eAAAL,OAAA,GAAiB,CAAC;AAAEjF,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAE6Y,gBAAI,EAAE;AAAR,WAAnB,EAAwC;AAAEA,gBAAI,EAAE;AAAR,WAAxC,CAAjB;AAEA,eAAArI,UAAA,GAAa,4EAAAA,UAAb;AACA,eAAAhE,aAAA,GAAgB,4EAAAA,aAAhB;AAGE,eAAK6kB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,0BAAuB;AAAA;;AAAA,gBAAZxsB,QAAY,UAAZA,QAAY;AACrB6sB,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B9sB,QAA5B,EAAsC,KAAKA,QAA3C;AAEA,iBAAKA,QAAL,CAAcmF,MAAd,CAAqB,CAArB,EAAwB,KAAKnF,QAAL,CAAcqD,MAAtC;;AACA,oCAAKrD,QAAL,EAAcoF,IAAd,2CAAsBpF,QAAtB;AACD;;;iBAED,oBAAW/E,KAAX,EAAkB;AAChB4xB,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B7xB,KAA9B;AACD;;;iBAED,yBAAgBA,KAAhB,EAAuB;AACrB4xB,mBAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsC7xB,KAAtC;AACA,mBAAOA,KAAK,CAACsY,IAAN,KAAe,aAAtB;AACD;;;;;;;yBAzCUwX,+B;AAA8B,O;;;cAA9BA,+B;AAA8B,oD;AAAA,iB;AAAA,gB;AAAA,kb;AAAA;AAAA;AA3CvC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AACE;;AAYE;AAAA,qBAAY,IAAA4G,UAAA,QAAZ;AAA8B,aAA9B,EAA+B,QAA/B,EAA+B;AAAA,qBACrB,IAAAD,QAAA,QADqB;AACL,aAD1B;;AAGF;;AACF;;AAEA;;AACE;;AAAI;;AAAU;;AACd;;AACE;;AAGA;;AACF;;AACF;;AACF;;;;AAzBM;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,SAAb,EAAa,WAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,OAAb,EAAa,CAAb,EAAa,aAAb,EAAa,mBAAb,EAAa,UAAb,EAAa,YAAb,EAAa,eAAb,EAAa,uBAAb;;AAmBoB;;AAAA;;AAGf;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAL;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AAA6B;;AAAa;;;;UAMvCtG,6B;AAUX,iDAAc;AAAA;;AAAA;;AATd,eAAAznB,IAAA,GAAO,EAAP;AAEA,eAAA3D,QAAA,GAAW,EAAX;AAEA,eAAAL,OAAA,GAAiB,CAAC;AAAEjF,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAE6Y,gBAAI,EAAE;AAAR,WAAnB,EAAwC;AAAEA,gBAAI,EAAE;AAAR,WAAxC,CAAjB;AAEA,eAAArI,UAAA,GAAa,4EAAAA,UAAb;AACA,eAAAhE,aAAA,GAAgB,4EAAAA,aAAhB;AAGE,eAAK6kB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,0BAAuB;AAAA;;AAAA,gBAAZxsB,QAAY,UAAZA,QAAY;AACrB6sB,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B9sB,QAA5B,EAAsC,KAAKA,QAA3C;AAEA,iBAAKA,QAAL,CAAcmF,MAAd,CAAqB,CAArB,EAAwB,KAAKnF,QAAL,CAAcqD,MAAtC;;AACA,oCAAKrD,QAAL,EAAcoF,IAAd,2CAAsBpF,QAAtB;AACD;;;iBAED,oBAAW/E,KAAX,EAAkB;AAChB4xB,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B7xB,KAA9B;AACD;;;;;;;yBApCUmwB,6B;AAA4B,O;;;cAA5BA,6B;AAA4B,mD;AAAA,iB;AAAA,gB;AAAA,mb;AAAA;AAAA;AA9CrC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAG;;AAAkF;;AACvF;;AAEA;;AAWE;AAAA,qBAAY,IAAAuG,UAAA,QAAZ;AAA8B,aAA9B,EAA+B,QAA/B,EAA+B;AAAA,qBACrB,IAAAD,QAAA,QADqB;AACL,aAD1B;;AAGF;;AACF;;AAEA;;AACE;;AAAI;;AAAU;;AACd;;AACE;;AAGA;;AACF;;AACF;;AACF;;;;AAxBM;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,SAAb,EAAa,WAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,OAAb,EAAa,CAAb,EAAa,UAAb,EAAa,YAAb,EAAa,eAAb,EAAa,4BAAb;;AAkBoB;;AAAA;;AAGf;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHL;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AAA6B;;AAAa;;;;UAMvC1H,wB;AAUX,4CAAc;AAAA;;AAAA;;AATd,eAAArmB,IAAA,GAAO,EAAP;AAEA,eAAA3D,QAAA,GAAW,EAAX;AAEA,eAAAL,OAAA,GAAiB,CAAC;AAAEjF,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAE6Y,gBAAI,EAAE;AAAR,WAAnB,EAAwC;AAAEA,gBAAI,EAAE;AAAR,WAAxC,CAAjB;AAEA,eAAArI,UAAA,GAAa,4EAAAA,UAAb;AACA,eAAAhE,aAAA,GAAgB,4EAAAA,aAAhB;AAGE,eAAK6kB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,0BAAuB;AAAA;;AAAA,gBAAZxsB,QAAY,UAAZA,QAAY;AACrB6sB,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B9sB,QAA5B,EAAsC,KAAKA,QAA3C;AAEA,iBAAKA,QAAL,CAAcmF,MAAd,CAAqB,CAArB,EAAwB,KAAKnF,QAAL,CAAcqD,MAAtC;;AACA,oCAAKrD,QAAL,EAAcoF,IAAd,2CAAsBpF,QAAtB;AACD;;;iBAED,oBAAW/E,KAAX,EAAkB;AAChB4xB,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B7xB,KAA9B;AACD;;;;;;;yBApCU+uB,wB;AAAuB,O;;;cAAvBA,wB;AAAuB,6C;AAAA,iB;AAAA,gB;AAAA,6a;AAAA;AAAA;AA9ChC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAG;;AAA0F;;AAC/F;;AAEA;;AAWE;AAAA,qBAAY,IAAA2H,UAAA,QAAZ;AAA8B,aAA9B,EAA+B,QAA/B,EAA+B;AAAA,qBACrB,IAAAD,QAAA,QADqB;AACL,aAD1B;;AAGF;;AACF;;AAEA;;AACE;;AAAI;;AAAU;;AACd;;AACE;;AAGA;;AACF;;AACF;;AACF;;;;AAxBM;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,SAAb,EAAa,WAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,OAAb,EAAa,CAAb,EAAa,UAAb,EAAa,YAAb,EAAa,eAAb,EAAa,uBAAb;;AAkBoB;;AAAA;;AAGf;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHL;;AACE;;AACF;;;;;;AADE;;AAAA;;;;;;AAEF;;AAA6B;;AAAa;;;;UAMvC7G,yB;AAUX,6CAAc;AAAA;;AAAA;;AATd,eAAAlnB,IAAA,GAAO,EAAP;AAEA,eAAA3D,QAAA,GAAW,EAAX;AAEA,eAAAL,OAAA,GAAiB,CAAC;AAAEjF,gBAAI,EAAE;AAAR,WAAD,EAAmB;AAAE6Y,gBAAI,EAAE;AAAR,WAAnB,EAAwC;AAAEA,gBAAI,EAAE;AAAR,WAAxC,CAAjB;AAEA,eAAArI,UAAA,GAAa,4EAAAA,UAAb;AACA,eAAAhE,aAAA,GAAgB,4EAAAA,aAAhB;AAGE,eAAK6kB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAAChsB,QAAL,GAAgB,CAACgsB,IAAI,CAAC,CAAD,CAAL,CAAhB;AACA,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAHD;AAID;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,0BAAuB;AAAA,gBAAZxsB,QAAY,UAAZA,QAAY;AACrB6sB,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B9sB,QAA5B,EAAsC,KAAKA,QAA3C;AACD;;;iBAED,oBAAW/E,KAAX,EAAkB;AAChB4xB,mBAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B7xB,KAA9B;AACD;;;;;;;yBAlCU4vB,yB;AAAwB,O;;;cAAxBA,yB;AAAwB,8C;AAAA,iB;AAAA,gB;AAAA,8a;AAAA;AAAA;AA9CjC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAG;;AAAuF;;AAC5F;;AAEA;;AAWE;AAAA,qBAAY,IAAA8G,UAAA,QAAZ;AAA8B,aAA9B,EAA+B,QAA/B,EAA+B;AAAA,qBACrB,IAAAD,QAAA,QADqB;AACL,aAD1B;;AAGF;;AACF;;AAEA;;AACE;;AAAI;;AAAU;;AACd;;AACE;;AAGA;;AACF;;AACF;;AACF;;;;AAxBM;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,SAAb,EAAa,WAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,OAAb,EAAa,CAAb,EAAa,UAAb,EAAa,YAAb,EAAa,eAAb,EAAa,wBAAb;;AAkBoB;;AAAA;;AAGf;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCbF/H,uB;AAQX,2CAAc;AAAA;;AAAA;;AAPd,eAAAhmB,IAAA,GAAO,EAAP;AAEA,eAAAhE,OAAA,GAAU,CAAC;AAAE4T,gBAAI,EAAE;AAAR,WAAD,EAAsB;AAAEA,gBAAI,EAAE;AAAR,WAAtB,EAAwC;AAAEA,gBAAI,EAAE;AAAR,WAAxC,CAAV;AAEA,eAAArI,UAAA,GAAa,4EAAAA,UAAb;AACA,eAAAO,QAAA,GAAW,4EAAAA,QAAX;AAGE,eAAKsgB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjB,kBAAMJ,IAAI,GAAGK,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAb;AACAN,gBAAE,CAACD,IAAD,CAAF;AACD,aAHD;;AAKAv1B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBAxBU7C,uB;AAAsB,O;;;cAAtBA,uB;AAAsB,4C;AAAA,gB;AAAA,e;AAAA,+Q;AAAA;AAAA;AA3B/B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAYF;;;;AAVI;;AAAA,uFAAa,SAAb,EAAa,WAAb,EAAa,UAAb,EAAa,kBAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,WAAb,EAAa,EAAb,EAAa,YAAb,EAAa,IAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWKG,2B;AAWX,+CAAc;AAAA;;AAAA;;AAVd,eAAAnmB,IAAA,GAAO,EAAP;AAEA,eAAAhE,OAAA,GAAU,CACR;AAAE4T,gBAAI,EAAE,SAAR;AAAmBoR,sBAAU,EAAE,KAAKiN,iBAAL,CAAuB/5B,IAAvB,CAA4B,IAA5B;AAA/B,WADQ,EAER;AAAE0b,gBAAI,EAAE,MAAR;AAAgBJ,oBAAQ,EAAE;AAA1B,WAFQ,EAGR;AAAEI,gBAAI,EAAE,QAAR;AAAkBJ,oBAAQ,EAAE;AAA5B,WAHQ,CAAV;AAMA,eAAAjI,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjB,kBAAMJ,IAAI,GAAGK,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAb;AACAN,gBAAE,CAACD,IAAI,CAAC7mB,MAAL,CAAY,CAAZ,EAAe,EAAf,CAAD,CAAF;AACD,aAHD;;AAKA1O,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,2BAAkBtH,KAAlB,EAAyBC,KAAzB,EAAgC;AAC9B0H,mBAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC5H,KAAlC,EAAyCC,KAAzC,EAD8B,CAG9B;;AACA,gBAAID,KAAK,CAAC5H,WAAN,KAAsB6H,KAAK,CAAC7H,WAAN,EAA1B,EAA+C;AAC7C,qBAAO,CAAC,CAAR;AACD;;AACD,gBAAI4H,KAAK,CAAC5H,WAAN,KAAsB6H,KAAK,CAAC7H,WAAN,EAA1B,EAA+C;AAC7C,qBAAO,CAAP;AACD;AACF;;;;;;;yBAvCUwM,2B;AAA0B,O;;;cAA1BA,2B;AAA0B,gD;AAAA,gB;AAAA,e;AAAA,iQ;AAAA;AAAA;AAzBnC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAUF;;;;AARI;;AAAA,uFAAa,SAAb,EAAa,WAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUI;;;;;;AAAA;;;;;;AAMA;;;;;;AAAA;;;;;;;;;;;;;;;UASCF,wB;AA1Cb;AAAA;;AA2CE,eAAAjmB,IAAA,GAAO,EAAP;AAEA,eAAAuH,UAAA,GAAa,4EAAAA,UAAb;AAmBD;;;;iBAjBC,oBAAW;AAAA;;AACT,iBAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,qBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,aAFD;AAGD;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjB,kBAAMJ,IAAI,GAAGK,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAb;AACAN,gBAAE,CAACD,IAAD,CAAF;AACD,aAHD;;AAKAv1B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBArBU5C,wB;AAAuB,O;;;cAAvBA,wB;AAAuB,6C;AAAA,iB;AAAA,gB;AAAA,kW;AAAA;AAAA;AAvChC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAUE;;AACE;;AAGF;;AAEA;;AACE;;AAGF;;AAEA;;AACF;;AACF;;;;AAtBI;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,WAAb,EAAa,EAAb,EAAa,YAAb,EAAa,IAAb,EAAa,OAAb,EAAa,4IAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcKC,uB;AAaX,2CAAc;AAAA;;AAAA;;AAZd,eAAAgI,OAAA,GAAU,KAAV;AAEA,eAAAluB,IAAA,GAAO,EAAP;AAEA,eAAAhE,OAAA,GAAU,CACR;AAAE4T,gBAAI,EAAE,SAAR;AAAmBJ,oBAAQ,EAAE;AAA7B,WADQ,EAER;AAAEI,gBAAI,EAAE,MAAR;AAAgBJ,oBAAQ,EAAE;AAA1B,WAFQ,EAGR;AAAEI,gBAAI,EAAE,QAAR;AAAkBJ,oBAAQ,EAAE;AAA5B,WAHQ,CAAV;AAMA,eAAAjI,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjB,kBAAMJ,IAAI,GAAGK,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAb;AACAN,gBAAE,CAACD,IAAI,CAAC7mB,MAAL,CAAY,CAAZ,EAAe,EAAf,CAAD,CAAF;AACD,aAHD;;AAKA1O,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,gBAAOvxB,KAAP,EAAc;AAAA;;AACZ;AACA4xB,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B7xB,KAA1B;AACA,iBAAK42B,OAAL,GAAe,IAAf,CAHY,CAIZ;;AACA5tB,sBAAU,CAAC,YAAM;AACf,kBAAMN,IAAI,sBAAO,OAAI,CAACA,IAAZ,CAAV,CADe,CAEf;AACA;AACA;;;AACA,kBAAM/H,IAAI,GAAGX,KAAK,CAACU,KAAN,CAAY,CAAZ,CAAb;AACAgI,kBAAI,CAAC/H,IAAL,CAAU,UAAC2hB,CAAD,EAAIC,CAAJ,EAAU;AAClB,uBAAOD,CAAC,CAAC3hB,IAAI,CAAClB,IAAN,CAAD,CAAao3B,aAAb,CAA2BtU,CAAC,CAAC5hB,IAAI,CAAClB,IAAN,CAA5B,KAA4CkB,IAAI,CAACG,GAAL,KAAa,MAAb,GAAsB,CAAC,CAAvB,GAA2B,CAAvE,CAAP;AACD,eAFD;AAIA,qBAAI,CAAC4H,IAAL,GAAYA,IAAZ;AACA,qBAAI,CAACkuB,OAAL,GAAe,KAAf;AACD,aAZS,EAYP,IAZO,CAAV;AAaD;;;;;;;yBAjDUhI,uB;AAAsB,O;;;cAAtBA,uB;AAAsB,4C;AAAA,gB;AAAA,e;AAAA,4S;AAAA;AAAA;AA5B/B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAUE;AAAA,qBAAQ,IAAA/W,MAAA,QAAR;AAAsB,aAAtB;;AAEF;;AACF;;;;AAXI;;AAAA,uFAAa,SAAb,EAAa,WAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,iBAAb,EAAa,IAAb,EAAa,kBAAb,EAAa,WAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUE;;AACE;;AAA2B;;AAAU;;AACvC;;;;;;AAD6B;;AAAA;;;;;;AAF/B;;AACE;;AAGF;;;;;;AAHqC;;AAAA;;;;UAShC8Y,kC;AAUX,sDAAc;AAAA;;AAAA;;AATd,eAAAjoB,IAAA,GAAO,EAAP;AAKA,eAAAhE,OAAA,GAAU,EAAV;AAEA,eAAAuL,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAI,CAAC7mB,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAZ;AACD,WAFD;AAGD;;;;iBAED,oBAAW;AAAA;;AACT,iBAAKxF,OAAL,GAAe,CACb;AACEjF,kBAAI,EAAE,MADR;AAEEsP,yBAAW,EAAE;AAAA,uBAAM,IAAN;AAAA,eAFf;AAGEJ,6BAAe,EAAE,KAAKmoB;AAHxB,aADa,EAMb;AAAExe,kBAAI,EAAE,QAAR;AAAkBvJ,yBAAW,EAAE,qBAAAjB,KAAK;AAAA,uBAAI,OAAI,CAAC0jB,gBAAL,CAAsB1jB,KAAtB,CAAJ;AAAA;AAApC,aANa,EAOb;AAAErO,kBAAI,EAAE,KAAR;AAAesP,yBAAW,EAAE,qBAAAjB,KAAK;AAAA,uBAAI,OAAI,CAACipB,MAAL,CAAYjpB,KAAZ,CAAJ;AAAA;AAAjC,aAPa,CAAf;AASD;;;iBAED,eAAMkjB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,oBAAQ;AACN,mBAAO,KAAK7oB,IAAL,CAAU+F,GAAV,CAAc,UAAAzR,GAAG;AAAA,qBAAIA,GAAG,CAACsb,IAAR;AAAA,aAAjB,EAA+B7J,GAA/B,CAAmC,UAAAuoB,QAAQ;AAAA,qBAAIA,QAAQ,CAACjT,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAJ;AAAA,aAA3C,CAAP;AACD;;;iBAEO,0BAAiBjW,KAAjB,EAAkC;AACxC,gBAAM2jB,KAAK,GAAG3jB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAIA,IAAI,KAAK,MAAb;AAAA,aAAjB,EAAsC5F,MAApD;AACA,gBAAMspB,OAAO,GAAG5jB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAIA,IAAI,KAAK,QAAb;AAAA,aAAjB,EAAwC5F,MAAxD;AAEA,oCAAiBqpB,KAAjB,wBAAoCC,OAApC;AACD;;;iBAEO,gBAAO5jB,KAAP,EAAsB;AAC5B,gBAAMmpB,aAAa,GAAGnpB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAI,CAAC,CAACA,IAAN;AAAA,aAAjB,CAAtB;AACA,mBAAOipB,aAAa,CAAC/oB,MAAd,CAAqB,UAACoa,GAAD,EAAMta,IAAN;AAAA,qBAAgBsa,GAAG,IAAIta,IAAvB;AAAA,aAArB,EAAmD,CAAnD,IAAwDipB,aAAa,CAAC7uB,MAA7E;AACD;;;;;;;yBArDUuoB,kC;AAAiC,O;;;cAAjCA,kC;AAAiC,yD;AAAA;AAAA;;;;;;;;;;;;;;;AAjC1C;;AACE;;AACE;;AACA;;AACE;;AAGE;;AACF;;AACF;;AACF;;AACA;;AAWA;;AAOF;;;;AAhBI;;AAAA,yFAAmB,SAAnB,EAAmB,WAAnB,EAAmB,YAAnB,EAAmB,oBAAnB,EAAmB,cAAnB,EAAmB,EAAnB,EAAmB,WAAnB,EAAmB,MAAnB,EAAmB,eAAnB,EAAmB,EAAnB,EAAmB,MAAnB,EAAmB,QAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACcE;;AACE;;AAA2B;;AAAU;;AACvC;;;;;;AAD6B;;AAAA;;;;;;AAF/B;;AACE;;AAGF;;;;;;AAHqC;;AAAA;;;;UAQhCE,8B;AAQX,kDAAc;AAAA;;AAAA;;AAPd,eAAAnoB,IAAA,GAAO,EAAP;AAEA,eAAAwuB,aAAA,GAAgB,IAAhB;AACA,eAAA3lB,eAAA,GAAkB,KAAlB;AAEA,eAAAtB,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAI,CAAC7mB,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAM8mB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,oBAAQ;AACN,mBAAO,KAAK7oB,IAAL,CAAU+F,GAAV,CAAc,UAAAzR,GAAG;AAAA,qBAAIA,GAAG,CAACsb,IAAR;AAAA,aAAjB,EAA+B7J,GAA/B,CAAmC,UAAAuoB,QAAQ;AAAA,qBAAIA,QAAQ,CAACjT,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAJ;AAAA,aAA3C,CAAP;AACD;;;iBAED,0BAAiBjW,KAAjB,EAAkC;AAChC,gBAAM2jB,KAAK,GAAG3jB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAIA,IAAI,KAAK,MAAb;AAAA,aAAjB,EAAsC5F,MAApD;AACA,gBAAMspB,OAAO,GAAG5jB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAIA,IAAI,KAAK,QAAb;AAAA,aAAjB,EAAwC5F,MAAxD;AAEA,oCAAiBqpB,KAAjB,wBAAoCC,OAApC;AACD;;;iBAED,gBAAO5jB,KAAP,EAAsB;AACpB,gBAAMmpB,aAAa,GAAGnpB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAI,CAAC,CAACA,IAAN;AAAA,aAAjB,CAAtB;AACA,mBAAOipB,aAAa,CAAC/oB,MAAd,CAAqB,UAACoa,GAAD,EAAMta,IAAN;AAAA,qBAAgBsa,GAAG,IAAIta,IAAvB;AAAA,aAArB,EAAmD,CAAnD,IAAwDipB,aAAa,CAAC7uB,MAA7E;AACD;;;;;;;yBAvCUyoB,8B;AAA6B,O;;;cAA7BA,8B;AAA6B,gD;AAAA,iB;AAAA,e;AAAA,sf;AAAA;AAAA;AAnCtC;;AACE;;AACE;;AACA;;AACE;;AAGE;;AACF;;AACF;;AACF;;AACA;;AAUE;;AACA;;AACA;;AACF;;AACA;;AAOF;;;;;;AAnBI;;AAAA,sGAA4B,iBAA5B,EAA4B,mBAA5B,EAA4B,eAA5B,EAA4B,GAA5B,EAA4B,YAA5B,EAA4B,oBAA5B,EAA4B,cAA5B,EAA4B,EAA5B,EAA4B,MAA5B,EAA4B,QAA5B;;AAQkC;;AAAA;;AACE;;AAAA;;AACH;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCa5BD,gC;AAaX,kDAAoBiF,oBAApB,EAAoE;AAAA;;AAAA;;AAAhD,eAAAA,oBAAA,GAAAA,oBAAA;AAZpB,eAAA5wB,IAAA,GAAO,IAAI,gDAAA2wB,IAAJ,EAAP;AACA,eAAAltB,IAAA,GAAO,IAAIqL,KAAJ,EAAP;AAEA,eAAArP,OAAA,GAAU,CACR;AACA;AAAE4T,gBAAI,EAAE,MAAR;AAAgBvJ,uBAAW,EAAE,qBAAAjB,KAAK;AAAA,+BAAOA,KAAK,CAAC1F,MAAb;AAAA;AAAlC,WAFQ,EAGR;AAAEkQ,gBAAI,EAAE,QAAR;AAAkBvJ,uBAAW,EAAE;AAAA,qBAAM,OAAI,CAACooB,gBAAL,EAAN;AAAA;AAA/B,WAHQ,EAIR;AAAE7e,gBAAI,EAAE,SAAR;AAAmBvJ,uBAAW,EAAE;AAAA,qBAAM,IAAN;AAAA;AAAhC,WAJQ,CAAV;AAOA,eAAAkB,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAKhL,IAAL,CAAUuwB,UAAV,GAAuB,CAAvB;AACA,eAAKvwB,IAAL,CAAU6P,IAAV,GAAiB,EAAjB;AACD;;;;iBAED,oBAAW;AACT,iBAAKghB,OAAL,CAAa;AAAExxB,oBAAM,EAAE;AAAV,aAAb;AACD;AAED;;;;;;;iBAIA,iBAAQyxB,QAAR,EAAkB;AAAA;;AAChB,iBAAK9wB,IAAL,CAAUuwB,UAAV,GAAuBO,QAAQ,CAACzxB,MAAhC;AACA,iBAAKuxB,oBAAL,CAA0BG,UAA1B,CAAqC,KAAK/wB,IAA1C,EAAgD8B,SAAhD,CAA0D,UAAAsuB,SAAS,EAAI;AACrE,qBAAI,CAACpwB,IAAL,GAAYowB,SAAS,CAACpwB,IAAtB;AACA,qBAAI,CAACyD,IAAL,GAAY2sB,SAAS,CAACtE,IAAtB;AACD,aAHD;AAID;;;iBAED,4BAAgB;AACd;AACA,mBAAO,sBAAP;AACD;;;;;;;yBArCUH,gC,EAA+B,0J;AAAA,O;;;cAA/BA,gC;AAA+B,uD;AAAA,oFAjC/B,CAAC,iEAAAqE,wBAAD,CAiC+B,E;AAjCL,gB;AAAA,gB;AAAA,yU;AAAA;AAAA;AAEnC;;AACE;;AACE;;AACA;;AACE;;AAGE;;AACF;;AACF;;AACF;;AACA;;AAcE;AAAA,qBAAQ,IAAAa,OAAA,QAAR;AAAuB,aAAvB;;AAEF;;AACF;;;;AAfI;;AAAA,uFAAa,SAAb,EAAa,WAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,YAAb,EAAa,IAAb,EAAa,eAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb,EAAa,gBAAb,EAAa,IAAb,EAAa,OAAb,EAAa,sBAAb,EAAa,QAAb,EAAa,mBAAb,EAAa,OAAb,EAAa,aAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC2BKpF,0B;AAcX,8CAAc;AAAA;;AAAA;;AAbd,eAAAhoB,IAAA,GAAO,EAAP;AAEA,eAAAhE,OAAA,GAAU,CACR;AAAEjF,gBAAI,EAAE,MAAR;AAAgBsP,uBAAW,EAAE;AAA7B,WADQ,EAER;AAAEuJ,gBAAI,EAAE,QAAR;AAAkBvJ,uBAAW,EAAE,qBAAAjB,KAAK;AAAA,qBAAI,OAAI,CAAC0jB,gBAAL,CAAsB1jB,KAAtB,CAAJ;AAAA;AAApC,WAFQ,EAGR;AAAErO,gBAAI,EAAE,KAAR;AAAesP,uBAAW,EAAE,qBAAAjB,KAAK;AAAA,qBAAI,OAAI,CAACipB,MAAL,CAAYjpB,KAAZ,CAAJ;AAAA;AAAjC,WAHQ,CAAV;AAMA,eAAAopB,aAAA,GAAgB,IAAhB;AACA,eAAA3lB,eAAA,GAAkB,KAAlB;AAEA,eAAAtB,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAI,CAAC7mB,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAM8mB,EAAN,EAAqC;AACnC,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,gCAAuBlvB,MAAvB,EAAsC;AACpC,gBAAMhC,MAAM,GAAGgC,MAAM,CAAChC,MAAtB;AACA,iBAAKkR,eAAL,GAAuBlR,MAAM,CAACnD,KAA9B;AACD;;;iBAEO,0BAAiB4Q,KAAjB,EAAkC;AACxC,gBAAM2jB,KAAK,GAAG3jB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAIA,IAAI,KAAK,MAAb;AAAA,aAAjB,EAAsC5F,MAApD;AACA,gBAAMspB,OAAO,GAAG5jB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAIA,IAAI,KAAK,QAAb;AAAA,aAAjB,EAAwC5F,MAAxD;AAEA,oCAAiBqpB,KAAjB,wBAAoCC,OAApC;AACD;;;iBAEO,gBAAO5jB,KAAP,EAAsB;AAC5B,gBAAMmpB,aAAa,GAAGnpB,KAAK,CAAClB,MAAN,CAAa,UAAAoB,IAAI;AAAA,qBAAI,CAAC,CAACA,IAAN;AAAA,aAAjB,CAAtB;AACA,mBAAOipB,aAAa,CAAC/oB,MAAd,CAAqB,UAACoa,GAAD,EAAMta,IAAN;AAAA,qBAAgBsa,GAAG,IAAIta,IAAvB;AAAA,aAArB,EAAmD,CAAnD,IAAwDipB,aAAa,CAAC7uB,MAA7E;AACD;;;;;;;yBA9CUsoB,0B;AAAyB,O;;;cAAzBA,0B;AAAyB,gD;AAAA,iB;AAAA,gB;AAAA,md;AAAA;AAAA;AA7ClC;;AACE;;AACE;;AACA;;AACE;;AAGE;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAIE;AAAA;AAAA;;AAJF;;AAMA;;AAA4B;;AAAkB;;AAChD;;AACA;;AACE;;AAA6B;;AAAQ;;AACrC;;AAA6B;AAAA,qBAAU,IAAA0G,sBAAA,QAAV;AAAwC,aAAxC;;AAC3B;;AAAwB;;AAAG;;AAC3B;;AAA2B;;AAAM;;AACnC;;AACF;;AACF;;AACA;;AAYF;;;;AAzBQ;;AAAA;;AAQQ;;AAAA;;AACA;;AAAA;;AAMZ;;AAAA,sGAA4B,iBAA5B,EAA4B,mBAA5B,EAA4B,SAA5B,EAA4B,WAA5B,EAA4B,YAA5B,EAA4B,oBAA5B,EAA4B,cAA5B,EAA4B,EAA5B,EAA4B,eAA5B,EAA4B,EAA5B,EAA4B,MAA5B,EAA4B,QAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVkE;;;;;;AAAA;;;;;;AAE9D;;AAAI;;AAAQ;;AAAW;;;;;;AAAX;;AAAA;;;;;;;;AAKZ;;AAAM;AAAA;;AAAA;AAAA;AAAA;;AAAiB;;AAAiB;;;;;;AAAjB;;AAAA;;;;;;AAGvB;;AAAY;;AAAkC;;AAAI;;AAAG;;AAAW;;AAChE;;AAAK;;AAAU;;;;;;;;;AADA;;AAAA;;AAAsC;;AAAA;;AAChD;;AAAA;;;;;;AAKL;;AACE;;AACF;;;;;;AAD2C;;AAAA;;;;UAQ1CpI,yB;AAMX,6CAAc;AAAA;;AAAA;;AALd,eAAAtmB,IAAA,GAAO,EAAP;AACA,eAAA2uB,IAAA,GAAO,aAAP;AAEA,eAAApnB,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAI,CAAC7mB,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAM8mB,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBArBUvC,yB;AAAwB,O;;;cAAxBA,yB;AAAwB,8C;AAAA,iB;AAAA,e;AAAA,sgB;AAAA;AAAA;AA9CjC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAQE;;AACE;;AACA;;AAGF;;AACA;;AACE;;AAGA;;AAIF;;AACA;;AACE;;AAKF;;AACF;;AACF;;;;AA7BI;;AAAA,uFAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSwC;;AAAQ;;AAAK;;AAAS;;;;;;AAAA;;AAAA;;;;;;AAG9D;;;;;;AACA;;;;;;AADA;;AACA;;;;;;AADM;;AACA;;AAAA;;;;UAKDC,8B;AASX,kDAAc;AAAA;;AAAA;;AALd,eAAAvmB,IAAA,GAAO,EAAP;AACA,eAAAhE,OAAA,GAAU,EAAV;AAEA,eAAAuL,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAI,CAAC7mB,MAAL,CAAY,CAAZ,EAAe,CAAf,CAAZ;AACD,WAFD;AAGD;;;;iBAED,oBAAW;AACT,iBAAKxF,OAAL,GAAe,CACb;AACEpF,0BAAY,EAAE,KAAKg4B,QADrB;AAEEjf,4BAAc,EAAE,KAAKkf,MAFvB;AAGEjf,kBAAI,EAAE;AAHR,aADa,CAAf;AAOD;;;iBAED,eAAM0Y,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;;;;;yBAlCUtC,8B;AAA6B,O;;;cAA7BA,8B;AAA6B,0C;AAAA;AAAA;;;;;;;;;;;;;;;;;;AAhCtC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAWA;;AAEA;;AAIF;;;;AAfI;;AAAA,uFAAa,SAAb,EAAa,WAAb,EAAa,YAAb,EAAa,oBAAb,EAAa,cAAb,EAAa,EAAb,EAAa,cAAb,EAAa,EAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWI;;;;;;AAAA;;;;;;AAKA;;;;;;AAAA;;;;;;AAKA;;;;;;AAAA;;;;UAQCwB,oB;AAKX,wCAAc;AAAA;;AAAA;;AAJd,eAAA/nB,IAAA,GAAO,EAAP;AAEA,eAAAuH,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjB,mBAAI,CAACroB,IAAL,GAAYqoB,IAAZ;AACD,WAFD;AAGD;;;;iBAED,eAAMC,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBH,gBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,aAFD;;AAIA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,sBAAavxB,KAAb,EAAyB;AACvB,gBAAM2D,KAAK,GAAG3D,KAAK,CAAC1C,QAApB;AACA,gBAAMN,GAAG,GAAGgD,KAAK,CAAChD,GAAlB;;AACA,gBAAIA,GAAG,CAACO,UAAJ,KAAmB,WAAvB,EAAoC;AAClCP,iBAAG,CAACO,UAAJ,GAAiB,UAAjB;AACD,aAFD,MAEO;AACLP,iBAAG,CAACO,UAAJ,GAAiB,WAAjB;AACD;;AACD,iBAAKmL,IAAL,sBAAgB,KAAKA,IAArB;AACD;;;;;;;yBA/BU+nB,oB;AAAmB,O;;;cAAnBA,oB;AAAmB,8C;AAAA,iB;AAAA,gB;AAAA,yb;AAAA;AAAA;AA3C5B;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AASE;AAAA,qBAAc,IAAAjzB,YAAA,QAAd;AAAkC,aAAlC;;AAEA;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACA;;AACE;;AAGF;;AACF;;AACF;;;;AAzBI;;AAAA,wGAA8B,cAA9B,EAA8B,EAA9B,EAA8B,cAA9B,EAA8B,EAA9B,EAA8B,kBAA9B,EAA8B,SAA9B,EAA8B,gBAA9B,EAA8B,MAA9B,EAA8B,MAA9B,EAA8B,QAA9B;;AASkC;;AAAA,oFAAc,cAAd,EAAc,IAAd;;AAKE;;AAAA;;AAKH;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACH3B;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;;;AAZF;;AAAoD;AAAA;;AAAA;AAAA,mBAAS,sBAAT;AAA4B,WAA5B;;AAClD;;AAGA;;AAGA;;AAGA;;AAGF;;;;;;AAbQ;;AACC;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;UAeRuwB,wB;AAMX,0CAAoB1xB,EAApB,EAA2C;AAAA;;AAAA;;AAAvB,eAAAA,EAAA,GAAAA,EAAA;AALpB,eAAAqM,IAAA,GAAO,EAAP;AACA,eAAA8uB,SAAA,GAAY,EAAZ;AAEA,eAAAvnB,UAAA,GAAa,4EAAAA,UAAb;AAGE,eAAK6gB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjBA,gBAAI,GAAGA,IAAI,CAACtb,KAAL,CAAW,CAAX,EAAc,OAAI,CAAC+hB,SAAnB,CAAP;AACA,mBAAI,CAAC9uB,IAAL,GAAYqoB,IAAI,CAACtiB,GAAL,CAAS,UAAA8O,CAAC,EAAI;AACxBA,eAAC,CAAChgB,UAAF,GAAe,WAAf;AACAggB,eAAC,CAACka,QAAF,GAAa,IAAb;AACA,qBAAOla,CAAP;AACD,aAJW,CAAZ;AAKD,WAPD;AAQD;;;;iBAED,eAAMyT,EAAN,EAAU;AACR,gBAAMx1B,GAAG,GAAG,IAAIy1B,cAAJ,EAAZ;AACAz1B,eAAG,CAAC01B,IAAJ,CAAS,KAAT;;AAEA11B,eAAG,CAAC21B,MAAJ,GAAa,YAAM;AACjBnoB,wBAAU,CAAC,YAAM;AACfgoB,kBAAE,CAACI,IAAI,CAACC,KAAL,CAAW71B,GAAG,CAAC81B,QAAf,CAAD,CAAF;AACD,eAFS,EAEP,GAFO,CAAV;AAGD,aAJD;;AAMA91B,eAAG,CAAC+1B,IAAJ;AACD;;;iBAED,sBAAavxB,KAAb,EAAyB;AAAA;;AACvB,gBAAM2D,KAAK,GAAG3D,KAAK,CAAC1C,QAApB;AACA,gBAAMN,GAAG,GAAGgD,KAAK,CAAChD,GAAlB;;AACA,gBAAIA,GAAG,CAACO,UAAJ,KAAmB,WAAvB,EAAoC;AAClCP,iBAAG,CAACO,UAAJ,GAAiB,SAAjB;AACA,mBAAKuzB,KAAL,CAAW,UAAAC,IAAI,EAAI;AACjBA,oBAAI,GAAGA,IAAI,CAACtb,KAAL,CAAW,OAAI,CAAC+hB,SAAhB,EAA2B,OAAI,CAACA,SAAL,GAAiB,CAA5C,EAA+C/oB,GAA/C,CAAmD,UAAA8O,CAAC,EAAI;AAC7DA,mBAAC,CAAChgB,UAAF,GAAe,WAAf;AACAggB,mBAAC,CAACka,QAAF,GAAaz6B,GAAG,CAAChB,EAAjB;AACA,yBAAOuhB,CAAP;AACD,iBAJM,CAAP;AAKA,uBAAI,CAACia,SAAL,GAAiB,OAAI,CAACA,SAAL,GAAiB,CAAlC;AACAx6B,mBAAG,CAACO,UAAJ,GAAiB,UAAjB;AACA,uBAAI,CAACmL,IAAL,gCAAgB,OAAI,CAACA,IAArB,sBAA8BqoB,IAA9B;;AACA,uBAAI,CAAC10B,EAAL,CAAQuY,aAAR;AACD,eAVD;AAWD,aAbD,MAaO;AACL5X,iBAAG,CAACO,UAAJ,GAAiB,WAAjB;AACA,mBAAKmL,IAAL,sBAAgB,KAAKA,IAArB;AACA,mBAAKrM,EAAL,CAAQuY,aAAR;AACD;AACF;;;;;;;yBAnDUmZ,wB,EAAuB,6H;AAAA,O;;;cAAvBA,wB;AAAuB,8C;AAAA,iB;AAAA,gB;AAAA,6oB;AAAA;AAAA;AAtDhC;;AACE;;AACE;;AACA;;AACE;;AAIE;;AACF;;AACF;;AACF;;AACA;;AAYE;AAAA,qBAAc,IAAAvwB,YAAA,QAAd;AAAkC,aAAlC;;AAEA;;AACA;;AACE;;AAgBF;;AACA;;AACA;;AACA;;AACA;;AACF;;AACF;;;;AAnCI;;AAAA,yGAA+B,cAA/B,EAA+B,EAA/B,EAA+B,cAA/B,EAA+B,CAA/B,EAA+B,WAA/B,EAA+B,EAA/B,EAA+B,YAA/B,EAA+B,IAA/B,EAA+B,YAA/B,EAA+B,IAA/B,EAA+B,MAA/B,EAA+B,QAA/B,EAA+B,kBAA/B,EAA+B,UAA/B,EAA+B,gBAA/B,EAA+B,IAA/B;;AAWgC;;AAAA;;AACE;;AAAA,2FAAqB,OAArB,EAAqB,GAArB,EAAqB,iBAArB,EAAqB,EAArB;;AAoBA;;AAAA;;AACC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtD3C;AACA;AACA;;;AAEO,UAAMk6B,YAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA,UAAI,uDAAAD,WAAA,WAAJ,EAA4B;AAC1B,uDAAAE,cAAA;AACD;;AAED,6DAAAC,eAAA,GACGC,eADH,CACmB,6CAAApK,SADnB,WAES,UAAAqK,GAAG;AAAA,eAAInG,OAAO,CAACoG,KAAR,CAAcD,GAAd,CAAJ;AAAA,OAFZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import {\n  Component,\n  Input,\n  PipeTransform,\n  HostBinding,\n  ViewChild,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  ViewContainerRef,\n  OnDestroy,\n  DoCheck,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { TableColumn } from '../../types/table-column.type';\nimport { SortDirection } from '../../types/sort-direction.type';\nimport { Keys } from '../../utils/keys';\n\nexport type TreeStatus = 'collapsed' | 'expanded' | 'loading' | 'disabled';\n\n@Component({\n  selector: 'datatable-body-cell',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"datatable-body-cell-label\" [style.margin-left.px]=\"calcLeftMargin(column, row)\">\n      <label\n        *ngIf=\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\"\n        class=\"datatable-checkbox\"\n      >\n        <input type=\"checkbox\" [checked]=\"isSelected\" (click)=\"onCheckboxChange($event)\" />\n      </label>\n      <ng-container *ngIf=\"column.isTreeColumn\">\n        <button\n          *ngIf=\"!column.treeToggleTemplate\"\n          class=\"datatable-tree-button\"\n          [disabled]=\"treeStatus === 'disabled'\"\n          (click)=\"onTreeAction()\"\n        >\n          <span>\n            <i *ngIf=\"treeStatus === 'loading'\" class=\"icon datatable-icon-collapse\"></i>\n            <i *ngIf=\"treeStatus === 'collapsed'\" class=\"icon datatable-icon-up\"></i>\n            <i *ngIf=\"treeStatus === 'expanded' || treeStatus === 'disabled'\" class=\"icon datatable-icon-down\"></i>\n          </span>\n        </button>\n        <ng-template\n          *ngIf=\"column.treeToggleTemplate\"\n          [ngTemplateOutlet]=\"column.treeToggleTemplate\"\n          [ngTemplateOutletContext]=\"{ cellContext: cellContext }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <span *ngIf=\"!column.cellTemplate\" [title]=\"sanitizedValue\" [innerHTML]=\"value\"> </span>\n      <ng-template\n        #cellTemplate\n        *ngIf=\"column.cellTemplate\"\n        [ngTemplateOutlet]=\"column.cellTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n    </div>\n  `\n})\nexport class DataTableBodyCellComponent implements DoCheck, OnDestroy {\n  @Input() displayCheck: (row: any, column?: TableColumn, value?: any) => boolean;\n\n  @Input() set group(group: any) {\n    this._group = group;\n    this.cellContext.group = group;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get group() {\n    return this._group;\n  }\n\n  @Input() set rowHeight(val: number) {\n    this._rowHeight = val;\n    this.cellContext.rowHeight = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get rowHeight() {\n    return this._rowHeight;\n  }\n\n  @Input() set isSelected(val: boolean) {\n    this._isSelected = val;\n    this.cellContext.isSelected = val;\n    this.cd.markForCheck();\n  }\n\n  get isSelected(): boolean {\n    return this._isSelected;\n  }\n\n  @Input() set expanded(val: boolean) {\n    this._expanded = val;\n    this.cellContext.expanded = val;\n    this.cd.markForCheck();\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  @Input() set rowIndex(val: number) {\n    this._rowIndex = val;\n    this.cellContext.rowIndex = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get rowIndex(): number {\n    return this._rowIndex;\n  }\n\n  @Input() set column(column: TableColumn) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get column(): TableColumn {\n    return this._column;\n  }\n\n  @Input() set row(row: any) {\n    this._row = row;\n    this.cellContext.row = row;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get row(): any {\n    return this._row;\n  }\n\n  @Input() set sorts(val: any[]) {\n    this._sorts = val;\n    this.calcSortDir = this.calcSortDir(val);\n  }\n\n  get sorts(): any[] {\n    return this._sorts;\n  }\n\n  @Input() set treeStatus(status: TreeStatus) {\n    if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\n      this._treeStatus = 'collapsed';\n    } else {\n      this._treeStatus = status;\n    }\n    this.cellContext.treeStatus = this._treeStatus;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get treeStatus(): TreeStatus {\n    return this._treeStatus;\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('cellTemplate', { read: ViewContainerRef, static: true })\n  cellTemplate: ViewContainerRef;\n\n  @HostBinding('class')\n  get columnCssClasses(): any {\n    let cls = 'datatable-body-cell';\n    if (this.column.cellClass) {\n      if (typeof this.column.cellClass === 'string') {\n        cls += ' ' + this.column.cellClass;\n      } else if (typeof this.column.cellClass === 'function') {\n        const res = this.column.cellClass({\n          row: this.row,\n          group: this.group,\n          column: this.column,\n          value: this.value,\n          rowHeight: this.rowHeight\n        });\n\n        if (typeof res === 'string') {\n          cls += ' ' + res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) {\n              cls += ` ${k}`;\n            }\n          }\n        }\n      }\n    }\n    if (!this.sortDir) {\n      cls += ' sort-active';\n    }\n    if (this.isFocused) {\n      cls += ' active';\n    }\n    if (this.sortDir === SortDirection.asc) {\n      cls += ' sort-asc';\n    }\n    if (this.sortDir === SortDirection.desc) {\n      cls += ' sort-desc';\n    }\n\n    return cls;\n  }\n\n  @HostBinding('style.width.px')\n  get width(): number {\n    return this.column.width;\n  }\n\n  @HostBinding('style.minWidth.px')\n  get minWidth(): number {\n    return this.column.minWidth;\n  }\n\n  @HostBinding('style.maxWidth.px')\n  get maxWidth(): number {\n    return this.column.maxWidth;\n  }\n\n  @HostBinding('style.height')\n  get height(): string | number {\n    const height = this.rowHeight;\n    if (isNaN(height)) {\n      return height;\n    }\n    return height + 'px';\n  }\n\n  sanitizedValue: any;\n  value: any;\n  sortDir: SortDirection;\n  isFocused = false;\n  onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n  activateFn = this.activate.emit.bind(this.activate);\n\n  cellContext: any;\n\n  private _isSelected: boolean;\n  private _sorts: any[];\n  private _column: TableColumn;\n  private _row: any;\n  private _group: any;\n  private _rowHeight: number;\n  private _rowIndex: number;\n  private _expanded: boolean;\n  private _element: any;\n  private _treeStatus: TreeStatus;\n\n  constructor(element: ElementRef, private cd: ChangeDetectorRef) {\n    this.cellContext = {\n      onCheckboxChangeFn: this.onCheckboxChangeFn,\n      activateFn: this.activateFn,\n      row: this.row,\n      group: this.group,\n      value: this.value,\n      column: this.column,\n      rowHeight: this.rowHeight,\n      isSelected: this.isSelected,\n      rowIndex: this.rowIndex,\n      treeStatus: this.treeStatus,\n      onTreeAction: this.onTreeAction.bind(this)\n    };\n\n    this._element = element.nativeElement;\n  }\n\n  ngDoCheck(): void {\n    this.checkValueUpdates();\n  }\n\n  ngOnDestroy(): void {\n    if (this.cellTemplate) {\n      this.cellTemplate.clear();\n    }\n  }\n\n  checkValueUpdates(): void {\n    let value = '';\n\n    if (!this.row || !this.column) {\n      value = '';\n    } else {\n      const val = this.column.$$valueGetter(this.row, this.column.prop);\n      const userPipe: PipeTransform = this.column.pipe;\n\n      if (userPipe) {\n        value = userPipe.transform(val);\n      } else if (value !== undefined) {\n        value = val;\n      }\n    }\n\n    if (this.value !== value) {\n      this.value = value;\n      this.cellContext.value = value;\n      this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n      this.cd.markForCheck();\n    }\n  }\n\n  @HostListener('focus')\n  onFocus(): void {\n    this.isFocused = true;\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    this.isFocused = false;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): void {\n    this.activate.emit({\n      type: 'click',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n\n  @HostListener('dblclick', ['$event'])\n  onDblClick(event: MouseEvent): void {\n    this.activate.emit({\n      type: 'dblclick',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetCell = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetCell) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        group: this.group,\n        rowHeight: this.rowHeight,\n        column: this.column,\n        value: this.value,\n        cellElement: this._element\n      });\n    }\n  }\n\n  onCheckboxChange(event: any): void {\n    this.activate.emit({\n      type: 'checkbox',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element,\n      treeStatus: 'collapsed'\n    });\n  }\n\n  calcSortDir(sorts: any[]): any {\n    if (!sorts) {\n      return;\n    }\n\n    const sort = sorts.find((s: any) => {\n      return s.prop === this.column.prop;\n    });\n\n    if (sort) {\n      return sort.dir;\n    }\n  }\n\n  stripHtml(html: string): string {\n    if (!html.replace) {\n      return html;\n    }\n    return html.replace(/<\\/?[^>]+(>|$)/g, '');\n  }\n\n  onTreeAction() {\n    this.treeAction.emit(this.row);\n  }\n\n  calcLeftMargin(column: any, row: any) {\n    const levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\n    return column.isTreeColumn ? row.level * levelIndent : 0;\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-datatable-group-header-template]'\n})\nexport class DatatableGroupHeaderTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DatatableGroupHeaderTemplateDirective } from './body-group-header-template.directive';\n\n@Directive({ selector: 'ngx-datatable-group-header' })\nexport class DatatableGroupHeaderDirective {\n  /**\n   * Row height is required when virtual scroll is enabled.\n   */\n  @Input() rowHeight: number | ((group?: any, index?: number) => number) = 0;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DatatableGroupHeaderTemplateDirective, { read: TemplateRef, static: true })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n\n  /**\n   * Track toggling of group visibility\n   */\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Toggle the expansion of a group\n   */\n  toggleExpandGroup(group: any): void {\n    this.toggle.emit({\n      type: 'group',\n      value: group\n    });\n  }\n\n  /**\n   * Expand all groups\n   */\n  expandAllGroups(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n\n  /**\n   * Collapse all groups\n   */\n  collapseAllGroups(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  DoCheck,\n  ChangeDetectionStrategy,\n  KeyValueDiffer,\n  ChangeDetectorRef,\n  KeyValueDiffers\n} from '@angular/core';\n\n@Component({\n  selector: 'datatable-row-wrapper',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div *ngIf=\"groupHeader && groupHeader.template\" class=\"datatable-group-header\" [ngStyle]=\"getGroupHeaderStyle()\">\n      <ng-template\n        *ngIf=\"groupHeader && groupHeader.template\"\n        [ngTemplateOutlet]=\"groupHeader.template\"\n        [ngTemplateOutletContext]=\"groupContext\"\n      >\n      </ng-template>\n    </div>\n    <ng-content *ngIf=\"(groupHeader && groupHeader.template && expanded) || !groupHeader || !groupHeader.template\">\n    </ng-content>\n    <div\n      *ngIf=\"rowDetail && rowDetail.template && expanded\"\n      [style.height.px]=\"detailRowHeight\"\n      class=\"datatable-row-detail\"\n    >\n      <ng-template\n        *ngIf=\"rowDetail && rowDetail.template\"\n        [ngTemplateOutlet]=\"rowDetail.template\"\n        [ngTemplateOutletContext]=\"rowContext\"\n      >\n      </ng-template>\n    </div>\n  `,\n  host: {\n    class: 'datatable-row-wrapper'\n  }\n})\nexport class DataTableRowWrapperComponent implements DoCheck {\n  @Input() innerWidth: number;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() offsetX: number;\n  @Input() detailRowHeight: any;\n  @Input() row: any;\n  @Input() groupedRows: any;\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n\n  @Input() set rowIndex(val: number) {\n    this._rowIndex = val;\n    this.rowContext.rowIndex = val;\n    this.groupContext.rowIndex = val;\n    this.cd.markForCheck();\n  }\n\n  get rowIndex(): number {\n    return this._rowIndex;\n  }\n\n  @Input() set expanded(val: boolean) {\n    this._expanded = val;\n    this.groupContext.expanded = val;\n    this.rowContext.expanded = val;\n    this.cd.markForCheck();\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  groupContext: any;\n  rowContext: any;\n\n  private rowDiffer: KeyValueDiffer<{}, {}>;\n  private _expanded: boolean = false;\n  private _rowIndex: number;\n\n  constructor(private cd: ChangeDetectorRef, private differs: KeyValueDiffers) {\n    this.groupContext = {\n      group: this.row,\n      expanded: this.expanded,\n      rowIndex: this.rowIndex\n    };\n\n    this.rowContext = {\n      row: this.row,\n      expanded: this.expanded,\n      rowIndex: this.rowIndex\n    };\n\n    this.rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this.rowDiffer.diff(this.row)) {\n      this.rowContext.row = this.row;\n      this.groupContext.group = this.row;\n      this.cd.markForCheck();\n    }\n  }\n\n  @HostListener('contextmenu', ['$event'])\n  onContextmenu($event: MouseEvent): void {\n    this.rowContextmenu.emit({ event: $event, row: this.row });\n  }\n\n  getGroupHeaderStyle(): any {\n    const styles = {};\n\n    styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\n    styles['backface-visibility'] = 'hidden';\n    styles['width'] = this.innerWidth;\n\n    return styles;\n  }\n}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ElementRef,\n  Output,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  EventEmitter,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  DoCheck,\n  SkipSelf\n} from '@angular/core';\n\nimport { TreeStatus } from './body-cell.component';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { Keys } from '../../utils/keys';\nimport { ScrollbarHelper } from '../../services/scrollbar-helper.service';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body-row',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div\n      *ngFor=\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\"\n      class=\"datatable-row-{{ colGroup.type }} datatable-row-group\"\n      [ngStyle]=\"_groupStyles[colGroup.type]\"\n    >\n      <datatable-body-cell\n        role=\"cell\"\n        *ngFor=\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\"\n        tabindex=\"-1\"\n        [row]=\"row\"\n        [group]=\"group\"\n        [expanded]=\"expanded\"\n        [isSelected]=\"isSelected\"\n        [rowIndex]=\"rowIndex\"\n        [column]=\"column\"\n        [rowHeight]=\"rowHeight\"\n        [displayCheck]=\"displayCheck\"\n        [treeStatus]=\"treeStatus\"\n        (activate)=\"onActivate($event, ii)\"\n        (treeAction)=\"onTreeAction()\"\n      >\n      </datatable-body-cell>\n    </div>\n  `\n})\nexport class DataTableBodyRowComponent implements DoCheck {\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    this.recalculateColumns(val);\n    this.buildStylesByGroup();\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set innerWidth(val: number) {\n    if (this._columns) {\n      const colByPin = columnsByPin(this._columns);\n      this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n    }\n\n    this._innerWidth = val;\n    this.recalculateColumns();\n    this.buildStylesByGroup();\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() expanded: boolean;\n  @Input() rowClass: any;\n  @Input() row: any;\n  @Input() group: any;\n  @Input() isSelected: boolean;\n  @Input() rowIndex: number;\n  @Input() displayCheck: any;\n  @Input() treeStatus: TreeStatus = 'collapsed';\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.buildStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @HostBinding('class')\n  get cssClass() {\n    let cls = 'datatable-body-row';\n    if (this.isSelected) {\n      cls += ' active';\n    }\n    if (this.rowIndex % 2 !== 0) {\n      cls += ' datatable-row-odd';\n    }\n    if (this.rowIndex % 2 === 0) {\n      cls += ' datatable-row-even';\n    }\n\n    if (this.rowClass) {\n      const res = this.rowClass(this.row);\n      if (typeof res === 'string') {\n        cls += ` ${res}`;\n      } else if (typeof res === 'object') {\n        const keys = Object.keys(res);\n        for (const k of keys) {\n          if (res[k] === true) {\n            cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    return cls;\n  }\n\n  @HostBinding('style.height.px')\n  @Input()\n  rowHeight: number;\n\n  @HostBinding('style.width.px')\n  get columnsTotalWidths(): string {\n    // hack by XIP\n    return this._innerWidth.toString();\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  _element: any;\n  _columnGroupWidths: any;\n  _columnsByPin: any;\n  _offsetX: number;\n  _columns: any[];\n  _innerWidth: number;\n  _groupStyles: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private _rowDiffer: KeyValueDiffer<{}, {}>;\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef\n  ) {\n    this._element = element.nativeElement;\n    this._rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this._rowDiffer.diff(this.row)) {\n      this.cd.markForCheck();\n    }\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  buildStylesByGroup() {\n    this._groupStyles.left = this.calcStylesByGroup('left');\n    this._groupStyles.center = this.calcStylesByGroup('center');\n    this._groupStyles.right = this.calcStylesByGroup('right');\n    this.cd.markForCheck();\n  }\n\n  calcStylesByGroup(group: string) {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  onActivate(event: any, index: number): void {\n    event.cellIndex = index;\n    event.rowElement = this._element;\n    this.activate.emit(event);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetRow = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetRow) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        rowElement: this._element\n      });\n    }\n  }\n\n  @HostListener('mouseenter', ['$event'])\n  onMouseenter(event: any): void {\n    this.activate.emit({\n      type: 'mouseenter',\n      event,\n      row: this.row,\n      rowElement: this._element\n    });\n  }\n\n  recalculateColumns(val: any[] = this.columns): void {\n    this._columns = val;\n    const colsByPin = columnsByPin(this._columns);\n    this._columnsByPin = columnsByPinArr(this._columns);\n    this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n  }\n\n  onTreeAction() {\n    this.treeAction.emit();\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ScrollerComponent } from './scroller.component';\nimport { SelectionType } from '../../types/selection.type';\nimport { columnsByPin, columnGroupWidths } from '../../utils/column';\nimport { RowHeightCache } from '../../utils/row-height-cache';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body',\n  template: `\n    <datatable-progress *ngIf=\"loadingIndicator\"> </datatable-progress>\n    <datatable-selection\n      #selector\n      [selected]=\"selected\"\n      [rows]=\"rows\"\n      [selectCheck]=\"selectCheck\"\n      [selectEnabled]=\"selectEnabled\"\n      [selectionType]=\"selectionType\"\n      [rowIdentity]=\"rowIdentity\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n    >\n      <datatable-scroller\n        *ngIf=\"rows?.length\"\n        [scrollbarV]=\"scrollbarV\"\n        [scrollbarH]=\"scrollbarH\"\n        [scrollHeight]=\"scrollHeight\"\n        [scrollWidth]=\"columnGroupWidths?.total\"\n        (scroll)=\"onBodyScroll($event)\"\n      >\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'top'\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n        <datatable-row-wrapper\n          [groupedRows]=\"groupedRows\"\n          *ngFor=\"let group of temp; let i = index; trackBy: rowTrackingFn\"\n          [innerWidth]=\"innerWidth\"\n          [ngStyle]=\"getRowsStyles(group)\"\n          [rowDetail]=\"rowDetail\"\n          [groupHeader]=\"groupHeader\"\n          [offsetX]=\"offsetX\"\n          [detailRowHeight]=\"getDetailRowHeight(group && group[i], i)\"\n          [row]=\"group\"\n          [expanded]=\"getRowExpanded(group)\"\n          [rowIndex]=\"getRowIndex(group && group[i])\"\n          (rowContextmenu)=\"rowContextmenu.emit($event)\"\n        >\n          <datatable-body-row\n            role=\"row\"\n            *ngIf=\"!groupedRows; else groupedRowsTemplate\"\n            tabindex=\"-1\"\n            [isSelected]=\"selector.getRowSelected(group)\"\n            [innerWidth]=\"innerWidth\"\n            [offsetX]=\"offsetX\"\n            [columns]=\"columns\"\n            [rowHeight]=\"getRowHeight(group)\"\n            [row]=\"group\"\n            [rowIndex]=\"getRowIndex(group)\"\n            [expanded]=\"getRowExpanded(group)\"\n            [rowClass]=\"rowClass\"\n            [displayCheck]=\"displayCheck\"\n            [treeStatus]=\"group && group.treeStatus\"\n            (treeAction)=\"onTreeAction(group)\"\n            (activate)=\"selector.onActivate($event, indexes.first + i)\"\n          >\n          </datatable-body-row>\n          <ng-template #groupedRowsTemplate>\n            <datatable-body-row\n              role=\"row\"\n              *ngFor=\"let row of group.value; let i = index; trackBy: rowTrackingFn\"\n              tabindex=\"-1\"\n              [isSelected]=\"selector.getRowSelected(row)\"\n              [innerWidth]=\"innerWidth\"\n              [offsetX]=\"offsetX\"\n              [columns]=\"columns\"\n              [rowHeight]=\"getRowHeight(row)\"\n              [row]=\"row\"\n              [group]=\"group.value\"\n              [rowIndex]=\"getRowIndex(row)\"\n              [expanded]=\"getRowExpanded(row)\"\n              [rowClass]=\"rowClass\"\n              (activate)=\"selector.onActivate($event, i)\"\n            >\n            </datatable-body-row>\n          </ng-template>\n        </datatable-row-wrapper>\n        <datatable-summary-row\n          role=\"row\"\n          *ngIf=\"summaryRow && summaryPosition === 'bottom'\"\n          [ngStyle]=\"getBottomSummaryRowStyles()\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n      </datatable-scroller>\n      <div class=\"empty-row\" *ngIf=\"!rows?.length && !loadingIndicator\" [innerHTML]=\"emptyMessage\"></div>\n    </datatable-selection>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'datatable-body'\n  }\n})\nexport class DataTableBodyComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean;\n  @Input() scrollbarH: boolean;\n  @Input() loadingIndicator: boolean;\n  @Input() externalPaging: boolean;\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number);\n  @Input() offsetX: number;\n  @Input() emptyMessage: string;\n  @Input() selectionType: SelectionType;\n  @Input() selected: any[] = [];\n  @Input() rowIdentity: any;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() selectCheck: any;\n  @Input() displayCheck: any;\n  @Input() trackByProp: string;\n  @Input() rowClass: any;\n  @Input() groupedRows: any;\n  @Input() groupExpansionDefault: boolean;\n  @Input() innerWidth: number;\n  @Input() groupRowsBy: string;\n  @Input() virtualization: boolean;\n  @Input() summaryRow: boolean;\n  @Input() summaryPosition: string;\n  @Input() summaryHeight: number;\n\n  @Input() set pageSize(val: number) {\n    this._pageSize = val;\n    this.recalcLayout();\n  }\n\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  @Input() set rows(val: any[]) {\n    this._rows = val;\n    this.recalcLayout();\n  }\n\n  get rows(): any[] {\n    return this._rows;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    const colsByPin = columnsByPin(val);\n    this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set offset(val: number) {\n    this._offset = val;\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) this.recalcLayout();\n  }\n\n  get offset(): number {\n    return this._offset;\n  }\n\n  @Input() set rowCount(val: number) {\n    this._rowCount = val;\n    this.recalcLayout();\n  }\n\n  get rowCount(): number {\n    return this._rowCount;\n  }\n\n  @HostBinding('style.width')\n  get bodyWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    } else {\n      return '100%';\n    }\n  }\n\n  @Input()\n  @HostBinding('style.height')\n  set bodyHeight(val) {\n    if (this.scrollbarV) {\n      this._bodyHeight = val + 'px';\n    } else {\n      this._bodyHeight = 'auto';\n    }\n\n    this.recalcLayout();\n  }\n\n  get bodyHeight() {\n    return this._bodyHeight;\n  }\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n  @Output() page: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() detailToggle: EventEmitter<any> = new EventEmitter();\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(ScrollerComponent) scroller: ScrollerComponent;\n\n  /**\n   * Returns if selection is enabled.\n   */\n  get selectEnabled(): boolean {\n    return !!this.selectionType;\n  }\n\n  /**\n   * Property that would calculate the height of scroll bar\n   * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n   * calculate scroll height automatically (as height will be undefined).\n   */\n  get scrollHeight(): number | undefined {\n    if (this.scrollbarV && this.virtualization && this.rowCount) {\n      return this.rowHeightsCache.query(this.rowCount - 1);\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n\n  rowHeightsCache: RowHeightCache = new RowHeightCache();\n  temp: any[] = [];\n  offsetY = 0;\n  indexes: any = {};\n  columnGroupWidths: any;\n  columnGroupWidthsWithoutGroup: any;\n  rowTrackingFn: any;\n  listener: any;\n  rowIndexes: any = new WeakMap<any, string>();\n  rowExpansions: any[] = [];\n\n  _rows: any[];\n  _bodyHeight: any;\n  _columns: any[];\n  _rowCount: number;\n  _offset: number;\n  _pageSize: number;\n\n  /**\n   * Creates an instance of DataTableBodyComponent.\n   */\n  constructor(private cd: ChangeDetectorRef) {\n    // declare fn here so we can get access to the `this` property\n    this.rowTrackingFn = (index: number, row: any): any => {\n      const idx = this.getRowIndex(row);\n      if (this.trackByProp) {\n        return row[this.trackByProp];\n      } else {\n        return idx;\n      }\n    };\n  }\n\n  /**\n   * Called after the constructor, initializing input properties\n   */\n  ngOnInit(): void {\n    if (this.rowDetail) {\n      this.listener = this.rowDetail.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'row') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n\n    if (this.groupHeader) {\n      this.listener = this.groupHeader.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'group') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Called once, before the instance is destroyed.\n   */\n  ngOnDestroy(): void {\n    if (this.rowDetail || this.groupHeader) {\n      this.listener.unsubscribe();\n    }\n  }\n\n  /**\n   * Updates the Y offset given a new offset.\n   */\n  updateOffsetY(offset?: number): void {\n    // scroller is missing on empty table\n    if (!this.scroller) {\n      return;\n    }\n\n    if (this.scrollbarV && this.virtualization && offset) {\n      // First get the row Index that we need to move to.\n      const rowIndex = this.pageSize * offset;\n      offset = this.rowHeightsCache.query(rowIndex - 1);\n    } else if (this.scrollbarV && !this.virtualization) {\n      offset = 0;\n    }\n\n    this.scroller.setOffset(offset || 0);\n  }\n\n  /**\n   * Body was scrolled, this is mainly useful for\n   * when a user is server-side pagination via virtual scroll.\n   */\n  onBodyScroll(event: any): void {\n    const scrollYPos: number = event.scrollYPos;\n    const scrollXPos: number = event.scrollXPos;\n\n    // if scroll change, trigger update\n    // this is mainly used for header cell positions\n    if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n      this.scroll.emit({\n        offsetY: scrollYPos,\n        offsetX: scrollXPos\n      });\n    }\n\n    this.offsetY = scrollYPos;\n    this.offsetX = scrollXPos;\n\n    this.updateIndexes();\n    this.updatePage(event.direction);\n    this.updateRows();\n  }\n\n  /**\n   * Updates the page given a direction.\n   */\n  updatePage(direction: string): void {\n    let offset = this.indexes.first / this.pageSize;\n\n    if (direction === 'up') {\n      offset = Math.ceil(offset);\n    } else if (direction === 'down') {\n      offset = Math.floor(offset);\n    }\n\n    if (direction !== undefined && !isNaN(offset)) {\n      this.page.emit({ offset });\n    }\n  }\n\n  /**\n   * Updates the rows in the view port\n   */\n  updateRows(): void {\n    const { first, last } = this.indexes;\n    let rowIndex = first;\n    let idx = 0;\n    const temp: any[] = [];\n\n    // if grouprowsby has been specified treat row paging\n    // parameters as group paging parameters ie if limit 10 has been\n    // specified treat it as 10 groups rather than 10 rows\n    if (this.groupedRows) {\n      let maxRowsPerGroup = 3;\n      // if there is only one group set the maximum number of\n      // rows per group the same as the total number of rows\n      if (this.groupedRows.length === 1) {\n        maxRowsPerGroup = this.groupedRows[0].value.length;\n      }\n\n      while (rowIndex < last && rowIndex < this.groupedRows.length) {\n        // Add the groups into this page\n        const group = this.groupedRows[rowIndex];\n        this.rowIndexes.set(group, rowIndex);\n\n        if (group.value) {\n          // add indexes for each group item\n          group.value.forEach((g: any, i: number) => {\n            const _idx = `${rowIndex}-${i}`;\n            this.rowIndexes.set(g, _idx);\n          });\n        }\n        temp[idx] = group;\n        idx++;\n\n        // Group index in this context\n        rowIndex++;\n      }\n    } else {\n      while (rowIndex < last && rowIndex < this.rowCount) {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n          // add indexes for each row\n          this.rowIndexes.set(row, rowIndex);\n          temp[idx] = row;\n        }\n\n        idx++;\n        rowIndex++;\n      }\n    }\n\n    this.temp = temp;\n  }\n\n  /**\n   * Get the row height\n   */\n  getRowHeight(row: any): number {\n    // if its a function return it\n    if (typeof this.rowHeight === 'function') {\n      return this.rowHeight(row);\n    }\n\n    return this.rowHeight as number;\n  }\n\n  /**\n   * @param group the group with all rows\n   */\n  getGroupHeight(group: any): number {\n    let rowHeight = 0;\n\n    if (group.value) {\n      for (let index = 0; index < group.value.length; index++) {\n        rowHeight += this.getRowAndDetailHeight(group.value[index]);\n      }\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Calculate row height based on the expanded state of the row.\n   */\n  getRowAndDetailHeight(row: any): number {\n    let rowHeight = this.getRowHeight(row);\n    const expanded = this.getRowExpanded(row);\n\n    // Adding detail row height if its expanded.\n    if (expanded) {\n      rowHeight += this.getDetailRowHeight(row);\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Get the height of the detail row.\n   */\n  getDetailRowHeight = (row?: any, index?: any): number => {\n    if (!this.rowDetail) {\n      return 0;\n    }\n    const rowHeight = this.rowDetail.rowHeight;\n    return typeof rowHeight === 'function' ? rowHeight(row, index) : (rowHeight as number);\n  };\n\n  /**\n   * Calculates the styles for the row so that the rows can be moved in 2D space\n   * during virtual scroll inside the DOM.   In the below case the Y position is\n   * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n   * 100 px then following styles are generated:\n   *\n   * transform: translate3d(0px, 0px, 0px);    ->  row0\n   * transform: translate3d(0px, 30px, 0px);   ->  row1\n   * transform: translate3d(0px, 130px, 0px);  ->  row2\n   *\n   * Row heights have to be calculated based on the row heights cache as we wont\n   * be able to determine which row is of what height before hand.  In the above\n   * case the positionY of the translate3d for row2 would be the sum of all the\n   * heights of the rows before it (i.e. row0 and row1).\n   *\n   * @param rows the row that needs to be placed in the 2D space.\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getRowsStyles(rows: any): any {\n    const styles: any = {};\n\n    // only add styles for the group if there is a group\n    if (this.groupedRows) {\n      styles.width = this.columnGroupWidths.total;\n    }\n\n    if (this.scrollbarV && this.virtualization) {\n      let idx = 0;\n\n      if (this.groupedRows) {\n        // Get the latest row rowindex in a group\n        const row = rows[rows.length - 1];\n        idx = row ? this.getRowIndex(row) : 0;\n      } else {\n        idx = this.getRowIndex(rows);\n      }\n\n      // const pos = idx * rowHeight;\n      // The position of this row would be the sum of all row heights\n      // until the previous row position.\n      const pos = this.rowHeightsCache.query(idx - 1);\n\n      translateXY(styles, 0, pos);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Calculate bottom summary row offset for scrollbar mode.\n   * For more information about cache and offset calculation\n   * see description for `getRowsStyles` method\n   *\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getBottomSummaryRowStyles(): any {\n    if (!this.scrollbarV || !this.rows || !this.rows.length) {\n      return null;\n    }\n\n    const styles = { position: 'absolute' };\n    const pos = this.rowHeightsCache.query(this.rows.length - 1);\n\n    translateXY(styles, 0, pos);\n\n    return styles;\n  }\n\n  /**\n   * Hides the loading indicator\n   */\n  hideIndicator(): void {\n    setTimeout(() => (this.loadingIndicator = false), 500);\n  }\n\n  /**\n   * Updates the index of the rows in the viewport\n   */\n  updateIndexes(): void {\n    let first = 0;\n    let last = 0;\n\n    if (this.scrollbarV) {\n      if (this.virtualization) {\n        // Calculation of the first and last indexes will be based on where the\n        // scrollY position would be at.  The last index would be the one\n        // that shows up inside the view port the last.\n        const height = parseInt(this.bodyHeight, 0);\n        first = this.rowHeightsCache.getRowIndex(this.offsetY);\n        last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n      } else {\n        // If virtual rows are not needed\n        // We render all in one go\n        first = 0;\n        last = this.rowCount;\n      }\n    } else {\n      // The server is handling paging and will pass an array that begins with the\n      // element at a specified offset.  first should always be 0 with external paging.\n      if (!this.externalPaging) {\n        first = Math.max(this.offset * this.pageSize, 0);\n      }\n      last = Math.min(first + this.pageSize, this.rowCount);\n    }\n\n    this.indexes = { first, last };\n  }\n\n  /**\n   * Refreshes the full Row Height cache.  Should be used\n   * when the entire row array state has changed.\n   */\n  refreshRowHeightCache(): void {\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) {\n      return;\n    }\n\n    // clear the previous row height cache if already present.\n    // this is useful during sorts, filters where the state of the\n    // rows array is changed.\n    this.rowHeightsCache.clearCache();\n\n    // Initialize the tree only if there are rows inside the tree.\n    if (this.rows && this.rows.length) {\n      const rowExpansions = new Set();\n      for (const row of this.rows) {\n        if (this.getRowExpanded(row)) {\n          rowExpansions.add(row);\n        }\n      }\n\n      this.rowHeightsCache.initCache({\n        rows: this.rows,\n        rowHeight: this.rowHeight,\n        detailRowHeight: this.getDetailRowHeight,\n        externalVirtual: this.scrollbarV && this.externalPaging,\n        rowCount: this.rowCount,\n        rowIndexes: this.rowIndexes,\n        rowExpansions\n      });\n    }\n  }\n\n  /**\n   * Gets the index for the view port\n   */\n  getAdjustedViewPortIndex(): number {\n    // Capture the row index of the first row that is visible on the viewport.\n    // If the scroll bar is just below the row which is highlighted then make that as the\n    // first index.\n    const viewPortFirstRowIndex = this.indexes.first;\n\n    if (this.scrollbarV && this.virtualization) {\n      const offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n      return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n    }\n\n    return viewPortFirstRowIndex;\n  }\n\n  /**\n   * Toggle the Expansion of the row i.e. if the row is expanded then it will\n   * collapse and vice versa.   Note that the expanded status is stored as\n   * a part of the row object itself as we have to preserve the expanded row\n   * status in case of sorting and filtering of the row set.\n   */\n  toggleRowExpansion(row: any): void {\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n    const rowExpandedIdx = this.getRowExpandedIdx(row, this.rowExpansions);\n    const expanded = rowExpandedIdx > -1;\n\n    // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n    if (this.scrollbarV && this.virtualization) {\n      const detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1);\n      // const idx = this.rowIndexes.get(row) || 0;\n      const idx = this.getRowIndex(row);\n      this.rowHeightsCache.update(idx, detailRowHeight);\n    }\n\n    // Update the toggled row and update thive nevere heights in the cache.\n    if (expanded) {\n      this.rowExpansions.splice(rowExpandedIdx, 1);\n    } else {\n      this.rowExpansions.push(row);\n    }\n\n    this.detailToggle.emit({\n      rows: [row],\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Expand/Collapse all the rows no matter what their state is.\n   */\n  toggleAllRows(expanded: boolean): void {\n    // clear prev expansions\n    this.rowExpansions = [];\n\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n\n    if (expanded) {\n      for (const row of this.rows) {\n        this.rowExpansions.push(row);\n      }\n    }\n\n    if (this.scrollbarV) {\n      // Refresh the full row heights cache since every row was affected.\n      this.recalcLayout();\n    }\n\n    // Emit all rows that have been expanded.\n    this.detailToggle.emit({\n      rows: this.rows,\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Recalculates the table\n   */\n  recalcLayout(): void {\n    this.refreshRowHeightCache();\n    this.updateIndexes();\n    this.updateRows();\n  }\n\n  /**\n   * Tracks the column\n   */\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  /**\n   * Gets the row pinning group styles\n   */\n  stylesByGroup(group: string) {\n    const widths = this.columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = offsetDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Returns if the row was expanded and set default row expansion when row expansion is empty\n   */\n  getRowExpanded(row: any): boolean {\n    if (this.rowExpansions.length === 0 && this.groupExpansionDefault) {\n      for (const group of this.groupedRows) {\n        this.rowExpansions.push(group);\n      }\n    }\n\n    return this.getRowExpandedIdx(row, this.rowExpansions) > -1;\n  }\n\n  getRowExpandedIdx(row: any, expanded: any[]): number {\n    if (!expanded || !expanded.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return expanded.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n\n  /**\n   * Gets the row index given a row\n   */\n  getRowIndex(row: any): number {\n    return this.rowIndexes.get(row) || 0;\n  }\n\n  onTreeAction(row: any) {\n    this.treeAction.emit({ row });\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-progress',\n  template: `\n    <div class=\"progress-linear\" role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressBarComponent {}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  Output,\n  EventEmitter,\n  Renderer2,\n  NgZone,\n  OnInit,\n  OnDestroy,\n  HostBinding,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { MouseEvent } from '../../events';\n\n@Component({\n  selector: 'datatable-scroller',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'datatable-scroll'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScrollerComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean = false;\n  @Input() scrollbarH: boolean = false;\n\n  @HostBinding('style.height.px')\n  @Input()\n  scrollHeight: number;\n\n  @HostBinding('style.width.px')\n  @Input()\n  scrollWidth: number;\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n\n  scrollYPos: number = 0;\n  scrollXPos: number = 0;\n  prevScrollYPos: number = 0;\n  prevScrollXPos: number = 0;\n  element: any;\n  parentElement: any;\n  onScrollListener: any;\n\n  private _scrollEventListener: any = null;\n\n  constructor(private ngZone: NgZone, element: ElementRef, private renderer: Renderer2) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // manual bind so we don't always listen\n    if (this.scrollbarV || this.scrollbarH) {\n      const renderer = this.renderer;\n      this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\n      this._scrollEventListener = this.onScrolled.bind(this);\n      this.parentElement.addEventListener('scroll', this._scrollEventListener);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._scrollEventListener) {\n      this.parentElement.removeEventListener('scroll', this._scrollEventListener);\n      this._scrollEventListener = null;\n    }\n  }\n\n  setOffset(offsetY: number): void {\n    if (this.parentElement) {\n      this.parentElement.scrollTop = offsetY;\n    }\n  }\n\n  onScrolled(event: MouseEvent): void {\n    const dom: Element = <Element>event.currentTarget;\n    requestAnimationFrame(() => {\n      this.scrollYPos = dom.scrollTop;\n      this.scrollXPos = dom.scrollLeft;\n      this.updateOffset();\n    });\n  }\n\n  updateOffset(): void {\n    let direction: string;\n    if (this.scrollYPos < this.prevScrollYPos) {\n      direction = 'down';\n    } else if (this.scrollYPos > this.prevScrollYPos) {\n      direction = 'up';\n    }\n\n    this.scroll.emit({\n      direction,\n      scrollYPos: this.scrollYPos,\n      scrollXPos: this.scrollXPos\n    });\n\n    this.prevScrollYPos = this.scrollYPos;\n    this.prevScrollXPos = this.scrollXPos;\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { SelectionType } from '../../types/selection.type';\nimport { selectRowsBetween, selectRows } from '../../utils/selection';\nimport { Keys } from '../../utils/keys';\n\nexport interface Model {\n  type: string;\n  event: MouseEvent | KeyboardEvent;\n  row: any;\n  rowElement: any;\n  cellElement: any;\n  cellIndex: number;\n}\n\n@Component({\n  selector: 'datatable-selection',\n  template: ` <ng-content></ng-content> `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableSelectionComponent {\n  @Input() rows: any[];\n  @Input() selected: any[];\n  @Input() selectEnabled: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() rowIdentity: any;\n  @Input() selectCheck: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  prevIndex: number;\n\n  selectRow(event: KeyboardEvent | MouseEvent, index: number, row: any): void {\n    if (!this.selectEnabled) return;\n\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const multi = this.selectionType === SelectionType.multi;\n    const multiClick = this.selectionType === SelectionType.multiClick;\n    let selected: any[] = [];\n\n    if (multi || chkbox || multiClick) {\n      if (event.shiftKey) {\n        selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\n      } else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\n        selected = selectRows([...this.selected], row, this.getRowSelectedIdx.bind(this));\n      } else {\n        selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n      }\n    } else {\n      selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n    }\n\n    if (typeof this.selectCheck === 'function') {\n      selected = selected.filter(this.selectCheck.bind(this));\n    }\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n\n    this.prevIndex = index;\n\n    this.select.emit({\n      selected\n    });\n  }\n\n  onActivate(model: Model, index: number): void {\n    const { type, event, row } = model;\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\n\n    if (select) {\n      this.selectRow(event, index, row);\n    } else if (type === 'keydown') {\n      if ((<KeyboardEvent>event).keyCode === Keys.return) {\n        this.selectRow(event, index, row);\n      } else {\n        this.onKeyboardFocus(model);\n      }\n    }\n    this.activate.emit(model);\n  }\n\n  onKeyboardFocus(model: Model): void {\n    const { keyCode } = <KeyboardEvent>model.event;\n    const shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\n\n    if (shouldFocus) {\n      const isCellSelection = this.selectionType === SelectionType.cell;\n\n      if (!model.cellElement || !isCellSelection) {\n        this.focusRow(model.rowElement, keyCode);\n      } else if (isCellSelection) {\n        this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\n      }\n    }\n  }\n\n  focusRow(rowElement: any, keyCode: number): void {\n    const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n    if (nextRowElement) nextRowElement.focus();\n  }\n\n  getPrevNextRow(rowElement: any, keyCode: number): any {\n    const parentElement = rowElement.parentElement;\n\n    if (parentElement) {\n      let focusElement: HTMLElement;\n      if (keyCode === Keys.up) {\n        focusElement = parentElement.previousElementSibling;\n      } else if (keyCode === Keys.down) {\n        focusElement = parentElement.nextElementSibling;\n      }\n\n      if (focusElement && focusElement.children.length) {\n        return focusElement.children[0];\n      }\n    }\n  }\n\n  focusCell(cellElement: any, rowElement: any, keyCode: number, cellIndex: number): void {\n    let nextCellElement: HTMLElement;\n\n    if (keyCode === Keys.left) {\n      nextCellElement = cellElement.previousElementSibling;\n    } else if (keyCode === Keys.right) {\n      nextCellElement = cellElement.nextElementSibling;\n    } else if (keyCode === Keys.up || keyCode === Keys.down) {\n      const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n      if (nextRowElement) {\n        const children = nextRowElement.getElementsByClassName('datatable-body-cell');\n        if (children.length) nextCellElement = children[cellIndex];\n      }\n    }\n\n    if (nextCellElement) nextCellElement.focus();\n  }\n\n  getRowSelected(row: any): boolean {\n    return this.getRowSelectedIdx(row, this.selected) > -1;\n  }\n\n  getRowSelectedIdx(row: any, selected: any[]): number {\n    if (!selected || !selected.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return selected.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n}\n","import { Component, Input, OnChanges, PipeTransform, TemplateRef } from '@angular/core';\n\nexport interface ISummaryColumn {\n  summaryFunc?: (cells: any[]) => any;\n  summaryTemplate?: TemplateRef<any>;\n\n  prop: string;\n  pipe?: PipeTransform;\n}\n\nfunction defaultSumFunc(cells: any[]): any {\n  const cellsWithValues = cells.filter(cell => !!cell);\n\n  if (!cellsWithValues.length) {\n    return null;\n  }\n  if (cellsWithValues.some(cell => typeof cell !== 'number')) {\n    return null;\n  }\n\n  return cellsWithValues.reduce((res, cell) => res + cell);\n}\n\nfunction noopSumFunc(cells: any[]): void {\n  return null;\n}\n\n@Component({\n  selector: 'datatable-summary-row',\n  template: `\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  `,\n  host: {\n    class: 'datatable-summary-row'\n  }\n})\nexport class DataTableSummaryRowComponent implements OnChanges {\n  @Input() rows: any[];\n  @Input() columns: ISummaryColumn[];\n\n  @Input() rowHeight: number;\n  @Input() offsetX: number;\n  @Input() innerWidth: number;\n\n  _internalColumns: ISummaryColumn[];\n  summaryRow: any = {};\n\n  ngOnChanges() {\n    if (!this.columns || !this.rows) {\n      return;\n    }\n    this.updateInternalColumns();\n    this.updateValues();\n  }\n\n  private updateInternalColumns() {\n    this._internalColumns = this.columns.map(col => ({\n      ...col,\n      cellTemplate: col.summaryTemplate\n    }));\n  }\n\n  private updateValues() {\n    this.summaryRow = {};\n\n    this.columns\n      .filter(col => !col.summaryTemplate)\n      .forEach(col => {\n        const cellsFromSingleColumn = this.rows.map(row => row[col.prop]);\n        const sumFunc = this.getSummaryFunction(col);\n\n        this.summaryRow[col.prop] = col.pipe\n          ? col.pipe.transform(sumFunc(cellsFromSingleColumn))\n          : sumFunc(cellsFromSingleColumn);\n      });\n  }\n\n  private getSummaryFunction(column: ISummaryColumn): (a: any[]) => any {\n    if (column.summaryFunc === undefined) {\n      return defaultSumFunc;\n    } else if (column.summaryFunc === null) {\n      return noopSumFunc;\n    } else {\n      return column.summaryFunc;\n    }\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-cell-template]' })\nexport class DataTableColumnCellDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-header-template]' })\nexport class DataTableColumnHeaderDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef, ContentChild, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { DataTableColumnHeaderDirective } from './column-header.directive';\nimport { DataTableColumnCellDirective } from './column-cell.directive';\nimport { DataTableColumnCellTreeToggle } from './tree.directive';\nimport { ColumnChangesService } from '../../services/column-changes.service';\nimport { TableColumnProp } from '../../types/table-column.type';\n\n@Directive({ selector: 'ngx-datatable-column' })\nexport class DataTableColumnDirective implements OnChanges {\n  @Input() name: string;\n  @Input() prop: TableColumnProp;\n  @Input() frozenLeft: any;\n  @Input() frozenRight: any;\n  @Input() flexGrow: number;\n  @Input() resizeable: boolean;\n  @Input() comparator: any;\n  @Input() pipe: any;\n  @Input() sortable: boolean;\n  @Input() draggable: boolean;\n  @Input() canAutoResize: boolean;\n  @Input() minWidth: number;\n  @Input() width: number;\n  @Input() maxWidth: number;\n  @Input() checkboxable: boolean;\n  @Input() headerCheckboxable: boolean;\n  @Input() headerClass: string | ((data: any) => string | any);\n  @Input() cellClass: string | ((data: any) => string | any);\n  @Input() isTreeColumn: boolean;\n  @Input() treeLevelIndent: number;\n  @Input() summaryFunc: (cells: any[]) => any;\n  @Input() summaryTemplate: TemplateRef<any>;\n\n  @Input('cellTemplate')\n  _cellTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnCellDirective, { read: TemplateRef, static: true })\n  _cellTemplateQuery: TemplateRef<any>;\n\n  get cellTemplate(): TemplateRef<any> {\n    return this._cellTemplateInput || this._cellTemplateQuery;\n  }\n\n  @Input('headerTemplate')\n  _headerTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnHeaderDirective, { read: TemplateRef, static: true })\n  _headerTemplateQuery: TemplateRef<any>;\n\n  get headerTemplate(): TemplateRef<any> {\n    return this._headerTemplateInput || this._headerTemplateQuery;\n  }\n\n  @Input('treeToggleTemplate')\n  _treeToggleTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnCellTreeToggle, { read: TemplateRef, static: true })\n  _treeToggleTemplateQuery: TemplateRef<any>;\n\n  get treeToggleTemplate(): TemplateRef<any> {\n    return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\n  }\n\n  private isFirstChange = true;\n\n  constructor(private columnChangesService: ColumnChangesService) {}\n\n  ngOnChanges() {\n    if (this.isFirstChange) {\n      this.isFirstChange = false;\n    } else {\n      this.columnChangesService.onInputChange();\n    }\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-tree-toggle]' })\nexport class DataTableColumnCellTreeToggle {\n  constructor(public template: TemplateRef<any>) {}\n}\n","<div role=\"table\" visibilityObserver (visible)=\"recalculate()\">\n  <datatable-header\n    role=\"rowgroup\"\n    *ngIf=\"headerHeight\"\n    [sorts]=\"sorts\"\n    [sortType]=\"sortType\"\n    [scrollbarH]=\"scrollbarH\"\n    [innerWidth]=\"_innerWidth\"\n    [offsetX]=\"_offsetX | async\"\n    [dealsWithGroup]=\"groupedRows !== undefined\"\n    [columns]=\"_internalColumns\"\n    [headerHeight]=\"headerHeight\"\n    [reorderable]=\"reorderable\"\n    [targetMarkerTemplate]=\"targetMarkerTemplate\"\n    [sortAscendingIcon]=\"cssClasses.sortAscending\"\n    [sortDescendingIcon]=\"cssClasses.sortDescending\"\n    [sortUnsetIcon]=\"cssClasses.sortUnset\"\n    [allRowsSelected]=\"allRowsSelected\"\n    [selectionType]=\"selectionType\"\n    (sort)=\"onColumnSort($event)\"\n    (resize)=\"onColumnResize($event)\"\n    (reorder)=\"onColumnReorder($event)\"\n    (select)=\"onHeaderSelect($event)\"\n    (columnContextmenu)=\"onColumnContextmenu($event)\"\n  >\n  </datatable-header>\n  <datatable-body\n    role=\"rowgroup\"\n    [groupRowsBy]=\"groupRowsBy\"\n    [groupedRows]=\"groupedRows\"\n    [rows]=\"_internalRows\"\n    [groupExpansionDefault]=\"groupExpansionDefault\"\n    [scrollbarV]=\"scrollbarV\"\n    [scrollbarH]=\"scrollbarH\"\n    [virtualization]=\"virtualization\"\n    [loadingIndicator]=\"loadingIndicator\"\n    [externalPaging]=\"externalPaging\"\n    [rowHeight]=\"rowHeight\"\n    [rowCount]=\"rowCount\"\n    [offset]=\"offset\"\n    [trackByProp]=\"trackByProp\"\n    [columns]=\"_internalColumns\"\n    [pageSize]=\"pageSize\"\n    [offsetX]=\"_offsetX | async\"\n    [rowDetail]=\"rowDetail\"\n    [groupHeader]=\"groupHeader\"\n    [selected]=\"selected\"\n    [innerWidth]=\"_innerWidth\"\n    [bodyHeight]=\"bodyHeight\"\n    [selectionType]=\"selectionType\"\n    [emptyMessage]=\"messages.emptyMessage\"\n    [rowIdentity]=\"rowIdentity\"\n    [rowClass]=\"rowClass\"\n    [selectCheck]=\"selectCheck\"\n    [displayCheck]=\"displayCheck\"\n    [summaryRow]=\"summaryRow\"\n    [summaryHeight]=\"summaryHeight\"\n    [summaryPosition]=\"summaryPosition\"\n    (page)=\"onBodyPage($event)\"\n    (activate)=\"activate.emit($event)\"\n    (rowContextmenu)=\"onRowContextmenu($event)\"\n    (select)=\"onBodySelect($event)\"\n    (scroll)=\"onBodyScroll($event)\"\n    (treeAction)=\"onTreeAction($event)\"\n  >\n  </datatable-body>\n  <datatable-footer\n    *ngIf=\"footerHeight\"\n    [rowCount]=\"rowCount\"\n    [pageSize]=\"pageSize\"\n    [offset]=\"offset\"\n    [footerHeight]=\"footerHeight\"\n    [footerTemplate]=\"footer\"\n    [totalMessage]=\"messages.totalMessage\"\n    [pagerLeftArrowIcon]=\"cssClasses.pagerLeftArrow\"\n    [pagerRightArrowIcon]=\"cssClasses.pagerRightArrow\"\n    [pagerPreviousIcon]=\"cssClasses.pagerPrevious\"\n    [selectedCount]=\"selected.length\"\n    [selectedMessage]=\"!!selectionType && messages.selectedMessage\"\n    [pagerNextIcon]=\"cssClasses.pagerNext\"\n    (page)=\"onFooterPage($event)\"\n  >\n  </datatable-footer>\n</div>\n","import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  ViewChild,\n  HostListener,\n  ContentChildren,\n  OnInit,\n  QueryList,\n  AfterViewInit,\n  HostBinding,\n  ContentChild,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  SkipSelf,\n  Optional,\n  Inject\n} from '@angular/core';\n\nimport { DatatableGroupHeaderDirective } from './body/body-group-header.directive';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { INgxDatatableConfig } from '../ngx-datatable.module';\nimport { groupRowsByParents, optionalGetterForProp } from '../utils/tree';\nimport { TableColumn } from '../types/table-column.type';\nimport { setColumnDefaults, translateTemplates } from '../utils/column-helper';\nimport { ColumnMode } from '../types/column-mode.type';\nimport { SelectionType } from '../types/selection.type';\nimport { SortType } from '../types/sort.type';\nimport { ContextmenuType } from '../types/contextmenu.type';\nimport { DataTableColumnDirective } from './columns/column.directive';\nimport { DatatableRowDetailDirective } from './row-detail/row-detail.directive';\nimport { DatatableFooterDirective } from './footer/footer.directive';\nimport { DataTableBodyComponent } from './body/body.component';\nimport { DataTableHeaderComponent } from './header/header.component';\nimport { ScrollbarHelper } from '../services/scrollbar-helper.service';\nimport { ColumnChangesService } from '../services/column-changes.service';\nimport { DimensionsHelper } from '../services/dimensions-helper.service';\nimport { throttleable } from '../utils/throttle';\nimport { forceFillColumnWidths, adjustColumnWidths } from '../utils/math';\nimport { sortRows } from '../utils/sort';\n\n@Component({\n  selector: 'ngx-datatable',\n  templateUrl: './datatable.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datatable.component.scss'],\n  host: {\n    class: 'ngx-datatable'\n  }\n})\nexport class DatatableComponent implements OnInit, DoCheck, AfterViewInit {\n  /**\n   * Template for the target marker of drag target columns.\n   */\n  @Input() targetMarkerTemplate: any;\n\n  /**\n   * Rows that are displayed in the table.\n   */\n  @Input() set rows(val: any) {\n    this._rows = val;\n\n    if (val) {\n      this._internalRows = [...val];\n    }\n\n    // auto sort on new updates\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(\n      this._internalRows,\n      optionalGetterForProp(this.treeFromRelation),\n      optionalGetterForProp(this.treeToRelation)\n    );\n\n    // recalculate sizes/etc\n    this.recalculate();\n\n    if (this._rows && this._groupRowsBy) {\n      // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\n      this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n    }\n\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Gets the rows.\n   */\n  get rows(): any {\n    return this._rows;\n  }\n\n  /**\n   * This attribute allows the user to set the name of the column to group the data with\n   */\n  @Input() set groupRowsBy(val: string) {\n    if (val) {\n      this._groupRowsBy = val;\n      if (this._rows && this._groupRowsBy) {\n        // cretes a new array with the data grouped\n        this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n      }\n    }\n  }\n\n  get groupRowsBy() {\n    return this._groupRowsBy;\n  }\n\n  /**\n   * This attribute allows the user to set a grouped array in the following format:\n   *  [\n   *    {groupid=1} [\n   *      {id=1 name=\"test1\"},\n   *      {id=2 name=\"test2\"},\n   *      {id=3 name=\"test3\"}\n   *    ]},\n   *    {groupid=2>[\n   *      {id=4 name=\"test4\"},\n   *      {id=5 name=\"test5\"},\n   *      {id=6 name=\"test6\"}\n   *    ]}\n   *  ]\n   */\n  @Input() groupedRows: any[];\n\n  /**\n   * Columns to be displayed.\n   */\n  @Input() set columns(val: TableColumn[]) {\n    if (val) {\n      this._internalColumns = [...val];\n      setColumnDefaults(this._internalColumns);\n      this.recalculateColumns();\n    }\n\n    this._columns = val;\n  }\n\n  /**\n   * Get the columns.\n   */\n  get columns(): TableColumn[] {\n    return this._columns;\n  }\n\n  /**\n   * List of row objects that should be\n   * represented as selected in the grid.\n   * Default value: `[]`\n   */\n  @Input() selected: any[] = [];\n\n  /**\n   * Enable vertical scrollbars\n   */\n  @Input() scrollbarV: boolean = false;\n\n  /**\n   * Enable horz scrollbars\n   */\n  @Input() scrollbarH: boolean = false;\n\n  /**\n   * The row height; which is necessary\n   * to calculate the height for the lazy rendering.\n   */\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number) = 30;\n\n  /**\n   * Type of column width distribution formula.\n   * Example: flex, force, standard\n   */\n  @Input() columnMode: ColumnMode | keyof typeof ColumnMode = ColumnMode.standard;\n\n  /**\n   * The minimum header height in pixels.\n   * Pass a falsey for no header\n   */\n  @Input() headerHeight: number = 30;\n\n  /**\n   * The minimum footer height in pixels.\n   * Pass falsey for no footer\n   */\n  @Input() footerHeight: number = 0;\n\n  /**\n   * If the table should use external paging\n   * otherwise its assumed that all data is preloaded.\n   */\n  @Input() externalPaging: boolean = false;\n\n  /**\n   * If the table should use external sorting or\n   * the built-in basic sorting.\n   */\n  @Input() externalSorting: boolean = false;\n\n  /**\n   * The page size to be shown.\n   * Default value: `undefined`\n   */\n  @Input() set limit(val: number | undefined) {\n    this._limit = val;\n\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n\n  /**\n   * Gets the limit.\n   */\n  get limit(): number | undefined {\n    return this._limit;\n  }\n\n  /**\n   * The total count of all rows.\n   * Default value: `0`\n   */\n  @Input() set count(val: number) {\n    this._count = val;\n\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n\n  /**\n   * Gets the count.\n   */\n  get count(): number {\n    return this._count;\n  }\n\n  /**\n   * The current offset ( page - 1 ) shown.\n   * Default value: `0`\n   */\n  @Input() set offset(val: number) {\n    this._offset = val;\n  }\n  get offset(): number {\n    return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\n  }\n\n  /**\n   * Show the linear loading bar.\n   * Default value: `false`\n   */\n  @Input() loadingIndicator: boolean = false;\n\n  /**\n   * Type of row selection. Options are:\n   *\n   *  - `single`\n   *  - `multi`\n   *  - `checkbox`\n   *  - `multiClick`\n   *  - `cell`\n   *\n   * For no selection pass a `falsey`.\n   * Default value: `undefined`\n   */\n  @Input() selectionType: SelectionType;\n\n  /**\n   * Enable/Disable ability to re-order columns\n   * by dragging them.\n   */\n  @Input() reorderable: boolean = true;\n\n  /**\n   * Swap columns on re-order columns or\n   * move them.\n   */\n  @Input() swapColumns: boolean = true;\n\n  /**\n   * The type of sorting\n   */\n  @Input() sortType: SortType = SortType.single;\n\n  /**\n   * Array of sorted columns by property and type.\n   * Default value: `[]`\n   */\n  @Input() sorts: any[] = [];\n\n  /**\n   * Css class overrides\n   */\n  @Input() cssClasses: any = {\n    sortAscending: 'datatable-icon-up',\n    sortDescending: 'datatable-icon-down',\n    sortUnset: 'datatable-icon-sort-unset',\n    pagerLeftArrow: 'datatable-icon-left',\n    pagerRightArrow: 'datatable-icon-right',\n    pagerPrevious: 'datatable-icon-prev',\n    pagerNext: 'datatable-icon-skip'\n  };\n\n  /**\n   * Message overrides for localization\n   *\n   * emptyMessage     [default] = 'No data to display'\n   * totalMessage     [default] = 'total'\n   * selectedMessage  [default] = 'selected'\n   */\n  @Input() messages: any = {\n    // Message to show when array is presented\n    // but contains no values\n    emptyMessage: 'No data to display',\n\n    // Footer total message\n    totalMessage: 'total',\n\n    // Footer selected message\n    selectedMessage: 'selected'\n  };\n\n  /**\n   * Row specific classes.\n   * Similar implementation to ngClass.\n   *\n   *  [rowClass]=\"'first second'\"\n   *  [rowClass]=\"{ 'first': true, 'second': true, 'third': false }\"\n   */\n  @Input() rowClass: any;\n\n  /**\n   * A boolean/function you can use to check whether you want\n   * to select a particular row based on a criteria. Example:\n   *\n   *    (selection) => {\n   *      return selection !== 'Ethel Price';\n   *    }\n   */\n  @Input() selectCheck: any;\n\n  /**\n   * A function you can use to check whether you want\n   * to show the checkbox for a particular row based on a criteria. Example:\n   *\n   *    (row, column, value) => {\n   *      return row.name !== 'Ethel Price';\n   *    }\n   */\n  @Input() displayCheck: (row: any, column?: any, value?: any) => boolean;\n\n  /**\n   * A boolean you can use to set the detault behaviour of rows and groups\n   * whether they will start expanded or not. If ommited the default is NOT expanded.\n   *\n   */\n  @Input() groupExpansionDefault: boolean = false;\n\n  /**\n   * Property to which you can use for custom tracking of rows.\n   * Example: 'name'\n   */\n  @Input() trackByProp: string;\n\n  /**\n   * Property to which you can use for determining select all\n   * rows on current page or not.\n   *\n   * @memberOf DatatableComponent\n   */\n  @Input() selectAllRowsOnPage = false;\n\n  /**\n   * A flag for row virtualization on / off\n   */\n  @Input() virtualization: boolean = true;\n\n  /**\n   * Tree from relation\n   */\n  @Input() treeFromRelation: string;\n\n  /**\n   * Tree to relation\n   */\n  @Input() treeToRelation: string;\n\n  /**\n   * A flag for switching summary row on / off\n   */\n  @Input() summaryRow: boolean = false;\n\n  /**\n   * A height of summary row\n   */\n  @Input() summaryHeight: number = 30;\n\n  /**\n   * A property holds a summary row position: top/bottom\n   */\n  @Input() summaryPosition: string = 'top';\n\n  /**\n   * Body was scrolled typically in a `scrollbarV:true` scenario.\n   */\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A cell or row was focused via keyboard or mouse click.\n   */\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A cell or row was selected.\n   */\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Column sort was invoked.\n   */\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The table was paged either triggered by the pager or the body scroll.\n   */\n  @Output() page: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Columns were re-ordered.\n   */\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Column was resized.\n   */\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The context menu was invoked on the table.\n   * type indicates whether the header or the body was clicked.\n   * content contains either the column or the row that was clicked.\n   */\n  @Output() tableContextmenu = new EventEmitter<{ event: MouseEvent; type: ContextmenuType; content: any }>(false);\n\n  /**\n   * A row was expanded ot collapsed for tree\n   */\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * CSS class applied if the header height if fixed height.\n   */\n  @HostBinding('class.fixed-header')\n  get isFixedHeader(): boolean {\n    const headerHeight: number | string = this.headerHeight;\n    return typeof headerHeight === 'string' ? <string>headerHeight !== 'auto' : true;\n  }\n\n  /**\n   * CSS class applied to the root element if\n   * the row heights are fixed heights.\n   */\n  @HostBinding('class.fixed-row')\n  get isFixedRow(): boolean {\n    return this.rowHeight !== 'auto';\n  }\n\n  /**\n   * CSS class applied to root element if\n   * vertical scrolling is enabled.\n   */\n  @HostBinding('class.scroll-vertical')\n  get isVertScroll(): boolean {\n    return this.scrollbarV;\n  }\n\n  /**\n   * CSS class applied to root element if\n   * virtualization is enabled.\n   */\n  @HostBinding('class.virtualized')\n  get isVirtualized(): boolean {\n    return this.virtualization;\n  }\n\n  /**\n   * CSS class applied to the root element\n   * if the horziontal scrolling is enabled.\n   */\n  @HostBinding('class.scroll-horz')\n  get isHorScroll(): boolean {\n    return this.scrollbarH;\n  }\n\n  /**\n   * CSS class applied to root element is selectable.\n   */\n  @HostBinding('class.selectable')\n  get isSelectable(): boolean {\n    return this.selectionType !== undefined;\n  }\n\n  /**\n   * CSS class applied to root is checkbox selection.\n   */\n  @HostBinding('class.checkbox-selection')\n  get isCheckboxSelection(): boolean {\n    return this.selectionType === SelectionType.checkbox;\n  }\n\n  /**\n   * CSS class applied to root if cell selection.\n   */\n  @HostBinding('class.cell-selection')\n  get isCellSelection(): boolean {\n    return this.selectionType === SelectionType.cell;\n  }\n\n  /**\n   * CSS class applied to root if single select.\n   */\n  @HostBinding('class.single-selection')\n  get isSingleSelection(): boolean {\n    return this.selectionType === SelectionType.single;\n  }\n\n  /**\n   * CSS class added to root element if mulit select\n   */\n  @HostBinding('class.multi-selection')\n  get isMultiSelection(): boolean {\n    return this.selectionType === SelectionType.multi;\n  }\n\n  /**\n   * CSS class added to root element if mulit click select\n   */\n  @HostBinding('class.multi-click-selection')\n  get isMultiClickSelection(): boolean {\n    return this.selectionType === SelectionType.multiClick;\n  }\n\n  /**\n   * Column templates gathered from `ContentChildren`\n   * if described in your markup.\n   */\n  @ContentChildren(DataTableColumnDirective)\n  set columnTemplates(val: QueryList<DataTableColumnDirective>) {\n    this._columnTemplates = val;\n    this.translateColumns(val);\n  }\n\n  /**\n   * Returns the column templates.\n   */\n  get columnTemplates(): QueryList<DataTableColumnDirective> {\n    return this._columnTemplates;\n  }\n\n  /**\n   * Row Detail templates gathered from the ContentChild\n   */\n  @ContentChild(DatatableRowDetailDirective)\n  rowDetail: DatatableRowDetailDirective;\n\n  /**\n   * Group Header templates gathered from the ContentChild\n   */\n  @ContentChild(DatatableGroupHeaderDirective)\n  groupHeader: DatatableGroupHeaderDirective;\n\n  /**\n   * Footer template gathered from the ContentChild\n   */\n  @ContentChild(DatatableFooterDirective)\n  footer: DatatableFooterDirective;\n\n  /**\n   * Reference to the body component for manually\n   * invoking functions on the body.\n   */\n  @ViewChild(DataTableBodyComponent)\n  bodyComponent: DataTableBodyComponent;\n\n  /**\n   * Reference to the header component for manually\n   * invoking functions on the header.\n   *\n   * @memberOf DatatableComponent\n   */\n  @ViewChild(DataTableHeaderComponent)\n  headerComponent: DataTableHeaderComponent;\n\n  /**\n   * Returns if all rows are selected.\n   */\n  get allRowsSelected(): boolean {\n    let allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\n\n    if (this.bodyComponent && this.selectAllRowsOnPage) {\n      const indexes = this.bodyComponent.indexes;\n      const rowsOnPage = indexes.last - indexes.first;\n      allRowsSelected = this.selected.length === rowsOnPage;\n    }\n\n    return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\n  }\n\n  element: HTMLElement;\n  _innerWidth: number;\n  pageSize: number;\n  bodyHeight: number;\n  rowCount: number = 0;\n  rowDiffer: KeyValueDiffer<{}, {}>;\n\n  _offsetX = new BehaviorSubject(0);\n  _limit: number | undefined;\n  _count: number = 0;\n  _offset: number = 0;\n  _rows: any[];\n  _groupRowsBy: string;\n  _internalRows: any[];\n  _internalColumns: TableColumn[];\n  _columns: TableColumn[];\n  _columnTemplates: QueryList<DataTableColumnDirective>;\n  _subscriptions: Subscription[] = [];\n\n  constructor(\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    @SkipSelf() private dimensionsHelper: DimensionsHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef,\n    differs: KeyValueDiffers,\n    private columnChangesService: ColumnChangesService,\n    @Optional() @Inject('configuration') private configuration: INgxDatatableConfig\n  ) {\n    // get ref to elm for measuring\n    this.element = element.nativeElement;\n    this.rowDiffer = differs.find({}).create();\n\n    // apply global settings from Module.forRoot\n    if (this.configuration && this.configuration.messages) {\n      this.messages = { ...this.configuration.messages };\n    }\n  }\n\n  /**\n   * Lifecycle hook that is called after data-bound\n   * properties of a directive are initialized.\n   */\n  ngOnInit(): void {\n    // need to call this immediatly to size\n    // if the table is hidden the visibility\n    // listener will invoke this itself upon show\n    this.recalculate();\n  }\n\n  /**\n   * Lifecycle hook that is called after a component's\n   * view has been fully initialized.\n   */\n  ngAfterViewInit(): void {\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n\n    // this has to be done to prevent the change detection\n    // tree from freaking out because we are readjusting\n    if (typeof requestAnimationFrame === 'undefined') {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      this.recalculate();\n\n      // emit page for virtual server-side kickoff\n      if (this.externalPaging && this.scrollbarV) {\n        this.page.emit({\n          count: this.count,\n          pageSize: this.pageSize,\n          limit: this.limit,\n          offset: 0\n        });\n      }\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called after a component's\n   * content has been fully initialized.\n   */\n  ngAfterContentInit() {\n    this.columnTemplates.changes.subscribe(v => this.translateColumns(v));\n    this.listenForColumnInputChanges();\n  }\n\n  /**\n   * This will be used when displaying or selecting rows.\n   * when tracking/comparing them, we'll use the value of this fn,\n   *\n   * (`fn(x) === fn(y)` instead of `x === y`)\n   */\n  @Input() rowIdentity: (x: any) => any = (x: any) => {\n    if (this._groupRowsBy) {\n      // each group in groupedRows are stored as {key, value: [rows]},\n      // where key is the groupRowsBy index\n      return x.key;\n    } else {\n      return x;\n    }\n  };\n\n  /**\n   * Translates the templates to the column objects\n   */\n  translateColumns(val: any) {\n    if (val) {\n      const arr = val.toArray();\n      if (arr.length) {\n        this._internalColumns = translateTemplates(arr);\n        setColumnDefaults(this._internalColumns);\n        this.recalculateColumns();\n        this.sortInternalRows();\n        this.cd.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Creates a map with the data grouped by the user choice of grouping index\n   *\n   * @param originalArray the original array passed via parameter\n   * @param groupByIndex  the index of the column to group the data by\n   */\n  groupArrayBy(originalArray: any, groupBy: any) {\n    // create a map to hold groups with their corresponding results\n    const map = new Map();\n    let i: number = 0;\n\n    originalArray.forEach((item: any) => {\n      const key = item[groupBy];\n      if (!map.has(key)) {\n        map.set(key, [item]);\n      } else {\n        map.get(key).push(item);\n      }\n      i++;\n    });\n\n    const addGroup = (key: any, value: any) => {\n      return { key, value };\n    };\n\n    // convert map back to a simple array of objects\n    return Array.from(map, x => addGroup(x[0], x[1]));\n  }\n\n  /*\n   * Lifecycle hook that is called when Angular dirty checks a directive.\n   */\n  ngDoCheck(): void {\n    if (this.rowDiffer.diff(this.rows)) {\n      if (!this.externalSorting) {\n        this.sortInternalRows();\n      } else {\n        this._internalRows = [...this.rows];\n      }\n\n      // auto group by parent on new update\n      this._internalRows = groupRowsByParents(\n        this._internalRows,\n        optionalGetterForProp(this.treeFromRelation),\n        optionalGetterForProp(this.treeToRelation)\n      );\n\n      this.recalculatePages();\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Recalc's the sizes of the grid.\n   *\n   * Updated automatically on changes to:\n   *\n   *  - Columns\n   *  - Rows\n   *  - Paging related\n   *\n   * Also can be manually invoked or upon window resize.\n   */\n  recalculate(): void {\n    this.recalculateDims();\n    this.recalculateColumns();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Window resize handler to update sizes.\n   */\n  @HostListener('window:resize')\n  @throttleable(5)\n  onWindowResize(): void {\n    this.recalculate();\n  }\n\n  /**\n   * Recalulcates the column widths based on column width\n   * distribution mode and scrollbar offsets.\n   */\n  recalculateColumns(\n    columns: any[] = this._internalColumns,\n    forceIdx: number = -1,\n    allowBleed: boolean = this.scrollbarH\n  ): any[] | undefined {\n    if (!columns) return undefined;\n\n    let width = this._innerWidth;\n    if (this.scrollbarV) {\n      width = width - this.scrollbarHelper.width;\n    }\n\n    if (this.columnMode === ColumnMode.force) {\n      forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n    } else if (this.columnMode === ColumnMode.flex) {\n      adjustColumnWidths(columns, width);\n    }\n\n    return columns;\n  }\n\n  /**\n   * Recalculates the dimensions of the table size.\n   * Internally calls the page size and row count calcs too.\n   *\n   */\n  recalculateDims(): void {\n    const dims = this.dimensionsHelper.getDimensions(this.element);\n    this._innerWidth = Math.floor(dims.width);\n\n    if (this.scrollbarV) {\n      let height = dims.height;\n      if (this.headerHeight) height = height - this.headerHeight;\n      if (this.footerHeight) height = height - this.footerHeight;\n      this.bodyHeight = height;\n    }\n\n    this.recalculatePages();\n  }\n\n  /**\n   * Recalculates the pages after a update.\n   */\n  recalculatePages(): void {\n    this.pageSize = this.calcPageSize();\n    this.rowCount = this.calcRowCount();\n  }\n\n  /**\n   * Body triggered a page event.\n   */\n  onBodyPage({ offset }: any): void {\n    // Avoid pagination caming from body events like scroll when the table\n    // has no virtualization and the external paging is enable.\n    // This means, let's the developer handle pagination by my him(her) self\n    if (this.externalPaging && !this.virtualization) {\n      return;\n    }\n\n    this.offset = offset;\n\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n  }\n\n  /**\n   * The body triggered a scroll event.\n   */\n  onBodyScroll(event: MouseEvent): void {\n    this._offsetX.next(event.offsetX);\n    this.scroll.emit(event);\n    this.cd.detectChanges();\n  }\n\n  /**\n   * The footer triggered a page event.\n   */\n  onFooterPage(event: any) {\n    this.offset = event.page - 1;\n    this.bodyComponent.updateOffsetY(this.offset);\n\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n  }\n\n  /**\n   * Recalculates the sizes of the page\n   */\n  calcPageSize(val: any[] = this.rows): number {\n    // Keep the page size constant even if the row has been expanded.\n    // This is because an expanded row is still considered to be a child of\n    // the original row.  Hence calculation would use rowHeight only.\n    if (this.scrollbarV && this.virtualization) {\n      const size = Math.ceil(this.bodyHeight / (this.rowHeight as number));\n      return Math.max(size, 0);\n    }\n\n    // if limit is passed, we are paging\n    if (this.limit !== undefined) {\n      return this.limit;\n    }\n\n    // otherwise use row length\n    if (val) {\n      return val.length;\n    }\n\n    // other empty :(\n    return 0;\n  }\n\n  /**\n   * Calculates the row count.\n   */\n  calcRowCount(val: any[] = this.rows): number {\n    if (!this.externalPaging) {\n      if (!val) return 0;\n\n      if (this.groupedRows) {\n        return this.groupedRows.length;\n      } else if (this.treeFromRelation != null && this.treeToRelation != null) {\n        return this._internalRows.length;\n      } else {\n        return val.length;\n      }\n    }\n\n    return this.count;\n  }\n\n  /**\n   * The header triggered a contextmenu event.\n   */\n  onColumnContextmenu({ event, column }: any): void {\n    this.tableContextmenu.emit({ event, type: ContextmenuType.header, content: column });\n  }\n\n  /**\n   * The body triggered a contextmenu event.\n   */\n  onRowContextmenu({ event, row }: any): void {\n    this.tableContextmenu.emit({ event, type: ContextmenuType.body, content: row });\n  }\n\n  /**\n   * The header triggered a column resize event.\n   */\n  onColumnResize({ column, newValue }: any): void {\n    /* Safari/iOS 10.2 workaround */\n    if (column === undefined) {\n      return;\n    }\n\n    let idx: number;\n    const cols = this._internalColumns.map((c, i) => {\n      c = { ...c };\n\n      if (c.$$id === column.$$id) {\n        idx = i;\n        c.width = newValue;\n\n        // set this so we can force the column\n        // width distribution to be to this value\n        c.$$oldWidth = newValue;\n      }\n\n      return c;\n    });\n\n    this.recalculateColumns(cols, idx);\n    this._internalColumns = cols;\n\n    this.resize.emit({\n      column,\n      newValue\n    });\n  }\n\n  /**\n   * The header triggered a column re-order event.\n   */\n  onColumnReorder({ column, newValue, prevValue }: any): void {\n    const cols = this._internalColumns.map(c => {\n      return { ...c };\n    });\n\n    if (this.swapColumns) {\n      const prevCol = cols[newValue];\n      cols[newValue] = column;\n      cols[prevValue] = prevCol;\n    } else {\n      if (newValue > prevValue) {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i < newValue; i++) {\n          cols[i] = cols[i + 1];\n        }\n        cols[newValue] = movedCol;\n      } else {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i > newValue; i--) {\n          cols[i] = cols[i - 1];\n        }\n        cols[newValue] = movedCol;\n      }\n    }\n\n    this._internalColumns = cols;\n\n    this.reorder.emit({\n      column,\n      newValue,\n      prevValue\n    });\n  }\n\n  /**\n   * The header triggered a column sort event.\n   */\n  onColumnSort(event: any): void {\n    // clean selected rows\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n\n    this.sorts = event.sorts;\n\n    // this could be optimized better since it will resort\n    // the rows again on the 'push' detection...\n    if (this.externalSorting === false) {\n      // don't use normal setter so we don't resort\n      this.sortInternalRows();\n    }\n\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(\n      this._internalRows,\n      optionalGetterForProp(this.treeFromRelation),\n      optionalGetterForProp(this.treeToRelation)\n    );\n\n    // Always go to first page when sorting to see the newly sorted data\n    this.offset = 0;\n    this.bodyComponent.updateOffsetY(this.offset);\n    this.sort.emit(event);\n  }\n\n  /**\n   * Toggle all row selection\n   */\n  onHeaderSelect(event: any): void {\n    if (this.bodyComponent && this.selectAllRowsOnPage) {\n      // before we splice, chk if we currently have all selected\n      const first = this.bodyComponent.indexes.first;\n      const last = this.bodyComponent.indexes.last;\n      const allSelected = this.selected.length === last - first;\n\n      // remove all existing either way\n      this.selected = [];\n\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this._internalRows.slice(first, last));\n      }\n    } else {\n      // before we splice, chk if we currently have all selected\n      const allSelected = this.selected.length === this.rows.length;\n      // remove all existing either way\n      this.selected = [];\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this.rows);\n      }\n    }\n\n    this.select.emit({\n      selected: this.selected\n    });\n  }\n\n  /**\n   * A row was selected from body\n   */\n  onBodySelect(event: any): void {\n    this.select.emit(event);\n  }\n\n  /**\n   * A row was expanded or collapsed for tree\n   */\n  onTreeAction(event: any) {\n    const row = event.row;\n    // TODO: For duplicated items this will not work\n    const rowIndex = this._rows.findIndex(r => r[this.treeToRelation] === event.row[this.treeToRelation]);\n    this.treeAction.emit({ row, rowIndex });\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  /**\n   * listen for changes to input bindings of all DataTableColumnDirective and\n   * trigger the columnTemplates.changes observable to emit\n   */\n  private listenForColumnInputChanges(): void {\n    this._subscriptions.push(\n      this.columnChangesService.columnInputChanges$.subscribe(() => {\n        if (this.columnTemplates) {\n          this.columnTemplates.notifyOnChanges();\n        }\n      })\n    );\n  }\n\n  private sortInternalRows(): void {\n    this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-footer-template]' })\nexport class DataTableFooterTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Component, Output, EventEmitter, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { DatatableFooterDirective } from './footer.directive';\n@Component({\n  selector: 'datatable-footer',\n  template: `\n    <div\n      class=\"datatable-footer-inner\"\n      [ngClass]=\"{ 'selected-count': selectedMessage }\"\n      [style.height.px]=\"footerHeight\"\n    >\n      <ng-template\n        *ngIf=\"footerTemplate\"\n        [ngTemplateOutlet]=\"footerTemplate.template\"\n        [ngTemplateOutletContext]=\"{\n          rowCount: rowCount,\n          pageSize: pageSize,\n          selectedCount: selectedCount,\n          curPage: curPage,\n          offset: offset\n        }\"\n      >\n      </ng-template>\n      <div class=\"page-count\" *ngIf=\"!footerTemplate\">\n        <span *ngIf=\"selectedMessage\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\n      </div>\n      <datatable-pager\n        *ngIf=\"!footerTemplate\"\n        [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\n        [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\n        [pagerPreviousIcon]=\"pagerPreviousIcon\"\n        [pagerNextIcon]=\"pagerNextIcon\"\n        [page]=\"curPage\"\n        [size]=\"pageSize\"\n        [count]=\"rowCount\"\n        [hidden]=\"!isVisible\"\n        (change)=\"page.emit($event)\"\n      >\n      </datatable-pager>\n    </div>\n  `,\n  host: {\n    class: 'datatable-footer'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableFooterComponent {\n  @Input() footerHeight: number;\n  @Input() rowCount: number;\n  @Input() pageSize: number;\n  @Input() offset: number;\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n  @Input() totalMessage: string;\n  @Input() footerTemplate: DatatableFooterDirective;\n\n  @Input() selectedCount: number = 0;\n  @Input() selectedMessage: string | boolean;\n\n  @Output() page: EventEmitter<any> = new EventEmitter();\n\n  get isVisible(): boolean {\n    return this.rowCount / this.pageSize > 1;\n  }\n\n  get curPage(): number {\n    return this.offset + 1;\n  }\n}\n","import { Input, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DataTableFooterTemplateDirective } from './footer-template.directive';\n\n@Directive({ selector: 'ngx-datatable-footer' })\nexport class DatatableFooterDirective {\n  @Input() footerHeight: number;\n  @Input() totalMessage: string;\n  @Input() selectedMessage: string | boolean;\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableFooterTemplateDirective, { read: TemplateRef })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-pager',\n  template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" (click)=\"selectPage(1)\">\n          <i class=\"{{ pagerPreviousIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" (click)=\"prevPage()\">\n          <i class=\"{{ pagerLeftArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li\n        role=\"button\"\n        [attr.aria-label]=\"'page ' + pg.number\"\n        class=\"pages\"\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\"\n      >\n        <a href=\"javascript:void(0)\" (click)=\"selectPage(pg.number)\">\n          {{ pg.text }}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" (click)=\"nextPage()\">\n          <i class=\"{{ pagerRightArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" (click)=\"selectPage(totalPages)\">\n          <i class=\"{{ pagerNextIcon }}\"></i>\n        </a>\n      </li>\n    </ul>\n  `,\n  host: {\n    class: 'datatable-pager'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTablePagerComponent {\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n\n  @Input()\n  set size(val: number) {\n    this._size = val;\n    this.pages = this.calcPages();\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  @Input()\n  set count(val: number) {\n    this._count = val;\n    this.pages = this.calcPages();\n  }\n\n  get count(): number {\n    return this._count;\n  }\n\n  @Input()\n  set page(val: number) {\n    this._page = val;\n    this.pages = this.calcPages();\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  get totalPages(): number {\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n    return Math.max(count || 0, 1);\n  }\n\n  @Output() change: EventEmitter<any> = new EventEmitter();\n\n  _count: number = 0;\n  _page: number = 1;\n  _size: number = 0;\n  pages: any;\n\n  canPrevious(): boolean {\n    return this.page > 1;\n  }\n\n  canNext(): boolean {\n    return this.page < this.totalPages;\n  }\n\n  prevPage(): void {\n    this.selectPage(this.page - 1);\n  }\n\n  nextPage(): void {\n    this.selectPage(this.page + 1);\n  }\n\n  selectPage(page: number): void {\n    if (page > 0 && page <= this.totalPages && page !== this.page) {\n      this.page = page;\n\n      this.change.emit({\n        page\n      });\n    }\n  }\n\n  calcPages(page?: number): any[] {\n    const pages = [];\n    let startPage = 1;\n    let endPage = this.totalPages;\n    const maxSize = 5;\n    const isMaxSized = maxSize < this.totalPages;\n\n    page = page || this.page;\n\n    if (isMaxSized) {\n      startPage = page - Math.floor(maxSize / 2);\n      endPage = page + Math.floor(maxSize / 2);\n\n      if (startPage < 1) {\n        startPage = 1;\n        endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n      } else if (endPage > this.totalPages) {\n        startPage = Math.max(this.totalPages - maxSize + 1, 1);\n        endPage = this.totalPages;\n      }\n    }\n\n    for (let num = startPage; num <= endPage; num++) {\n      pages.push({\n        number: num,\n        text: <string>(<any>num)\n      });\n    }\n\n    return pages;\n  }\n}\n","import {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  HostBinding,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { TableColumn } from '../../types/table-column.type';\nimport { nextSortDir } from '../../utils/sort';\nimport { SortDirection } from '../../types/sort-direction.type';\n\n@Component({\n  selector: 'datatable-header-cell',\n  template: `\n    <div class=\"datatable-header-cell-template-wrap\">\n      <ng-template\n        *ngIf=\"isTarget\"\n        [ngTemplateOutlet]=\"targetMarkerTemplate\"\n        [ngTemplateOutletContext]=\"targetMarkerContext\"\n      >\n      </ng-template>\n      <label *ngIf=\"isCheckboxable\" class=\"datatable-checkbox\">\n        <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"select.emit(!allRowsSelected)\" />\n      </label>\n      <span *ngIf=\"!column.headerTemplate\" class=\"datatable-header-cell-wrapper\">\n        <span class=\"datatable-header-cell-label draggable\" (click)=\"onSort()\" [innerHTML]=\"name\"> </span>\n      </span>\n      <ng-template\n        *ngIf=\"column.headerTemplate\"\n        [ngTemplateOutlet]=\"column.headerTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n      <span (click)=\"onSort()\" [class]=\"sortClass\"> </span>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header-cell'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderCellComponent {\n  @Input() sortType: SortType;\n  @Input() sortAscendingIcon: string;\n  @Input() sortDescendingIcon: string;\n  @Input() sortUnsetIcon: string;\n\n  @Input() isTarget: boolean;\n  @Input() targetMarkerTemplate: any;\n  @Input() targetMarkerContext: any;\n\n  _allRowsSelected: boolean;\n\n  @Input() set allRowsSelected(value) {\n    this._allRowsSelected = value;\n    this.cellContext.allRowsSelected = value;\n  }\n  get allRowsSelected() {\n    return this._allRowsSelected;\n  }\n\n  @Input() selectionType: SelectionType;\n\n  @Input() set column(column: TableColumn) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.cd.markForCheck();\n  }\n\n  get column(): TableColumn {\n    return this._column;\n  }\n\n  @HostBinding('style.height.px')\n  @Input()\n  headerHeight: number;\n\n  @Input() set sorts(val: any[]) {\n    this._sorts = val;\n    this.sortDir = this.calcSortDir(val);\n    this.cellContext.sortDir = this.sortDir;\n    this.sortClass = this.calcSortClass(this.sortDir);\n    this.cd.markForCheck();\n  }\n\n  get sorts(): any[] {\n    return this._sorts;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  @HostBinding('class')\n  get columnCssClasses(): any {\n    let cls = 'datatable-header-cell';\n\n    if (this.column.sortable) cls += ' sortable';\n    if (this.column.resizeable) cls += ' resizeable';\n    if (this.column.headerClass) {\n      if (typeof this.column.headerClass === 'string') {\n        cls += ' ' + this.column.headerClass;\n      } else if (typeof this.column.headerClass === 'function') {\n        const res = this.column.headerClass({\n          column: this.column\n        });\n\n        if (typeof res === 'string') {\n          cls += res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    const sortDir = this.sortDir;\n    if (sortDir) {\n      cls += ` sort-active sort-${sortDir}`;\n    }\n\n    return cls;\n  }\n\n  @HostBinding('attr.title')\n  get name(): string {\n    // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n    return this.column.headerTemplate === undefined ? this.column.name : undefined;\n  }\n\n  @HostBinding('style.minWidth.px')\n  get minWidth(): number {\n    return this.column.minWidth;\n  }\n\n  @HostBinding('style.maxWidth.px')\n  get maxWidth(): number {\n    return this.column.maxWidth;\n  }\n\n  @HostBinding('style.width.px')\n  get width(): number {\n    return this.column.width;\n  }\n\n  get isCheckboxable(): boolean {\n    return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\n  }\n\n  sortFn = this.onSort.bind(this);\n  sortClass: string;\n  sortDir: SortDirection;\n  selectFn = this.select.emit.bind(this.select);\n\n  cellContext: any;\n\n  private _column: TableColumn;\n  private _sorts: any[];\n\n  constructor(private cd: ChangeDetectorRef) {\n    this.cellContext = {\n      column: this.column,\n      sortDir: this.sortDir,\n      sortFn: this.sortFn,\n      allRowsSelected: this.allRowsSelected,\n      selectFn: this.selectFn\n    };\n  }\n\n  @HostListener('contextmenu', ['$event'])\n  onContextmenu($event: MouseEvent): void {\n    this.columnContextmenu.emit({ event: $event, column: this.column });\n  }\n\n  ngOnInit() {\n    this.sortClass = this.calcSortClass(this.sortDir);\n  }\n\n  calcSortDir(sorts: any[]): any {\n    if (sorts && this.column) {\n      const sort = sorts.find((s: any) => {\n        return s.prop === this.column.prop;\n      });\n\n      if (sort) return sort.dir;\n    }\n  }\n\n  onSort(): void {\n    if (!this.column.sortable) return;\n\n    const newValue = nextSortDir(this.sortType, this.sortDir);\n    this.sort.emit({\n      column: this.column,\n      prevValue: this.sortDir,\n      newValue\n    });\n  }\n\n  calcSortClass(sortDir: SortDirection): string {\n    if (!this.cellContext.column.sortable) return;\n    if (sortDir === SortDirection.asc) {\n      return `sort-btn sort-asc ${this.sortAscendingIcon}`;\n    } else if (sortDir === SortDirection.desc) {\n      return `sort-btn sort-desc ${this.sortDescendingIcon}`;\n    } else {\n      return `sort-btn ${this.sortUnsetIcon}`;\n    }\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  OnDestroy\n} from '@angular/core';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { DataTableColumnDirective } from '../columns/column.directive';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-header',\n  template: `\n    <div\n      role=\"row\"\n      orderable\n      (reorder)=\"onColumnReordered($event)\"\n      (targetChanged)=\"onTargetChanged($event)\"\n      [style.width.px]=\"_columnGroupWidths.total\"\n      class=\"datatable-header-inner\"\n    >\n      <div\n        *ngFor=\"let colGroup of _columnsByPin; trackBy: trackByGroups\"\n        [class]=\"'datatable-row-' + colGroup.type\"\n        [ngStyle]=\"_styleByGroup[colGroup.type]\"\n      >\n        <datatable-header-cell\n          role=\"columnheader\"\n          *ngFor=\"let column of colGroup.columns; trackBy: columnTrackingFn\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (resize)=\"onColumnResized($event, column)\"\n          long-press\n          [pressModel]=\"column\"\n          [pressEnabled]=\"reorderable && column.draggable\"\n          (longPressStart)=\"onLongPressStart($event)\"\n          (longPressEnd)=\"onLongPressEnd($event)\"\n          draggable\n          [dragX]=\"reorderable && column.draggable && column.dragging\"\n          [dragY]=\"false\"\n          [dragModel]=\"column\"\n          [dragEventTarget]=\"dragEventTarget\"\n          [headerHeight]=\"headerHeight\"\n          [isTarget]=\"column.isTarget\"\n          [targetMarkerTemplate]=\"targetMarkerTemplate\"\n          [targetMarkerContext]=\"column.targetMarkerContext\"\n          [column]=\"column\"\n          [sortType]=\"sortType\"\n          [sorts]=\"sorts\"\n          [selectionType]=\"selectionType\"\n          [sortAscendingIcon]=\"sortAscendingIcon\"\n          [sortDescendingIcon]=\"sortDescendingIcon\"\n          [sortUnsetIcon]=\"sortUnsetIcon\"\n          [allRowsSelected]=\"allRowsSelected\"\n          (sort)=\"onSort($event)\"\n          (select)=\"select.emit($event)\"\n          (columnContextmenu)=\"columnContextmenu.emit($event)\"\n        >\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderComponent implements OnDestroy {\n  @Input() sortAscendingIcon: any;\n  @Input() sortDescendingIcon: any;\n  @Input() sortUnsetIcon: any;\n  @Input() scrollbarH: boolean;\n  @Input() dealsWithGroup: boolean;\n  @Input() targetMarkerTemplate: any;\n\n  targetMarkerContext: any;\n\n  @Input() set innerWidth(val: number) {\n    this._innerWidth = val;\n    setTimeout(() => {\n      if (this._columns) {\n        const colByPin = columnsByPin(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n        this.setStylesByGroup();\n      }\n    });\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() sorts: any[];\n  @Input() sortType: SortType;\n  @Input() allRowsSelected: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() reorderable: boolean;\n\n  dragEventTarget: any;\n\n  @HostBinding('style.height')\n  @Input()\n  set headerHeight(val: any) {\n    if (val !== 'auto') {\n      this._headerHeight = `${val}px`;\n    } else {\n      this._headerHeight = val;\n    }\n  }\n\n  get headerHeight(): any {\n    return this._headerHeight;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n\n    const colsByPin = columnsByPin(val);\n    this._columnsByPin = columnsByPinArr(val);\n    setTimeout(() => {\n      this._columnGroupWidths = columnGroupWidths(colsByPin, val);\n      this.setStylesByGroup();\n    });\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.setStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  _columnsByPin: any;\n  _columnGroupWidths: any = {\n    total: 100\n  };\n  _innerWidth: number;\n  _offsetX: number;\n  _columns: any[];\n  _headerHeight: string;\n  _styleByGroup: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private destroyed = false;\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngOnDestroy(): void {\n    this.destroyed = true;\n  }\n\n  onLongPressStart({ event, model }: { event: any; model: any }) {\n    model.dragging = true;\n    this.dragEventTarget = event;\n  }\n\n  onLongPressEnd({ event, model }: { event: any; model: any }) {\n    this.dragEventTarget = event;\n\n    // delay resetting so sort can be\n    // prevented if we were dragging\n    setTimeout(() => {\n      // datatable component creates copies from columns on reorder\n      // set dragging to false on new objects\n      const column = this._columns.find(c => c.$$id === model.$$id);\n      if (column) {\n        column.dragging = false;\n      }\n    }, 5);\n  }\n\n  @HostBinding('style.width')\n  get headerWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    }\n\n    return '100%';\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  onColumnResized(width: number, column: DataTableColumnDirective): void {\n    if (width <= column.minWidth) {\n      width = column.minWidth;\n    } else if (width >= column.maxWidth) {\n      width = column.maxWidth;\n    }\n\n    this.resize.emit({\n      column,\n      prevValue: column.width,\n      newValue: width\n    });\n  }\n\n  onColumnReordered({ prevIndex, newIndex, model }: any): void {\n    const column = this.getColumn(newIndex);\n    column.isTarget = false;\n    column.targetMarkerContext = undefined;\n    this.reorder.emit({\n      column: model,\n      prevValue: prevIndex,\n      newValue: newIndex\n    });\n  }\n\n  onTargetChanged({ prevIndex, newIndex, initialIndex }: any): void {\n    if (prevIndex || prevIndex === 0) {\n      const oldColumn = this.getColumn(prevIndex);\n      oldColumn.isTarget = false;\n      oldColumn.targetMarkerContext = undefined;\n    }\n    if (newIndex || newIndex === 0) {\n      const newColumn = this.getColumn(newIndex);\n      newColumn.isTarget = true;\n\n      if (initialIndex !== newIndex) {\n        newColumn.targetMarkerContext = {\n          class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n        };\n      }\n    }\n  }\n\n  getColumn(index: number): any {\n    const leftColumnCount = this._columnsByPin[0].columns.length;\n    if (index < leftColumnCount) {\n      return this._columnsByPin[0].columns[index];\n    }\n\n    const centerColumnCount = this._columnsByPin[1].columns.length;\n    if (index < leftColumnCount + centerColumnCount) {\n      return this._columnsByPin[1].columns[index - leftColumnCount];\n    }\n\n    return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n  }\n\n  onSort({ column, prevValue, newValue }: any): void {\n    // if we are dragging don't sort!\n    if (column.dragging) {\n      return;\n    }\n\n    const sorts = this.calcNewSorts(column, prevValue, newValue);\n    this.sort.emit({\n      sorts,\n      column,\n      prevValue,\n      newValue\n    });\n  }\n\n  calcNewSorts(column: any, prevValue: number, newValue: number): any[] {\n    let idx = 0;\n\n    if (!this.sorts) {\n      this.sorts = [];\n    }\n\n    const sorts = this.sorts.map((s, i) => {\n      s = { ...s };\n      if (s.prop === column.prop) {\n        idx = i;\n      }\n      return s;\n    });\n\n    if (newValue === undefined) {\n      sorts.splice(idx, 1);\n    } else if (prevValue) {\n      sorts[idx].dir = newValue;\n    } else {\n      if (this.sortType === SortType.single) {\n        sorts.splice(0, this.sorts.length);\n      }\n\n      sorts.push({ dir: newValue, prop: column.prop });\n    }\n\n    return sorts;\n  }\n\n  setStylesByGroup() {\n    this._styleByGroup.left = this.calcStylesByGroup('left');\n    this._styleByGroup.center = this.calcStylesByGroup('center');\n    this._styleByGroup.right = this.calcStylesByGroup('right');\n    if (!this.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n\n  calcStylesByGroup(group: string): any {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'center') {\n      translateXY(styles, offsetX * -1, 0);\n    } else if (group === 'right') {\n      const totalDiff = widths.total - this.innerWidth;\n      const offset = totalDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-datatable-row-detail-template]'\n})\nexport class DatatableRowDetailTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DatatableRowDetailTemplateDirective } from './row-detail-template.directive';\n\n@Directive({ selector: 'ngx-datatable-row-detail' })\nexport class DatatableRowDetailDirective {\n  /**\n   * The detail row height is required especially\n   * when virtual scroll is enabled.\n   */\n  @Input() rowHeight: number | ((row?: any, index?: number) => number) = 0;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n\n  /**\n   * Row detail row visbility was toggled.\n   */\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Toggle the expansion of the row\n   */\n  toggleExpandRow(row: any): void {\n    this.toggle.emit({\n      type: 'row',\n      value: row\n    });\n  }\n\n  /**\n   * API method to expand all the rows.\n   */\n  expandAllRows(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n\n  /**\n   * API method to collapse all the rows.\n   */\n  collapseAllRows(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\n","import { Directive, ElementRef, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\n@Directive({ selector: '[draggable]' })\nexport class DraggableDirective implements OnDestroy, OnChanges {\n  @Input() dragEventTarget: any;\n  @Input() dragModel: any;\n  @Input() dragX: boolean = true;\n  @Input() dragY: boolean = true;\n\n  @Output() dragStart: EventEmitter<any> = new EventEmitter();\n  @Output() dragging: EventEmitter<any> = new EventEmitter();\n  @Output() dragEnd: EventEmitter<any> = new EventEmitter();\n\n  element: HTMLElement;\n  isDragging: boolean = false;\n  subscription: Subscription;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\n      this.onMousedown(changes['dragEventTarget'].currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n  }\n\n  onMouseup(event: MouseEvent): void {\n    if (!this.isDragging) return;\n\n    this.isDragging = false;\n    this.element.classList.remove('dragging');\n\n    if (this.subscription) {\n      this._destroySubscription();\n      this.dragEnd.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n\n  onMousedown(event: MouseEvent): void {\n    // we only want to drag the inner header text\n    const isDragElm = (<HTMLElement>event.target).classList.contains('draggable');\n\n    if (isDragElm && (this.dragX || this.dragY)) {\n      event.preventDefault();\n      this.isDragging = true;\n\n      const mouseDownPos = { x: event.clientX, y: event.clientY };\n\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup(ev));\n\n      const mouseMoveSub = fromEvent(document, 'mousemove')\n        .pipe(takeUntil(mouseup))\n        .subscribe((ev: MouseEvent) => this.move(ev, mouseDownPos));\n\n      this.subscription.add(mouseMoveSub);\n\n      this.dragStart.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n\n  move(event: MouseEvent, mouseDownPos: { x: number; y: number }): void {\n    if (!this.isDragging) return;\n\n    const x = event.clientX - mouseDownPos.x;\n    const y = event.clientY - mouseDownPos.y;\n\n    if (this.dragX) this.element.style.left = `${x}px`;\n    if (this.dragY) this.element.style.top = `${y}px`;\n\n    this.element.classList.add('dragging');\n\n    this.dragging.emit({\n      event,\n      element: this.element,\n      model: this.dragModel\n    });\n  }\n\n  private _destroySubscription(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import { Directive, Input, Output, EventEmitter, HostBinding, HostListener, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MouseEvent } from '../events';\n\n@Directive({ selector: '[long-press]' })\nexport class LongPressDirective implements OnDestroy {\n  @Input() pressEnabled: boolean = true;\n  @Input() pressModel: any;\n  @Input() duration: number = 500;\n\n  @Output() longPressStart: EventEmitter<any> = new EventEmitter();\n  @Output() longPressing: EventEmitter<any> = new EventEmitter();\n  @Output() longPressEnd: EventEmitter<any> = new EventEmitter();\n\n  pressing: boolean;\n  isLongPressing: boolean;\n  timeout: any;\n  mouseX: number = 0;\n  mouseY: number = 0;\n\n  subscription: Subscription;\n\n  @HostBinding('class.press')\n  get press(): boolean {\n    return this.pressing;\n  }\n\n  @HostBinding('class.longpress')\n  get isLongPress(): boolean {\n    return this.isLongPressing;\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDown(event: MouseEvent): void {\n    // don't do right/middle clicks\n    if (event.which !== 1 || !this.pressEnabled) return;\n\n    // don't start drag if its on resize handle\n    const target = <HTMLElement>event.target;\n    if (target.classList.contains('resize-handle')) return;\n\n    this.mouseX = event.clientX;\n    this.mouseY = event.clientY;\n\n    this.pressing = true;\n    this.isLongPressing = false;\n\n    const mouseup = fromEvent(document, 'mouseup');\n    this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\n\n    this.timeout = setTimeout(() => {\n      this.isLongPressing = true;\n      this.longPressStart.emit({\n        event,\n        model: this.pressModel\n      });\n\n      this.subscription.add(\n        fromEvent(document, 'mousemove')\n          .pipe(takeUntil(mouseup))\n          .subscribe((mouseEvent: MouseEvent) => this.onMouseMove(mouseEvent))\n      );\n\n      this.loop(event);\n    }, this.duration);\n\n    this.loop(event);\n  }\n\n  onMouseMove(event: MouseEvent): void {\n    if (this.pressing && !this.isLongPressing) {\n      const xThres = Math.abs(event.clientX - this.mouseX) > 10;\n      const yThres = Math.abs(event.clientY - this.mouseY) > 10;\n\n      if (xThres || yThres) {\n        this.endPress();\n      }\n    }\n  }\n\n  loop(event: MouseEvent): void {\n    if (this.isLongPressing) {\n      this.timeout = setTimeout(() => {\n        this.longPressing.emit({\n          event,\n          model: this.pressModel\n        });\n        this.loop(event);\n      }, 50);\n    }\n  }\n\n  endPress(): void {\n    clearTimeout(this.timeout);\n    this.isLongPressing = false;\n    this.pressing = false;\n    this._destroySubscription();\n\n    this.longPressEnd.emit({\n      model: this.pressModel\n    });\n  }\n\n  onMouseup(): void {\n    this.endPress();\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n  }\n\n  private _destroySubscription(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import {\n  Directive,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  KeyValueDiffers,\n  AfterContentInit,\n  OnDestroy,\n  Inject\n} from '@angular/core';\nimport { DraggableDirective } from './draggable.directive';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({ selector: '[orderable]' })\nexport class OrderableDirective implements AfterContentInit, OnDestroy {\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() targetChanged: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(DraggableDirective, { descendants: true })\n  draggables: QueryList<DraggableDirective>;\n\n  positions: any;\n  differ: any;\n  lastDraggingIndex: number;\n\n  constructor(differs: KeyValueDiffers, @Inject(DOCUMENT) private document: any) {\n    this.differ = differs.find({}).create();\n  }\n\n  ngAfterContentInit(): void {\n    // HACK: Investigate Better Way\n    this.updateSubscriptions();\n    this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.draggables.forEach(d => {\n      d.dragStart.unsubscribe();\n      d.dragging.unsubscribe();\n      d.dragEnd.unsubscribe();\n    });\n  }\n\n  updateSubscriptions(): void {\n    const diffs = this.differ.diff(this.createMapDiffs());\n\n    if (diffs) {\n      const subscribe = ({ currentValue, previousValue }: any) => {\n        unsubscribe({ previousValue });\n\n        if (currentValue) {\n          currentValue.dragStart.subscribe(this.onDragStart.bind(this));\n          currentValue.dragging.subscribe(this.onDragging.bind(this));\n          currentValue.dragEnd.subscribe(this.onDragEnd.bind(this));\n        }\n      };\n\n      const unsubscribe = ({ previousValue }: any) => {\n        if (previousValue) {\n          previousValue.dragStart.unsubscribe();\n          previousValue.dragging.unsubscribe();\n          previousValue.dragEnd.unsubscribe();\n        }\n      };\n\n      diffs.forEachAddedItem(subscribe);\n      // diffs.forEachChangedItem(subscribe.bind(this));\n      diffs.forEachRemovedItem(unsubscribe);\n    }\n  }\n\n  onDragStart(): void {\n    this.positions = {};\n\n    let i = 0;\n    for (const dragger of this.draggables.toArray()) {\n      const elm = dragger.element;\n      const left = parseInt(elm.offsetLeft.toString(), 0);\n      this.positions[dragger.dragModel.prop] = {\n        left,\n        right: left + parseInt(elm.offsetWidth.toString(), 0),\n        index: i++,\n        element: elm\n      };\n    }\n  }\n\n  onDragging({ element, model, event }: any): void {\n    const prevPos = this.positions[model.prop];\n    const target = this.isTarget(model, event);\n\n    if (target) {\n      if (this.lastDraggingIndex !== target.i) {\n        this.targetChanged.emit({\n          prevIndex: this.lastDraggingIndex,\n          newIndex: target.i,\n          initialIndex: prevPos.index\n        });\n        this.lastDraggingIndex = target.i;\n      }\n    } else if (this.lastDraggingIndex !== prevPos.index) {\n      this.targetChanged.emit({\n        prevIndex: this.lastDraggingIndex,\n        initialIndex: prevPos.index\n      });\n      this.lastDraggingIndex = prevPos.index;\n    }\n  }\n\n  onDragEnd({ element, model, event }: any): void {\n    const prevPos = this.positions[model.prop];\n\n    const target = this.isTarget(model, event);\n    if (target) {\n      this.reorder.emit({\n        prevIndex: prevPos.index,\n        newIndex: target.i,\n        model\n      });\n    }\n\n    this.lastDraggingIndex = undefined;\n    element.style.left = 'auto';\n  }\n\n  isTarget(model: any, event: any): any {\n    let i = 0;\n    const x = event.x || event.clientX;\n    const y = event.y || event.clientY;\n    const targets = this.document.elementsFromPoint(x, y);\n\n    for (const prop in this.positions) {\n      // current column position which throws event.\n      const pos = this.positions[prop];\n\n      // since we drag the inner span, we need to find it in the elements at the cursor\n      if (model.prop !== prop && targets.find((el: any) => el === pos.element)) {\n        return {\n          pos,\n          i\n        };\n      }\n\n      i++;\n    }\n  }\n\n  private createMapDiffs(): { [key: string]: DraggableDirective } {\n    return this.draggables.toArray().reduce((acc, curr) => {\n      acc[curr.dragModel.$$id] = curr;\n      return acc;\n    }, {});\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  AfterViewInit,\n  Renderer2\n} from '@angular/core';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[resizeable]',\n  host: {\n    '[class.resizeable]': 'resizeEnabled'\n  }\n})\nexport class ResizeableDirective implements OnDestroy, AfterViewInit {\n  @Input() resizeEnabled: boolean = true;\n  @Input() minWidth: number;\n  @Input() maxWidth: number;\n\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n\n  element: HTMLElement;\n  subscription: Subscription;\n  resizing: boolean = false;\n  private resizeHandle: HTMLElement;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element.nativeElement;\n  }\n\n  ngAfterViewInit(): void {\n    const renderer2 = this.renderer;\n    this.resizeHandle = renderer2.createElement('span');\n    if (this.resizeEnabled) {\n      renderer2.addClass(this.resizeHandle, 'resize-handle');\n    } else {\n      renderer2.addClass(this.resizeHandle, 'resize-handle--not-resizable');\n    }\n    renderer2.appendChild(this.element, this.resizeHandle);\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n    if (this.renderer.destroyNode) {\n      this.renderer.destroyNode(this.resizeHandle);\n    } else if (this.resizeHandle) {\n      this.renderer.removeChild(this.renderer.parentNode(this.resizeHandle), this.resizeHandle);\n    }\n  }\n\n  onMouseup(): void {\n    this.resizing = false;\n\n    if (this.subscription && !this.subscription.closed) {\n      this._destroySubscription();\n      this.resize.emit(this.element.clientWidth);\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event: MouseEvent): void {\n    const isHandle = (<HTMLElement>event.target).classList.contains('resize-handle');\n    const initialWidth = this.element.clientWidth;\n    const mouseDownScreenX = event.screenX;\n\n    if (isHandle) {\n      event.stopPropagation();\n      this.resizing = true;\n\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\n\n      const mouseMoveSub = fromEvent(document, 'mousemove')\n        .pipe(takeUntil(mouseup))\n        .subscribe((e: MouseEvent) => this.move(e, initialWidth, mouseDownScreenX));\n\n      this.subscription.add(mouseMoveSub);\n    }\n  }\n\n  move(event: MouseEvent, initialWidth: number, mouseDownScreenX: number): void {\n    const movementX = event.screenX - mouseDownScreenX;\n    const newWidth = initialWidth + movementX;\n\n    const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n    const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n\n    if (overMinWidth && underMaxWidth) {\n      this.element.style.width = `${newWidth}px`;\n    }\n  }\n\n  private _destroySubscription() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import { Directive, Output, EventEmitter, ElementRef, HostBinding, NgZone, OnInit, OnDestroy } from '@angular/core';\n\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\n@Directive({ selector: '[visibilityObserver]' })\nexport class VisibilityDirective implements OnInit, OnDestroy {\n  @HostBinding('class.visible')\n  isVisible: boolean = false;\n\n  @Output() visible: EventEmitter<any> = new EventEmitter();\n\n  timeout: any;\n\n  constructor(private element: ElementRef, private zone: NgZone) {}\n\n  ngOnInit(): void {\n    this.runCheck();\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.timeout);\n  }\n\n  onVisibilityChange(): void {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n\n  runCheck(): void {\n    const check = () => {\n      // https://davidwalsh.name/offsetheight-visibility\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\n\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 50);\n        });\n      }\n    };\n\n    this.timeout = setTimeout(() => check());\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrollbarHelper } from './services/scrollbar-helper.service';\nimport { DimensionsHelper } from './services/dimensions-helper.service';\nimport { ColumnChangesService } from './services/column-changes.service';\nimport { DataTableFooterTemplateDirective } from './components/footer/footer-template.directive';\nimport { VisibilityDirective } from './directives/visibility.directive';\nimport { DraggableDirective } from './directives/draggable.directive';\nimport { ResizeableDirective } from './directives/resizeable.directive';\nimport { OrderableDirective } from './directives/orderable.directive';\nimport { LongPressDirective } from './directives/long-press.directive';\nimport { ScrollerComponent } from './components/body/scroller.component';\nimport { DatatableComponent } from './components/datatable.component';\nimport { DataTableColumnDirective } from './components/columns/column.directive';\nimport { DataTableHeaderComponent } from './components/header/header.component';\nimport { DataTableHeaderCellComponent } from './components/header/header-cell.component';\nimport { DataTableBodyComponent } from './components/body/body.component';\nimport { DataTableFooterComponent } from './components/footer/footer.component';\nimport { DataTablePagerComponent } from './components/footer/pager.component';\nimport { ProgressBarComponent } from './components/body/progress-bar.component';\nimport { DataTableBodyRowComponent } from './components/body/body-row.component';\nimport { DataTableRowWrapperComponent } from './components/body/body-row-wrapper.component';\nimport { DatatableRowDetailDirective } from './components/row-detail/row-detail.directive';\nimport { DatatableGroupHeaderDirective } from './components/body/body-group-header.directive';\nimport { DatatableRowDetailTemplateDirective } from './components/row-detail/row-detail-template.directive';\nimport { DataTableBodyCellComponent } from './components/body/body-cell.component';\nimport { DataTableSelectionComponent } from './components/body/selection.component';\nimport { DataTableColumnHeaderDirective } from './components/columns/column-header.directive';\nimport { DataTableColumnCellDirective } from './components/columns/column-cell.directive';\nimport { DataTableColumnCellTreeToggle } from './components/columns/tree.directive';\nimport { DatatableFooterDirective } from './components/footer/footer.directive';\nimport { DatatableGroupHeaderTemplateDirective } from './components/body/body-group-header-template.directive';\nimport { DataTableSummaryRowComponent } from './components/body/summary/summary-row.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n  declarations: [\n    DataTableFooterTemplateDirective,\n    VisibilityDirective,\n    DraggableDirective,\n    ResizeableDirective,\n    OrderableDirective,\n    LongPressDirective,\n    ScrollerComponent,\n    DatatableComponent,\n    DataTableColumnDirective,\n    DataTableHeaderComponent,\n    DataTableHeaderCellComponent,\n    DataTableBodyComponent,\n    DataTableFooterComponent,\n    DataTablePagerComponent,\n    ProgressBarComponent,\n    DataTableBodyRowComponent,\n    DataTableRowWrapperComponent,\n    DatatableRowDetailDirective,\n    DatatableGroupHeaderDirective,\n    DatatableRowDetailTemplateDirective,\n    DataTableBodyCellComponent,\n    DataTableSelectionComponent,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n    DataTableColumnCellTreeToggle,\n    DatatableFooterDirective,\n    DatatableGroupHeaderTemplateDirective,\n    DataTableSummaryRowComponent\n  ],\n  exports: [\n    DatatableComponent,\n    DatatableRowDetailDirective,\n    DatatableGroupHeaderDirective,\n    DatatableRowDetailTemplateDirective,\n    DataTableColumnDirective,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n    DataTableColumnCellTreeToggle,\n    DataTableFooterTemplateDirective,\n    DatatableFooterDirective,\n    DataTablePagerComponent,\n    DatatableGroupHeaderTemplateDirective\n  ]\n})\nexport class NgxDatatableModule {\n  /**\n   * Configure global configuration via INgxDatatableConfig\n   * @param configuration\n   */\n  static forRoot(configuration: INgxDatatableConfig): ModuleWithProviders<NgxDatatableModule> {\n    return {\n      ngModule: NgxDatatableModule,\n      providers: [{ provide: 'configuration', useValue: configuration }]\n    };\n  }\n}\n\n/**\n * Interface definition for INgxDatatableConfig global configuration\n */\nexport interface INgxDatatableConfig {\n  messages: {\n    emptyMessage: string; // Message to show when array is presented, but contains no values\n    totalMessage: string; // Footer total message\n    selectedMessage: string; // Footer selected message\n  };\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * service to make DatatableComponent aware of changes to\n * input bindings of DataTableColumnDirective\n */\n@Injectable()\nexport class ColumnChangesService {\n  private columnInputChanges = new Subject<undefined>();\n\n  get columnInputChanges$(): Observable<undefined> {\n    return this.columnInputChanges.asObservable();\n  }\n\n  onInputChange(): void {\n    this.columnInputChanges.next();\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n@Injectable()\nexport class DimensionsHelper {\n  getDimensions(element: Element): ClientRect {\n    return element.getBoundingClientRect();\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n@Injectable()\nexport class ScrollbarHelper {\n  width: number = this.getWidth();\n\n  constructor(@Inject(DOCUMENT) private document: any) {}\n\n  getWidth(): number {\n    const outer = this.document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n    outer.style.msOverflowStyle = 'scrollbar';\n    this.document.body.appendChild(outer);\n\n    const widthNoScroll = outer.offsetWidth;\n    outer.style.overflow = 'scroll';\n\n    const inner = this.document.createElement('div');\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n\n    const widthWithScroll = inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n\n    return widthNoScroll - widthWithScroll;\n  }\n}\n","export enum ClickType {\n  single = 'single',\n  double = 'double'\n}\n","export enum ColumnMode {\n  standard = 'standard',\n  flex = 'flex',\n  force = 'force'\n}\n","export enum ContextmenuType {\n  header = 'header',\n  body = 'body'\n}\n","export enum SelectionType {\n  single = 'single',\n  multi = 'multi',\n  multiClick = 'multiClick',\n  cell = 'cell',\n  checkbox = 'checkbox'\n}\n","export enum SortDirection {\n  asc = 'asc',\n  desc = 'desc'\n}\n","export enum SortType {\n  single = 'single',\n  multi = 'multi'\n}\n","/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n */\nexport function camelCase(str: string): string {\n  // Replace special characters with a space\n  str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n  // put a space before an uppercase letter\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n\n  // Lower case first character and some other stuff\n  str = str\n    .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\n    .trim()\n    .toLowerCase();\n\n  // uppercase characters preceded by a space or number\n  str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function (a, b, c) {\n    return b.trim() + c.toUpperCase();\n  });\n\n  return str;\n}\n\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n */\nexport function deCamelCase(str: string): string {\n  return str.replace(/([A-Z])/g, match => ` ${match}`).replace(/^./, match => match.toUpperCase());\n}\n","import { camelCase, deCamelCase } from './camel-case';\nimport { id } from './id';\nimport { getterForProp } from './column-prop-getters';\nimport { TableColumn } from '../types/table-column.type';\nimport { DataTableColumnDirective } from '../components/columns/column.directive';\n\n/**\n * Sets the column defaults\n */\nexport function setColumnDefaults(columns: TableColumn[]) {\n  if (!columns) return;\n\n  // Only one column should hold the tree view\n  // Thus if multiple columns are provided with\n  // isTreeColumn as true we take only the first one\n  let treeColumnFound: boolean = false;\n\n  for (const column of columns) {\n    if (!column.$$id) {\n      column.$$id = id();\n    }\n\n    // prop can be numeric; zero is valid not a missing prop\n    // translate name => prop\n    if (isNullOrUndefined(column.prop) && column.name) {\n      column.prop = camelCase(column.name);\n    }\n\n    if (!column.$$valueGetter) {\n      column.$$valueGetter = getterForProp(column.prop);\n    }\n\n    // format props if no name passed\n    if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = deCamelCase(String(column.prop));\n    }\n\n    if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = ''; // Fixes IE and Edge displaying `null`\n    }\n\n    if (!column.hasOwnProperty('resizeable')) {\n      column.resizeable = true;\n    }\n\n    if (!column.hasOwnProperty('sortable')) {\n      column.sortable = true;\n    }\n\n    if (!column.hasOwnProperty('draggable')) {\n      column.draggable = true;\n    }\n\n    if (!column.hasOwnProperty('canAutoResize')) {\n      column.canAutoResize = true;\n    }\n\n    if (!column.hasOwnProperty('width')) {\n      column.width = 150;\n    }\n\n    if (!column.hasOwnProperty('isTreeColumn')) {\n      column.isTreeColumn = false;\n    } else {\n      if (column.isTreeColumn && !treeColumnFound) {\n        // If the first column with isTreeColumn is true found\n        // we mark that treeCoulmn is found\n        treeColumnFound = true;\n      } else {\n        // After that isTreeColumn property for any other column\n        // will be set as false\n        column.isTreeColumn = false;\n      }\n    }\n  }\n}\n\nexport function isNullOrUndefined<T>(value: T | null | undefined): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Translates templates definitions to objects\n */\nexport function translateTemplates(templates: DataTableColumnDirective[]): any[] {\n  const result: any[] = [];\n  for (const temp of templates) {\n    const col: any = {};\n\n    const props = Object.getOwnPropertyNames(temp);\n    for (const prop of props) {\n      col[prop] = temp[prop];\n    }\n\n    if (temp.headerTemplate) {\n      col.headerTemplate = temp.headerTemplate;\n    }\n\n    if (temp.cellTemplate) {\n      col.cellTemplate = temp.cellTemplate;\n    }\n\n    if (temp.summaryFunc) {\n      col.summaryFunc = temp.summaryFunc;\n    }\n\n    if (temp.summaryTemplate) {\n      col.summaryTemplate = temp.summaryTemplate;\n    }\n\n    result.push(col);\n  }\n\n  return result;\n}\n","import { TableColumnProp } from '../types/table-column.type';\n\n// maybe rename this file to prop-getters.ts\n\nexport type ValueGetter = (obj: any, prop: TableColumnProp) => any;\n\n/**\n * Always returns the empty string ''\n */\nexport function emptyStringGetter(): string {\n  return '';\n}\n\n/**\n * Returns the appropriate getter function for this kind of prop.\n * If prop == null, returns the emptyStringGetter.\n */\nexport function getterForProp(prop: TableColumnProp): ValueGetter {\n  if (prop == null) {\n    return emptyStringGetter;\n  }\n\n  if (typeof prop === 'number') {\n    return numericIndexGetter;\n  } else {\n    // deep or simple\n    if (prop.indexOf('.') !== -1) {\n      return deepValueGetter;\n    } else {\n      return shallowValueGetter;\n    }\n  }\n}\n\n/**\n * Returns the value at this numeric index.\n * @param row array of values\n * @param index numeric index\n * @returns any or '' if invalid index\n */\nexport function numericIndexGetter(row: any[], index: number): any {\n  if (row == null) {\n    return '';\n  }\n  // mimic behavior of deepValueGetter\n  if (!row || index == null) {\n    return row;\n  }\n\n  const value = row[index];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n\n/**\n * Returns the value of a field.\n * (more efficient than deepValueGetter)\n * @param obj object containing the field\n * @param fieldName field name string\n */\nexport function shallowValueGetter(obj: any, fieldName: string): any {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !fieldName) {\n    return obj;\n  }\n\n  const value = obj[fieldName];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n\n/**\n * Returns a deep object given a string. zoo['animal.type']\n */\nexport function deepValueGetter(obj: any, path: string): any {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !path) {\n    return obj;\n  }\n\n  // check if path matches a root-level field\n  // { \"a.b.c\": 123 }\n  let current = obj[path];\n  if (current !== undefined) {\n    return current;\n  }\n\n  current = obj;\n  const split = path.split('.');\n\n  if (split.length) {\n    for (let i = 0; i < split.length; i++) {\n      current = current[split[i]];\n\n      // if found undefined, return empty string\n      if (current === undefined || current === null) {\n        return '';\n      }\n    }\n  }\n\n  return current;\n}\n","/**\n * Returns the columns by pin.\n */\nexport function columnsByPin(cols: any[]) {\n  const ret: { left: any; center: any; right: any } = {\n    left: [],\n    center: [],\n    right: []\n  };\n\n  if (cols) {\n    for (const col of cols) {\n      if (col.frozenLeft) {\n        ret.left.push(col);\n      } else if (col.frozenRight) {\n        ret.right.push(col);\n      } else {\n        ret.center.push(col);\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Returns the widths of all group sets of a column\n */\nexport function columnGroupWidths(groups: any, all: any) {\n  return {\n    left: columnTotalWidth(groups.left),\n    center: columnTotalWidth(groups.center),\n    right: columnTotalWidth(groups.right),\n    total: Math.floor(columnTotalWidth(all))\n  };\n}\n\n/**\n * Calculates the total width of all columns and their groups\n */\nexport function columnTotalWidth(columns: any[], prop?: string) {\n  let totalWidth = 0;\n\n  if (columns) {\n    for (const c of columns) {\n      const has = prop && c[prop];\n      const width = has ? c[prop] : c.width;\n      totalWidth = totalWidth + parseFloat(width);\n    }\n  }\n\n  return totalWidth;\n}\n\n/**\n * Calculates the total width of all columns and their groups\n */\nexport function columnsTotalWidth(columns: any, prop?: any) {\n  let totalWidth = 0;\n\n  for (const column of columns) {\n    const has = prop && column[prop];\n    totalWidth = totalWidth + (has ? column[prop] : column.width);\n  }\n\n  return totalWidth;\n}\n\nexport function columnsByPinArr(val: any) {\n  const colsByPinArr = [];\n  const colsByPin = columnsByPin(val);\n\n  colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\n  colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\n  colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\n\n  return colsByPinArr;\n}\n","if (typeof document !== 'undefined' && !document.elementsFromPoint) {\n  document.elementsFromPoint = elementsFromPoint;\n}\n\n/*tslint:disable*/\n/**\n * Polyfill for `elementsFromPoint`\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\n * https://gist.github.com/oslego/7265412\n */\nexport function elementsFromPoint(x: number, y: number) {\n  const elements = [];\n  const previousPointerEvents = [];\n  let current: any; // TODO: window.getComputedStyle should be used with inferred type (Element)\n  let i;\n  let d;\n\n  //if (document === undefined) return elements;\n\n  // get all elements via elementFromPoint, and remove them from hit-testing in order\n  while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\n    // push the element and its current style\n    elements.push(current);\n    previousPointerEvents.push({\n      value: current.style.getPropertyValue('pointer-events'),\n      priority: current.style.getPropertyPriority('pointer-events')\n    });\n\n    // add \"pointer-events: none\", to get to the underlying element\n    current.style.setProperty('pointer-events', 'none', 'important');\n  }\n\n  // restore the previous pointer-events values\n  for (i = previousPointerEvents.length; (d = previousPointerEvents[--i]); ) {\n    elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\n  }\n\n  // return our results\n  return elements;\n}\n/*tslint:enable*/\n","/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n */\nexport function id() {\n  return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n}\n","export enum Keys {\n  up = 38,\n  down = 40,\n  return = 13,\n  escape = 27,\n  left = 37,\n  right = 39\n}\n","import { columnsByPin, columnsTotalWidth } from './column';\n\n/**\n * Calculates the Total Flex Grow\n */\nexport function getTotalFlexGrow(columns: any[]) {\n  let totalFlexGrow = 0;\n\n  for (const c of columns) {\n    totalFlexGrow += c.flexGrow || 0;\n  }\n\n  return totalFlexGrow;\n}\n\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n */\nexport function adjustColumnWidths(allColumns: any, expectedWidth: any) {\n  const columnsWidth = columnsTotalWidth(allColumns);\n  const totalFlexGrow = getTotalFlexGrow(allColumns);\n  const colsByGroup = columnsByPin(allColumns);\n\n  if (columnsWidth !== expectedWidth) {\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n  }\n}\n\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n */\nfunction scaleColumns(colsByGroup: any, maxWidth: any, totalFlexGrow: any) {\n  // calculate total width and flexgrow points for coulumns that can be resized\n  for (const attr in colsByGroup) {\n    for (const column of colsByGroup[attr]) {\n      if (!column.canAutoResize) {\n        maxWidth -= column.width;\n        totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\n      } else {\n        column.width = 0;\n      }\n    }\n  }\n\n  const hasMinWidth = {};\n  let remainingWidth = maxWidth;\n\n  // resize columns until no width is left to be distributed\n  do {\n    const widthPerFlexPoint = remainingWidth / totalFlexGrow;\n    remainingWidth = 0;\n\n    for (const attr in colsByGroup) {\n      for (const column of colsByGroup[attr]) {\n        // if the column can be resize and it hasn't reached its minimum width yet\n        if (column.canAutoResize && !hasMinWidth[column.prop]) {\n          const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\n          if (column.minWidth !== undefined && newWidth < column.minWidth) {\n            remainingWidth += newWidth - column.minWidth;\n            column.width = column.minWidth;\n            hasMinWidth[column.prop] = true;\n          } else {\n            column.width = newWidth;\n          }\n        }\n      }\n    }\n  } while (remainingWidth !== 0);\n}\n\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when necessary\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proportion the widths given the min / max / normal widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proportional widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the original width; not the newly proportioned widths.\n */\nexport function forceFillColumnWidths(\n  allColumns: any[],\n  expectedWidth: number,\n  startIdx: number,\n  allowBleed: boolean,\n  defaultColWidth: number = 300\n) {\n  const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter(c => {\n    return c.canAutoResize !== false;\n  });\n\n  for (const column of columnsToResize) {\n    if (!column.$$oldWidth) {\n      column.$$oldWidth = column.width;\n    }\n  }\n\n  let additionWidthPerColumn = 0;\n  let exceedsWindow = false;\n  let contentWidth = getContentWidth(allColumns, defaultColWidth);\n  let remainingWidth = expectedWidth - contentWidth;\n  const columnsProcessed: any[] = [];\n  const remainingWidthLimit = 1; // when to stop\n\n  // This loop takes care of the\n  do {\n    additionWidthPerColumn = remainingWidth / columnsToResize.length;\n    exceedsWindow = contentWidth >= expectedWidth;\n\n    for (const column of columnsToResize) {\n      if (exceedsWindow && allowBleed) {\n        column.width = column.$$oldWidth || column.width || defaultColWidth;\n      } else {\n        const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n\n        if (column.minWidth && newSize < column.minWidth) {\n          column.width = column.minWidth;\n          columnsProcessed.push(column);\n        } else if (column.maxWidth && newSize > column.maxWidth) {\n          column.width = column.maxWidth;\n          columnsProcessed.push(column);\n        } else {\n          column.width = newSize;\n        }\n      }\n\n      column.width = Math.max(0, column.width);\n    }\n\n    contentWidth = getContentWidth(allColumns);\n    remainingWidth = expectedWidth - contentWidth;\n    removeProcessedColumns(columnsToResize, columnsProcessed);\n  } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\n}\n\n/**\n * Remove the processed columns from the current active columns.\n */\nfunction removeProcessedColumns(columnsToResize: any[], columnsProcessed: any[]) {\n  for (const column of columnsProcessed) {\n    const index = columnsToResize.indexOf(column);\n    columnsToResize.splice(index, 1);\n  }\n}\n\n/**\n * Gets the width of the columns\n */\nfunction getContentWidth(allColumns: any, defaultColWidth: number = 300): number {\n  let contentWidth = 0;\n\n  for (const column of allColumns) {\n    contentWidth += column.width || defaultColWidth;\n  }\n\n  return contentWidth;\n}\n","import { camelCase } from './camel-case';\n\nconst cache = {};\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\n\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nconst prefix = (function () {\n  const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\n  const match =\n    typeof styles !== 'undefined'\n      ? Array.prototype.slice\n          .call(styles)\n          .join('')\n          .match(/-(moz|webkit|ms)-/)\n      : null;\n  const pre = match !== null ? match[1] : undefined;\n  // tslint:disable-next-line: tsr-detect-non-literal-regexp\n  const dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\n\n  return dom\n    ? {\n        dom,\n        lowercase: pre,\n        css: `-${pre}-`,\n        js: pre[0].toUpperCase() + pre.substr(1)\n      }\n    : undefined;\n})();\n\nexport function getVendorPrefixedName(property: string) {\n  const name = camelCase(property);\n\n  if (!cache[name]) {\n    if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\n      cache[name] = prefix.css + property;\n    } else if (testStyle[property] !== undefined) {\n      cache[name] = property;\n    }\n  }\n\n  return cache[name];\n}\n","/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nexport class RowHeightCache {\n  /**\n   * Tree Array stores the cumulative information of the row heights to perform efficient\n   * range queries and updates.  Currently the tree is initialized to the base row\n   * height instead of the detail row height.\n   */\n  private treeArray: number[] = [];\n\n  /**\n   * Clear the Tree array.\n   */\n  clearCache(): void {\n    this.treeArray = [];\n  }\n\n  /**\n   * Initialize the Fenwick tree with row Heights.\n   *\n   * @param rows The array of rows which contain the expanded status.\n   * @param rowHeight The row height.\n   * @param detailRowHeight The detail row height.\n   */\n  initCache(details: any): void {\n    const { rows, rowHeight, detailRowHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } = details;\n    const isFn = typeof rowHeight === 'function';\n    const isDetailFn = typeof detailRowHeight === 'function';\n\n    if (!isFn && isNaN(rowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\n    }\n\n    // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n    if (!isDetailFn && isNaN(detailRowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\n        valid number or function value: (${detailRowHeight}) when 'scrollbarV' is enabled.`);\n    }\n\n    const n = externalVirtual ? rowCount : rows.length;\n    this.treeArray = new Array(n);\n\n    for (let i = 0; i < n; ++i) {\n      this.treeArray[i] = 0;\n    }\n\n    for (let i = 0; i < n; ++i) {\n      const row = rows[i];\n      let currentRowHeight = rowHeight;\n      if (isFn) {\n        currentRowHeight = rowHeight(row);\n      }\n\n      // Add the detail row height to the already expanded rows.\n      // This is useful for the table that goes through a filter or sort.\n      const expanded = rowExpansions.has(row);\n      if (row && expanded) {\n        if (isDetailFn) {\n          const index = rowIndexes.get(row);\n          currentRowHeight += detailRowHeight(row, index);\n        } else {\n          currentRowHeight += detailRowHeight;\n        }\n      }\n\n      this.update(i, currentRowHeight);\n    }\n  }\n\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.  Below handles edge cases.\n   */\n  getRowIndex(scrollY: number): number {\n    if (scrollY === 0) return 0;\n    return this.calcRowIndex(scrollY);\n  }\n\n  /**\n   * When a row is expanded or rowHeight is changed, update the height.  This can\n   * be utilized in future when Angular Data table supports dynamic row heights.\n   */\n  update(atRowIndex: number, byRowHeight: number): void {\n    if (!this.treeArray.length) {\n      throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\n        Row Height cache not initialized.`);\n    }\n\n    const n = this.treeArray.length;\n    atRowIndex |= 0;\n\n    while (atRowIndex < n) {\n      this.treeArray[atRowIndex] += byRowHeight;\n      atRowIndex |= atRowIndex + 1;\n    }\n  }\n\n  /**\n   * Range Sum query from 1 to the rowIndex\n   */\n  query(atIndex: number): number {\n    if (!this.treeArray.length) {\n      throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\n    }\n\n    let sum = 0;\n    atIndex |= 0;\n\n    while (atIndex >= 0) {\n      sum += this.treeArray[atIndex];\n      atIndex = (atIndex & (atIndex + 1)) - 1;\n    }\n\n    return sum;\n  }\n\n  /**\n   * Find the total height between 2 row indexes\n   */\n  queryBetween(atIndexA: number, atIndexB: number): number {\n    return this.query(atIndexB) - this.query(atIndexA - 1);\n  }\n\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.\n   */\n  private calcRowIndex(sum: number): number {\n    if (!this.treeArray.length) return 0;\n\n    let pos = -1;\n    const dataLength = this.treeArray.length;\n\n    // Get the highest bit for the block size.\n    const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n\n    for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n      const nextPos = pos + blockSize;\n      if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n        sum -= this.treeArray[nextPos];\n        pos = nextPos;\n      }\n    }\n\n    return pos + 1;\n  }\n}\n","export function selectRows(selected: any[], row: any, comparefn: any) {\n  const selectedIndex = comparefn(row, selected);\n\n  if (selectedIndex > -1) {\n    selected.splice(selectedIndex, 1);\n  } else {\n    selected.push(row);\n  }\n\n  return selected;\n}\n\nexport function selectRowsBetween(\n  selected: any[],\n  rows: any[],\n  index: number,\n  prevIndex: number,\n  comparefn: any\n): any[] {\n  const reverse = index < prevIndex;\n\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    const greater = i >= prevIndex && i <= index;\n    const lesser = i <= prevIndex && i >= index;\n\n    let range = { start: 0, end: 0 };\n    if (reverse) {\n      range = {\n        start: index,\n        end: prevIndex\n      };\n    } else {\n      range = {\n        start: prevIndex,\n        end: index + 1\n      };\n    }\n\n    if ((reverse && lesser) || (!reverse && greater)) {\n      // if in the positive range to be added to `selected`, and\n      // not already in the selected array, add it\n      if (i >= range.start && i <= range.end) {\n        selected.push(row);\n      }\n    }\n  }\n\n  return selected;\n}\n","import { getterForProp } from './column-prop-getters';\nimport { SortType } from '../types/sort.type';\nimport { SortDirection } from '../types/sort-direction.type';\nimport { SortPropDir } from '../types/sort-prop-dir.type';\n/**\n * Gets the next sort direction\n */\nexport function nextSortDir(sortType: SortType, current: SortDirection): SortDirection | undefined {\n  if (sortType === SortType.single) {\n    if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else {\n      return SortDirection.asc;\n    }\n  } else {\n    if (!current) {\n      return SortDirection.asc;\n    } else if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else if (current === SortDirection.desc) {\n      return undefined;\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n}\n\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n */\nexport function orderByComparator(a: any, b: any): number {\n  if (a === null || typeof a === 'undefined') a = 0;\n  if (b === null || typeof b === 'undefined') b = 0;\n  if (a instanceof Date && b instanceof Date) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n  } else if (isNaN(parseFloat(a)) || !isFinite(a) || isNaN(parseFloat(b)) || !isFinite(b)) {\n    // Convert to string in case of a=0 or b=0\n    a = String(a);\n    b = String(b);\n    // Isn't a number so lowercase the string to properly compare\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n  } else {\n    // Parse strings as numbers to compare properly\n    if (parseFloat(a) < parseFloat(b)) return -1;\n    if (parseFloat(a) > parseFloat(b)) return 1;\n  }\n\n  // equal each other\n  return 0;\n}\n\n/**\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\n * does not sort the `rows` argument in place\n */\nexport function sortRows(rows: any[], columns: any[], dirs: SortPropDir[]): any[] {\n  if (!rows) return [];\n  if (!dirs || !dirs.length || !columns) return [...rows];\n\n  /**\n   * record the row ordering of results from prior sort operations (if applicable)\n   * this is necessary to guarantee stable sorting behavior\n   */\n  const rowToIndexMap = new Map<any, number>();\n  rows.forEach((row, index) => rowToIndexMap.set(row, index));\n\n  const temp = [...rows];\n  const cols = columns.reduce((obj, col) => {\n    if (col.comparator && typeof col.comparator === 'function') {\n      obj[col.prop] = col.comparator;\n    }\n    return obj;\n  }, {});\n\n  // cache valueGetter and compareFn so that they\n  // do not need to be looked-up in the sort function body\n  const cachedDirs = dirs.map(dir => {\n    const prop = dir.prop;\n    return {\n      prop,\n      dir: dir.dir,\n      valueGetter: getterForProp(prop),\n      compareFn: cols[prop] || orderByComparator\n    };\n  });\n\n  return temp.sort(function (rowA: any, rowB: any) {\n    for (const cachedDir of cachedDirs) {\n      // Get property and valuegetters for column to be sorted\n      const { prop, valueGetter } = cachedDir;\n      // Get A and B cell values from rows based on properties of the columns\n      const propA = valueGetter(rowA, prop);\n      const propB = valueGetter(rowB, prop);\n\n      // Compare function gets five parameters:\n      // Two cell values to be compared as propA and propB\n      // Two rows corresponding to the cells as rowA and rowB\n      // Direction of the sort for this column as SortDirection\n      // Compare can be a standard JS comparison function (a,b) => -1|0|1\n      // as additional parameters are silently ignored. The whole row and sort\n      // direction enable more complex sort logic.\n      const comparison =\n        cachedDir.dir !== SortDirection.desc\n          ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir)\n          : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir);\n\n      // Don't return 0 yet in case of needing to sort by next property\n      if (comparison !== 0) return comparison;\n    }\n\n    if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB))) return 0;\n\n    /**\n     * all else being equal, preserve original order of the rows (stable sort)\n     */\n    return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\n  });\n}\n","/**\n * Throttle a function\n */\nexport function throttle(func: any, wait: number, options?: any) {\n  options = options || {};\n  let context: any;\n  let args: any;\n  let result: any;\n  let timeout: any = null;\n  let previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function (this: any) {\n    const now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nexport function throttleable(duration: number, options?: any) {\n  return function innerDecorator(target: any, key: PropertyKey, descriptor: PropertyDescriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n","import { getVendorPrefixedName } from './prefixes';\nimport { camelCase } from './camel-case';\n\n// browser detection and prefixing tools\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\nconst hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\n\nexport function translateXY(styles: any, x: number, y: number) {\n  if (typeof transform !== 'undefined' && hasCSSTransforms) {\n    if (!isSafari && hasCSS3DTransforms) {\n      styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\n      styles[backfaceVisibility] = 'hidden';\n    } else {\n      styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\n    }\n  } else {\n    styles.top = `${y}px`;\n    styles.left = `${x}px`;\n  }\n}\n","import { getterForProp } from './column-prop-getters';\nimport { TableColumnProp } from '../types/table-column.type';\n\nexport type OptionalValueGetter = (row: any) => any | undefined;\nexport function optionalGetterForProp(prop: TableColumnProp): OptionalValueGetter {\n  return prop && (row => getterForProp(prop)(row, prop));\n}\n\n/**\n * This functions rearrange items by their parents\n * Also sets the level value to each of the items\n *\n * Note: Expecting each item has a property called parentId\n * Note: This algorithm will fail if a list has two or more items with same ID\n * NOTE: This algorithm will fail if there is a deadlock of relationship\n *\n * For example,\n *\n * Input\n *\n * id -> parent\n * 1  -> 0\n * 2  -> 0\n * 3  -> 1\n * 4  -> 1\n * 5  -> 2\n * 7  -> 8\n * 6  -> 3\n *\n *\n * Output\n * id -> level\n * 1      -> 0\n * --3    -> 1\n * ----6  -> 2\n * --4    -> 1\n * 2      -> 0\n * --5    -> 1\n * 7     -> 8\n *\n *\n * @param rows\n *\n */\nexport function groupRowsByParents(rows: any[], from?: OptionalValueGetter, to?: OptionalValueGetter): any[] {\n  if (from && to) {\n    const nodeById = {};\n    const l = rows.length;\n    let node: TreeNode | null = null;\n\n    nodeById[0] = new TreeNode(); // that's the root node\n\n    const uniqIDs = rows.reduce((arr, item) => {\n      const toValue = to(item);\n      if (arr.indexOf(toValue) === -1) {\n        arr.push(toValue);\n      }\n      return arr;\n    }, []);\n\n    for (let i = 0; i < l; i++) {\n      // make TreeNode objects for each item\n      nodeById[to(rows[i])] = new TreeNode(rows[i]);\n    }\n\n    for (let i = 0; i < l; i++) {\n      // link all TreeNode objects\n      node = nodeById[to(rows[i])];\n      let parent = 0;\n      const fromValue = from(node.row);\n      if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\n        parent = fromValue;\n      }\n      node.parent = nodeById[parent];\n      node.row['level'] = node.parent.row['level'] + 1;\n      node.parent.children.push(node);\n    }\n\n    let resolvedRows: any[] = [];\n    nodeById[0].flatten(function () {\n      resolvedRows = [...resolvedRows, this.row];\n    }, true);\n\n    return resolvedRows;\n  } else {\n    return rows;\n  }\n}\n\nclass TreeNode {\n  public row: any;\n  public parent: any;\n  public children: any[];\n\n  constructor(row: any | null = null) {\n    if (!row) {\n      row = {\n        level: -1,\n        treeStatus: 'expanded'\n      };\n    }\n    this.row = row;\n    this.parent = null;\n    this.children = [];\n  }\n\n  flatten(f: any, recursive: boolean) {\n    if (this.row['treeStatus'] === 'expanded') {\n      for (let i = 0, l = this.children.length; i < l; i++) {\n        const child = this.children[i];\n        f.apply(child, Array.prototype.slice.call(arguments, 2));\n        if (recursive) child.flatten.apply(child, arguments);\n      }\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-datatable\n */\n\n// components\nexport * from './lib/ngx-datatable.module';\nexport * from './lib/components/datatable.component';\nexport * from './lib/components/header/header.component';\nexport * from './lib/components/header/header-cell.component';\nexport * from './lib/components/body/body.component';\nexport * from './lib/components/body/body-cell.component';\nexport * from './lib/components/body/body-row.component';\nexport * from './lib/components/body/progress-bar.component';\nexport * from './lib/components/body/scroller.component';\nexport * from './lib/components/body/body-row-wrapper.component';\nexport * from './lib/components/body/selection.component';\nexport * from './lib/components/body/body-group-header.directive';\nexport * from './lib/components/body/body-group-header-template.directive';\nexport * from './lib/components/body/summary/summary-row.component';\nexport * from './lib/components/footer/footer.component';\nexport * from './lib/components/footer/pager.component';\nexport * from './lib/components/footer/footer.directive';\nexport * from './lib/components/footer/footer-template.directive';\nexport * from './lib/components/columns/column.directive';\nexport * from './lib/components/columns/column-header.directive';\nexport * from './lib/components/columns/column-cell.directive';\nexport * from './lib/components/columns/tree.directive';\nexport * from './lib/components/row-detail/row-detail.directive';\nexport * from './lib/components/row-detail/row-detail-template.directive';\n\n// directives\nexport * from './lib/directives/draggable.directive';\nexport * from './lib/directives/long-press.directive';\nexport * from './lib/directives/orderable.directive';\nexport * from './lib/directives/resizeable.directive';\nexport * from './lib/directives/visibility.directive';\n\n// services\nexport * from './lib/services/scrollbar-helper.service';\nexport * from './lib/services/dimensions-helper.service';\nexport * from './lib/services/column-changes.service';\n\n// types\nexport * from './lib/types/column-mode.type';\nexport * from './lib/types/sort.type';\nexport * from './lib/types/sort-direction.type';\nexport * from './lib/types/selection.type';\nexport * from './lib/types/click.type';\nexport * from './lib/types/table-column.type';\nexport * from './lib/types/sort-prop-dir.type';\nexport * from './lib/types/contextmenu.type';\n\n// utils\nexport * from './lib/utils/id';\nexport * from './lib/utils/column';\nexport * from './lib/utils/column-prop-getters';\nexport * from './lib/utils/camel-case';\nexport * from './lib/utils/keys';\nexport * from './lib/utils/math';\nexport * from './lib/utils/prefixes';\nexport * from './lib/utils/selection';\nexport * from './lib/utils/translate';\nexport * from './lib/utils/throttle';\nexport * from './lib/utils/sort';\nexport * from './lib/utils/row-height-cache';\nexport * from './lib/utils/column-helper';\nexport * from './lib/utils/elm-from-point';\nexport * from './lib/utils/tree';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","<div [class.dark]=\"state === 'dark'\">\n  <nav>\n    <h3>\n      ngx-datatable <small>({{ version }})</small>\n    </h3>\n    <ul class=\"main-ul\">\n      <li>\n        <h4>Documentation</h4>\n        <ul>\n          <li>\n            <a href=\"https://swimlane.gitbooks.io/ngx-datatable/content/\" target=\"_black\">Online</a>\n          </li>\n          <li>\n            <a href=\"https://www.gitbook.com/download/pdf/book/swimlane/ngx-datatable\" target=\"_black\">PDF</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Basic</h4>\n        <ul>\n          <li>\n            <a href=\"#virtual-scroll\" (click)=\"state = 'virtual-scroll'\">10k Rows</a>\n          </li>\n          <li>\n            <a href=\"#full-screen\" (click)=\"state = 'full-screen'\">Full Screen</a>\n          </li>\n          <li>\n            <a href=\"#inline-edit\" (click)=\"state = 'inline-edit'\">Inline Editing</a>\n          </li>\n          <li>\n            <a href=\"#horz-vert-scrolling\" (click)=\"state = 'horz-vert-scrolling'\">Horz/Vert Scrolling</a>\n          </li>\n          <li>\n            <a href=\"#multiple-tables\" (click)=\"state = 'multiple-tables'\">Multiple Tables</a>\n          </li>\n          <li><a href=\"#filter\" (click)=\"state = 'filter'\">Filtering</a></li>\n          <li>\n            <a href=\"#hidden\" (click)=\"state = 'hidden'\">Hidden On Load</a>\n          </li>\n          <li><a href=\"#live\" (click)=\"state = 'live'\">Live Data</a></li>\n          <li><a href=\"#rx\" (click)=\"state = 'rx'\">RxJS</a></li>\n          <li>\n            <a href=\"#contextmenu\" (click)=\"state = 'contextmenu'\">Context Menu</a>\n          </li>\n          <li><a href=\"#css\" (click)=\"state = 'css'\">CSS Classes</a></li>\n          <li>\n            <a href=\"#footer\" (click)=\"state = 'footer'\">Footer Template</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Themes</h4>\n        <ul>\n          <li><a href=\"#dark\" (click)=\"state = 'dark'\">Dark theme</a></li>\n          <li>\n            <a href=\"#bootstrap\" (click)=\"state = 'bootstrap'\">Bootstrap theme</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Tree</h4>\n        <ul>\n          <li>\n            <a href=\"#fullscreen-tree\" (click)=\"state = 'fullscreen-tree'\">Full screen Tree</a>\n          </li>\n          <li>\n            <a href=\"#client-tree\" (click)=\"state = 'client-tree'\">Client Side Tree</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Rows</h4>\n        <ul>\n          <li>\n            <a href=\"#row-grouping\" (click)=\"state = 'row-grouping'\">Row Grouping</a>\n          </li>\n          <li><a href=\"#\" (click)=\"state = ''\">Fluid Row Height</a></li>\n          <li>\n            <a href=\"#basic-fixed\" (click)=\"state = 'basic-fixed'\">Fixed Row Height</a>\n          </li>\n          <li>\n            <a href=\"#dynamic\" (click)=\"state = 'dynamic'\">Dynamic Row Height</a>\n          </li>\n          <li>\n            <a href=\"#row-details\" (click)=\"state = 'row-details'\">Row Detail</a>\n          </li>\n          <li>\n            <a href=\"#responsive\" (click)=\"state = 'responsive'\">Responsive</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Paging</h4>\n        <ul>\n          <li>\n            <a href=\"#client-paging\" (click)=\"state = 'client-paging'\">Client-side</a>\n          </li>\n          <li>\n            <a href=\"#server-paging\" (click)=\"state = 'server-paging'\">Server-side</a>\n          </li>\n          <li>\n            <a href=\"#paging-scrolling-novirtualization\" (click)=\"state = 'paging-scrolling-novirtualization'\"\n              >Scrolling no virtual</a\n            >\n          </li>\n          <li>\n            <a href=\"#server-scrolling\" (click)=\"state = 'server-scrolling'\">Scrolling server-side</a>\n          </li>\n          <li>\n            <a href=\"#virtual-paging\" (click)=\"state = 'virtual-paging'\">Virtual server-side</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Sorting</h4>\n        <ul>\n          <li>\n            <a href=\"#client-sorting\" (click)=\"state = 'client-sorting'\">Client-side</a>\n          </li>\n          <li>\n            <a href=\"#default-sorting\" (click)=\"state = 'default-sorting'\">Default sort</a>\n          </li>\n          <li>\n            <a href=\"#server-sorting\" (click)=\"state = 'server-sorting'\">Server-side</a>\n          </li>\n          <li>\n            <a href=\"#comparator-sorting\" (click)=\"state = 'comparator-sorting'\">Comparator</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Selection</h4>\n        <ul>\n          <li>\n            <a href=\"#cell-selection\" (click)=\"state = 'cell-selection'\">Cell</a>\n          </li>\n          <li>\n            <a href=\"#single-selection\" (click)=\"state = 'single-selection'\">Single Row</a>\n          </li>\n          <li>\n            <a href=\"#multi-selection\" (click)=\"state = 'multi-selection'\">Multi Row</a>\n          </li>\n          <li>\n            <a href=\"#multi-click-selection\" (click)=\"state = 'multi-click-selection'\">Multi Click Row</a>\n          </li>\n          <li>\n            <a href=\"#multidisable-selection\" (click)=\"state = 'multidisable-selection'\">Disable Callback</a>\n          </li>\n          <li>\n            <a href=\"#chkbox-selection\" (click)=\"state = 'chkbox-selection'\">Checkbox</a>\n          </li>\n          <li>\n            <a href=\"#chkbox-selection-template\" (click)=\"state = 'chkbox-selection-template'\">Custom Checkbox</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Templates</h4>\n        <ul>\n          <li><a href=\"#inline\" (click)=\"state = 'inline'\">Inline</a></li>\n          <li>\n            <a href=\"#templateref\" (click)=\"state = 'templateref'\">TemplateRef</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Column</h4>\n        <ul>\n          <li><a href=\"#flex\" (click)=\"state = 'flex'\">Flex</a></li>\n          <li><a href=\"#toggle\" (click)=\"state = 'toggle'\">Toggling</a></li>\n          <li><a href=\"#fixed\" (click)=\"state = 'fixed'\">Fixed</a></li>\n          <li><a href=\"#force\" (click)=\"state = 'force'\">Force</a></li>\n          <li><a href=\"#pinning\" (click)=\"state = 'pinning'\">Pinning</a></li>\n          <li><a href=\"#reorder\" (click)=\"state = 'reorder'\">Reorder</a></li>\n        </ul>\n      </li>\n      <li>\n        <h4>Summary Row</h4>\n        <ul>\n          <li>\n            <a href=\"#simple-summary\" (click)=\"state = 'simple-summary'\">Simple</a>\n          </li>\n          <li>\n            <a href=\"#custom-template-summary\" (click)=\"state = 'custom-template-summary'\">Custom Template</a>\n          </li>\n          <li>\n            <a href=\"#paging-summary\" (click)=\"state = 'paging-summary'\">Server-side paging</a>\n          </li>\n          <li>\n            <a href=\"#inline-html-summary\" (click)=\"state = 'inline-html-summary'\">Inline HTML</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n  <content>\n    <!-- Basic -->\n    <basic-auto-demo *ngIf=\"!state\"></basic-auto-demo>\n    <basic-fixed-demo *ngIf=\"state === 'basic-fixed'\"></basic-fixed-demo>\n    <full-screen-demo *ngIf=\"state === 'full-screen'\"></full-screen-demo>\n    <inline-edit-demo *ngIf=\"state === 'inline-edit'\"></inline-edit-demo>\n    <virtual-scroll-demo *ngIf=\"state === 'virtual-scroll'\"></virtual-scroll-demo>\n    <horz-vert-scrolling-demo *ngIf=\"state === 'horz-vert-scrolling'\"></horz-vert-scrolling-demo>\n    <multiple-tables-demo *ngIf=\"state === 'multiple-tables'\"></multiple-tables-demo>\n    <row-details-demo *ngIf=\"state === 'row-details'\"></row-details-demo>\n    <responsive-demo *ngIf=\"state === 'responsive'\"></responsive-demo>\n    <filter-demo *ngIf=\"state === 'filter'\"></filter-demo>\n    <tabs-demo *ngIf=\"state === 'hidden'\"></tabs-demo>\n    <live-data-demo *ngIf=\"state === 'live'\"></live-data-demo>\n    <rx-demo *ngIf=\"state === 'rx'\"></rx-demo>\n    <contextmenu-demo *ngIf=\"state === 'contextmenu'\"></contextmenu-demo>\n    <row-css-demo *ngIf=\"state === 'css'\"></row-css-demo>\n    <dynamic-height-demo *ngIf=\"state === 'dynamic'\"></dynamic-height-demo>\n    <footer-demo *ngIf=\"state === 'footer'\"></footer-demo>\n\n    <!-- Themes -->\n    <basic-dark-theme-demo *ngIf=\"state === 'dark'\"></basic-dark-theme-demo>\n    <basic-bootstrap-theme-demo *ngIf=\"state === 'bootstrap'\"></basic-bootstrap-theme-demo>\n\n    <!-- Tree -->\n    <full-screen-tree-demo *ngIf=\"state === 'fullscreen-tree'\"></full-screen-tree-demo>\n    <client-side-tree-demo *ngIf=\"state === 'client-tree'\"></client-side-tree-demo>\n\n    <!-- Paging -->\n    <row-grouping-demo *ngIf=\"state === 'row-grouping'\"></row-grouping-demo>\n    <client-paging-demo *ngIf=\"state === 'client-paging'\"></client-paging-demo>\n    <server-paging-demo *ngIf=\"state === 'server-paging'\"></server-paging-demo>\n    <paging-scrolling-novirtualization-demo\n      *ngIf=\"state === 'paging-scrolling-novirtualization'\"\n    ></paging-scrolling-novirtualization-demo>\n    <server-scrolling-demo *ngIf=\"state === 'server-scrolling'\"></server-scrolling-demo>\n    <virtual-paging-demo *ngIf=\"state === 'virtual-paging'\"></virtual-paging-demo>\n\n    <!-- Sorting -->\n    <client-sorting-demo *ngIf=\"state === 'client-sorting'\"></client-sorting-demo>\n    <default-sorting-demo *ngIf=\"state === 'default-sorting'\"></default-sorting-demo>\n    <server-sorting-demo *ngIf=\"state === 'server-sorting'\"></server-sorting-demo>\n    <comparator-sorting-demo *ngIf=\"state === 'comparator-sorting'\"></comparator-sorting-demo>\n\n    <!-- Selection -->\n    <cell-selection-demo *ngIf=\"state === 'cell-selection'\"></cell-selection-demo>\n    <single-selection-demo *ngIf=\"state === 'single-selection'\"></single-selection-demo>\n    <multi-selection-demo *ngIf=\"state === 'multi-selection'\"></multi-selection-demo>\n    <multidisable-selection-demo *ngIf=\"state === 'multidisable-selection'\"></multidisable-selection-demo>\n    <chkbox-selection-demo *ngIf=\"state === 'chkbox-selection'\"></chkbox-selection-demo>\n    <chkbox-selection-template-demo *ngIf=\"state === 'chkbox-selection-template'\"></chkbox-selection-template-demo>\n    <multi-click-selection-demo *ngIf=\"state === 'multi-click-selection'\"></multi-click-selection-demo>\n\n    <!-- Templates -->\n    <template-ref-demo *ngIf=\"state === 'templateref'\"></template-ref-demo>\n    <inline-templates-demo *ngIf=\"state === 'inline'\"></inline-templates-demo>\n\n    <!-- Columns -->\n    <column-flex-demo *ngIf=\"state === 'flex'\"></column-flex-demo>\n    <column-toggle-demo *ngIf=\"state === 'toggle'\"></column-toggle-demo>\n    <column-standard-demo *ngIf=\"state === 'fixed'\"></column-standard-demo>\n    <column-force-demo *ngIf=\"state === 'force'\"></column-force-demo>\n    <column-pinning-demo *ngIf=\"state === 'pinning'\"></column-pinning-demo>\n    <column-reorder-demo *ngIf=\"state === 'reorder'\"></column-reorder-demo>\n\n    <!-- Summary row -->\n    <summary-row-simple-demo *ngIf=\"state === 'simple-summary'\"></summary-row-simple-demo>\n    <summary-row-custom-template-demo *ngIf=\"state === 'custom-template-summary'\"> </summary-row-custom-template-demo>\n    <summary-row-server-paging-demo *ngIf=\"state === 'paging-summary'\"> </summary-row-server-paging-demo>\n    <summary-row-inline-html *ngIf=\"state === 'inline-html-summary'\"></summary-row-inline-html>\n  </content>\n</div>\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy, Location } from '@angular/common';\nimport packageInfo from 'projects/swimlane/ngx-datatable/package.json';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: [\n    './app.component.scss',\n    '../../projects/swimlane/ngx-datatable/src/lib/themes/material.scss',\n    '../../projects/swimlane/ngx-datatable/src/lib/themes/dark.scss',\n    '../../projects/swimlane/ngx-datatable/src/lib/themes/bootstrap.scss'\n  ],\n  providers: [\n    Location,\n    {\n      provide: LocationStrategy,\n      useClass: HashLocationStrategy\n    }\n  ]\n})\nexport class AppComponent {\n  state: any;\n\n  version = packageInfo.version;\n\n  constructor(location: Location) {\n    this.state = location.path(true);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgxDatatableModule } from '../../projects/swimlane/ngx-datatable/src/public-api';\nimport { AppComponent } from './app.component';\n\n// -- Basic\nimport { BasicFixedComponent } from './basic/basic-fixed.component';\nimport { BasicAutoComponent } from './basic/basic-auto.component';\nimport { VirtualScrollComponent } from './basic/virtual.component';\nimport { InlineEditComponent } from './basic/inline.component';\nimport { HorzVertScrolling } from './basic/scrolling.component';\nimport { MultipleTablesComponent } from './basic/multiple.component';\nimport { FullScreenComponent } from './basic/fullscreen.component';\nimport { RowDetailsComponent } from './basic/row-detail.component';\nimport { ResponsiveComponent } from './basic/responsive.component';\nimport { FilterBarComponent } from './basic/filter.component';\nimport { TabsDemoComponent } from './basic/tabs.component';\nimport { LiveDataComponent } from './basic/live.component';\nimport { RxDemoComponent } from './basic/rx.component';\nimport { ContextMenuDemoComponent } from './basic/contextmenu.component';\nimport { RowCssComponent } from './basic/css.component';\nimport { DynamicHeightComponent } from './basic/dynamic-height.component';\nimport { FooterDemoComponent } from './basic/footer.component';\nimport { RowGroupingComponent } from './basic/row-grouping.component';\n\n// -- Themes\nimport { BootstrapThemeComponent } from './basic/bootstrap.component';\nimport { DarkThemeComponent } from './basic/dark-theme.component';\n\n// -- Paging\nimport { ClientPagingComponent } from './paging/paging-client.component';\nimport { ServerPagingComponent } from './paging/paging-server.component';\nimport { ServerScrollingComponent } from './paging/scrolling-server.component';\nimport { VirtualPagingComponent } from './paging/paging-virtual.component';\nimport { PagingScrollingNoVirtualizationComponent } from './paging/paging-scrolling-novirtualization.component';\n\n// -- Sorting\nimport { SortingComparatorComponent } from './sorting/sorting-comparator.component';\nimport { DefaultSortingComponent } from './sorting/sorting-default.component';\nimport { ServerSortingComponent } from './sorting/sorting-server.component';\nimport { ClientSortingComponent } from './sorting/sorting-client.component';\n\n// -- Templates\nimport { InlineTemplatesComponent } from './templates/template-dom.component';\nimport { TemplateRefTemplatesComponent } from './templates/template-obj.component';\n\n// -- Tree\nimport { FullScreenTreeComponent } from './tree/fullscreen.component';\nimport { ClientTreeComponent } from './tree/client-tree.component';\n\n// -- Selection\nimport { CellSelectionComponent } from './selection/selection-cell.component';\nimport { MultiSelectionComponent } from './selection/selection-multi.component';\nimport { SingleSelectionComponent } from './selection/selection-single.component';\nimport { MultiDisableSelectionComponent } from './selection/selection-disabled.component';\nimport { CheckboxSelectionComponent } from './selection/selection-chkbox.component';\nimport { MultiClickSelectionComponent } from './selection/selection-multi-click.component';\nimport { CustomCheckboxSelectionComponent } from './selection/selection-chkbox-template.component';\n\n// -- Columns\nimport { ColumnToggleComponent } from './columns/column-toggle.component';\nimport { ColumnStandardComponent } from './columns/column-standard.component';\nimport { ColumnForceComponent } from './columns/column-force.component';\nimport { ColumnFlexComponent } from './columns/column-flex.component';\nimport { ColumnPinningComponent } from './columns/pinning.component';\nimport { ColumnReorderComponent } from './columns/column-reorder.component';\n\n// -- Summary row\nimport { SummaryRowSimpleComponent } from './summary/summary-row-simple.component';\nimport { SummaryRowCustomTemplateComponent } from './summary/summary-row-custom-template.component';\nimport { SummaryRowServerPagingComponent } from './summary/summary-row-server-paging.component';\nimport { SummaryRowInlineHtmlComponent } from './summary/summary-row-inline-html.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BasicAutoComponent,\n    BasicFixedComponent,\n    FullScreenComponent,\n    FullScreenTreeComponent,\n    InlineEditComponent,\n    VirtualScrollComponent,\n    HorzVertScrolling,\n    MultipleTablesComponent,\n    RowDetailsComponent,\n    ResponsiveComponent,\n    ClientPagingComponent,\n    ServerPagingComponent,\n    PagingScrollingNoVirtualizationComponent,\n    ServerScrollingComponent,\n    ClientSortingComponent,\n    DefaultSortingComponent,\n    ServerSortingComponent,\n    SortingComparatorComponent,\n    CellSelectionComponent,\n    MultiSelectionComponent,\n    InlineTemplatesComponent,\n    TemplateRefTemplatesComponent,\n    ColumnFlexComponent,\n    ColumnToggleComponent,\n    ColumnStandardComponent,\n    ColumnForceComponent,\n    ColumnPinningComponent,\n    ColumnReorderComponent,\n    FilterBarComponent,\n    VirtualPagingComponent,\n    DarkThemeComponent,\n    TabsDemoComponent,\n    SingleSelectionComponent,\n    LiveDataComponent,\n    MultiDisableSelectionComponent,\n    RxDemoComponent,\n    ContextMenuDemoComponent,\n    CheckboxSelectionComponent,\n    CustomCheckboxSelectionComponent,\n    MultiClickSelectionComponent,\n    RowCssComponent,\n    DynamicHeightComponent,\n    FooterDemoComponent,\n    RowGroupingComponent,\n    BootstrapThemeComponent,\n    ClientTreeComponent,\n    SummaryRowSimpleComponent,\n    SummaryRowCustomTemplateComponent,\n    SummaryRowServerPagingComponent,\n    SummaryRowInlineHtmlComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    NgxDatatableModule.forRoot({\n      messages: {\n        emptyMessage: 'No data to display', // Message to show when array is presented, but contains no values\n        totalMessage: 'total', // Footer total message\n        selectedMessage: 'selected' // Footer selected message\n      }\n    })\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'basic-auto-demo',\n  template: `\n    <div>\n      <h3>\n        Fluid Row Heights\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/basic-auto.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [loadingIndicator]=\"loadingIndicator\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [reorderable]=\"reorderable\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class BasicAutoComponent {\n  rows = [];\n  loadingIndicator = true;\n  reorderable = true;\n\n  columns = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company', sortable: false }];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n      setTimeout(() => {\n        this.loadingIndicator = false;\n      }, 1500);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'basic-fixed-demo',\n  template: `\n    <div>\n      <h3>\n        Fix Row Height\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/basic-fixed.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material striped\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class BasicFixedComponent {\n  rows = [];\n  columns = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'basic-bootstrap-theme-demo',\n  template: `\n    <div>\n      <h3>\n        Bootstrap Theme\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/bootstrap.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"bootstrap\"\n        [rows]=\"rows\"\n        [loadingIndicator]=\"loadingIndicator\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"40\"\n        [summaryRow]=\"true\"\n        [summaryPosition]=\"'bottom'\"\n        [footerHeight]=\"40\"\n        [limit]=\"10\"\n        rowHeight=\"auto\"\n        [reorderable]=\"reorderable\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class BootstrapThemeComponent {\n  rows = [];\n  loadingIndicator = true;\n  reorderable = true;\n\n  columns = [\n    { prop: 'name', summaryFunc: () => null },\n    { name: 'Gender', summaryFunc: cells => this.summaryForGender(cells) },\n    { name: 'Company', summaryFunc: () => null }\n  ];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n      setTimeout(() => {\n        this.loadingIndicator = false;\n      }, 1500);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  private summaryForGender(cells: string[]) {\n    const males = cells.filter(cell => cell === 'male').length;\n    const females = cells.filter(cell => cell === 'female').length;\n\n    return `males: ${males}, females: ${females}`;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'contextmenu-demo',\n  template: `\n    <div>\n      <h3>\n        Context Menu Event\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/contextmenu.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div class=\"info\">\n        <p>\n          <strong>Note:</strong> ngx-datatable does not provide a context menu feature. This demonstrates how you would\n          access the <code>contextmenu</code> event to display your own custom context menu.\n        </p>\n        <p *ngIf=\"rawEvent\">\n          <strong>Mouse position:</strong> <code>(x: {{ rawEvent?.x }}, y: {{ rawEvent?.y }})</code>\n        </p>\n        <p *ngIf=\"contextmenuRow\"><strong>Row:</strong> {{ contextmenuRow?.name }}</p>\n        <p *ngIf=\"contextmenuColumn\">\n          <strong>Header:</strong> name: {{ contextmenuColumn?.name }} prop: {{ contextmenuColumn?.prop }}\n        </p>\n      </div>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        (tableContextmenu)=\"onTableContextMenu($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ContextMenuDemoComponent {\n  rows = [];\n\n  columns = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company' }];\n\n  rawEvent: any;\n  contextmenuRow: any;\n  contextmenuColumn: any;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  onTableContextMenu(contextMenuEvent) {\n    console.log(contextMenuEvent);\n\n    this.rawEvent = contextMenuEvent.event;\n    if (contextMenuEvent.type === 'body') {\n      this.contextmenuRow = contextMenuEvent.content;\n      this.contextmenuColumn = undefined;\n    } else {\n      this.contextmenuColumn = contextMenuEvent.content;\n      this.contextmenuRow = undefined;\n    }\n\n    contextMenuEvent.event.preventDefault();\n    contextMenuEvent.event.stopPropagation();\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'row-css-demo',\n  template: `\n    <div>\n      <h3>\n        Row/Header/Cell CSS Class Demo\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/css.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [rowClass]=\"getRowClass\"\n        [scrollbarV]=\"true\"\n      >\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" headerClass=\"is-gender\" [cellClass]=\"getCellClass\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class RowCssComponent {\n  rows = [];\n  expanded = {};\n  timeout: any;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      const rows = JSON.parse(req.response);\n      cb(rows.splice(0, 50));\n    };\n\n    req.send();\n  }\n\n  getRowClass(row) {\n    return {\n      'age-is-ten': row.age % 10 === 0\n    };\n  }\n\n  getCellClass({ row, column, value }): any {\n    return {\n      'is-female': value === 'female'\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'basic-dark-theme-demo',\n  template: `\n    <div>\n      <h3>\n        Dark Theme\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/dark-theme.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"dark\"\n        [rows]=\"rows\"\n        [loadingIndicator]=\"loadingIndicator\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"40\"\n        [summaryRow]=\"true\"\n        [footerHeight]=\"40\"\n        [limit]=\"10\"\n        rowHeight=\"auto\"\n        [reorderable]=\"reorderable\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class DarkThemeComponent {\n  rows = [];\n  loadingIndicator = true;\n  reorderable = true;\n\n  columns = [\n    { prop: 'name', summaryFunc: () => null },\n    { name: 'Gender', summaryFunc: cells => this.summaryForGender(cells) },\n    { name: 'Company', summaryFunc: () => null }\n  ];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n      setTimeout(() => {\n        this.loadingIndicator = false;\n      }, 1500);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  private summaryForGender(cells: string[]) {\n    const males = cells.filter(cell => cell === 'male').length;\n    const females = cells.filter(cell => cell === 'female').length;\n\n    return `males: ${males}, females: ${females}`;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'dynamic-height-demo',\n  template: `\n    <div>\n      <h3>\n        Dynamic Height w/ Virtual Scrolling\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/dynamic-height.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"getRowHeight\"\n        [scrollbarV]=\"true\"\n      >\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Row Height\" prop=\"height\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class DynamicHeightComponent {\n  rows = [];\n  expanded = {};\n  timeout: any;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      const rows = JSON.parse(req.response).splice(0, 100);\n\n      for (const row of rows) {\n        row.height = Math.floor(Math.random() * 80) + 50;\n      }\n\n      cb(rows);\n    };\n\n    req.send();\n  }\n\n  getRowHeight(row) {\n    console.log('ROW', row);\n    if (!row) {\n      return 50;\n    }\n    if (row.height === undefined) {\n      return 50;\n    }\n    return row.height;\n  }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { DatatableComponent } from '../../../projects/swimlane/ngx-datatable/src/lib/components/datatable.component';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'filter-demo',\n  template: `\n    <div>\n      <h3>\n        Client-side Search and Filtering\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/filter.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <input\n        type=\"text\"\n        style=\"padding:8px;margin:15px auto;width:30%;\"\n        placeholder=\"Type to filter the name column...\"\n        (keyup)=\"updateFilter($event)\"\n      />\n      <ngx-datatable\n        #table\n        class=\"material\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [limit]=\"10\"\n        [rows]=\"rows\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class FilterBarComponent {\n  rows = [];\n\n  temp = [];\n\n  columns = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      // cache our list\n      this.temp = [...data];\n\n      // push our inital complete list\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    // filter our data\n    const temp = this.temp.filter(function (d) {\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n\n    // update the rows\n    this.rows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'footer-demo',\n  template: `\n    <div>\n      <h3>\n        Custom Footer\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/footer.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [footerHeight]=\"100\"\n        [headerHeight]=\"50\"\n        rowHeight=\"auto\"\n      >\n        <ngx-datatable-footer *ngIf=\"true\">\n          <ng-template\n            ngx-datatable-footer-template\n            let-rowCount=\"rowCount\"\n            let-pageSize=\"pageSize\"\n            let-selectedCount=\"selectedCount\"\n            let-curPage=\"curPage\"\n            let-offset=\"offset\"\n          >\n            <div style=\"padding: 5px 10px\">\n              <div><strong>Summary</strong>: Gender: Female</div>\n              <hr style=\"width:100%\" />\n              <div>Rows: {{ rowCount }} | Size: {{ pageSize }} | Current: {{ curPage }} | Offset: {{ offset }}</div>\n            </div>\n          </ng-template>\n        </ngx-datatable-footer>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class FooterDemoComponent {\n  rows = [];\n\n  columns = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company' }];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'full-screen-demo',\n  template: `\n    <div>\n      <h3>\n        Full Screen\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/fullscreen.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material fullscreen\"\n        style=\"top: 52px\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"0\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [scrollbarH]=\"true\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"Id\" [width]=\"80\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Name\" [width]=\"300\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"City\" [width]=\"300\" prop=\"address.city\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"State\" [width]=\"300\" prop=\"address.state\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class FullScreenComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'inline-edit-demo',\n  template: `\n    <div>\n      <h3>\n        Inline Editing\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/inline.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        #mydatatable\n        class=\"material\"\n        [headerHeight]=\"50\"\n        [limit]=\"5\"\n        [columnMode]=\"ColumnMode.force\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"Name\">\n          <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\" let-row=\"row\">\n            <span\n              title=\"Double click to edit\"\n              (dblclick)=\"editing[rowIndex + '-name'] = true\"\n              *ngIf=\"!editing[rowIndex + '-name']\"\n            >\n              {{ value }}\n            </span>\n            <input\n              autofocus\n              (blur)=\"updateValue($event, 'name', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-name']\"\n              type=\"text\"\n              [value]=\"value\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\">\n          <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-row=\"row\" let-value=\"value\">\n            <span\n              title=\"Double click to edit\"\n              (dblclick)=\"editing[rowIndex + '-gender'] = true\"\n              *ngIf=\"!editing[rowIndex + '-gender']\"\n            >\n              {{ value }}\n            </span>\n            <select\n              *ngIf=\"editing[rowIndex + '-gender']\"\n              (blur)=\"editing[rowIndex + '-gender'] = false\"\n              (change)=\"updateValue($event, 'gender', rowIndex)\"\n              [value]=\"value\"\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n            </select>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\">\n          <ng-template ngx-datatable-cell-template let-value=\"value\">\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class InlineEditComponent {\n  editing = {};\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  updateValue(event, cell, rowIndex) {\n    console.log('inline editing rowIndex', rowIndex);\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\n  }\n}\n","import { Component, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'live-data-demo',\n  template: `\n    <div>\n      <h3>\n        Live Data Demo\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/live.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n        <small>\n          <a href=\"javascript:void(0)\" (click)=\"start()\">Start</a> |\n          <a href=\"javascript:void(0)\" (click)=\"stop()\">Stop</a> |\n          <a href=\"javascript:void(0)\" (click)=\"add()\">Add</a> |\n          <a href=\"javascript:void(0)\" (click)=\"remove()\">Remove</a>\n        </small>\n      </h3>\n      <ngx-datatable\n        #mydatatable\n        class=\"material\"\n        [headerHeight]=\"50\"\n        [limit]=\"5\"\n        [columnMode]=\"ColumnMode.force\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [trackByProp]=\"'updated'\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class LiveDataComponent {\n  @ViewChild('mydatatable') mydatatable: any;\n\n  count = 50;\n  rows: any[] = [];\n  active = true;\n  temp: any[] = [];\n  cols: any = ['name', 'gender', 'company'];\n\n  ColumnMode = ColumnMode;\n\n  constructor(private cd: ChangeDetectorRef) {\n    this.fetch(data => {\n      this.rows = data.map(d => {\n        d.updated = Date.now().toString();\n        return d;\n      });\n\n      this.temp = [...this.rows];\n    });\n\n    this.start();\n  }\n\n  randomNum(start: number, end: number): number {\n    return Math.floor(Math.random() * end) + start;\n  }\n\n  start(): void {\n    if (!this.active) {\n      return;\n    }\n\n    setTimeout(this.updateRandom.bind(this), 50);\n  }\n\n  stop(): void {\n    this.active = false;\n  }\n\n  add() {\n    this.rows.splice(0, 0, this.temp[this.count++]);\n  }\n\n  remove() {\n    this.rows.splice(0, this.rows.length);\n  }\n\n  updateRandom() {\n    const rowNum = this.randomNum(0, 5);\n    const cellNum = this.randomNum(0, 3);\n    const newRow = this.randomNum(0, 100);\n    const prop = this.cols[cellNum];\n    const rows = this.rows;\n\n    if (rows.length) {\n      const row = rows[rowNum];\n      row[prop] = rows[newRow][prop];\n      row.updated = Date.now().toString();\n    }\n\n    this.rows = [...this.rows];\n\n    // this.cd.markForCheck();\n    // this.mydatatable.update();\n    this.start();\n  }\n\n  fetch(cb: any): void {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'multiple-tables-demo',\n  template: `\n    <div>\n      <h3>\n        Multiple Tables\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/multiple.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows1\"\n        [columns]=\"columns1\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"0\"\n        [rowHeight]=\"100\"\n      >\n      </ngx-datatable>\n      <br />\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows2\"\n        [columns]=\"columns2\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class MultipleTablesComponent {\n  columns1 = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company' }];\n\n  columns2 = [{ prop: 'name', name: 'Name' }, { name: 'Gender' }];\n\n  rows1 = [\n    { name: 'Larry', gender: 'Male', company: 'Cisco' },\n    { name: 'Lauren', gender: 'Female', company: 'HP' }\n  ];\n\n  rows2 = [\n    { name: 'Callie', gender: 'Female' },\n    { name: 'Maggie', gender: 'Female' }\n  ];\n\n  ColumnMode = ColumnMode;\n}\n","import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'responsive-demo',\n  styles: [\n    `\n      @media screen and (max-width: 800px) {\n        .desktop-hidden {\n          display: initial;\n        }\n        .mobile-hidden {\n          display: none;\n        }\n      }\n      @media screen and (min-width: 800px) {\n        .desktop-hidden {\n          display: none;\n        }\n        .mobile-hidden {\n          display: initial;\n        }\n      }\n    `\n  ],\n  template: `\n    <div>\n      <h3>\n        Responsive Demo\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/responsive.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        #myTable\n        class=\"material expandable\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [rows]=\"rows\"\n        (page)=\"onPage($event)\"\n      >\n        <!-- Row Detail Template -->\n        <ngx-datatable-row-detail [rowHeight]=\"50\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\n            <div style=\"padding-left:60px; font-size:14px\">\n              <div>{{ row.gender }}, {{ row.age }}</div>\n            </div>\n          </ng-template>\n        </ngx-datatable-row-detail>\n\n        <!-- Column Templates -->\n        <ngx-datatable-column\n          [width]=\"50\"\n          [resizeable]=\"false\"\n          [sortable]=\"false\"\n          [draggable]=\"false\"\n          [canAutoResize]=\"false\"\n        >\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\n            <a\n              href=\"#\"\n              [class.datatable-icon-right]=\"!expanded\"\n              [class.datatable-icon-down]=\"expanded\"\n              title=\"Expand/Collapse Row\"\n              (click)=\"toggleExpandRow(row)\"\n              class=\"desktop-hidden\"\n            >\n            </a>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Name\" [flexGrow]=\"3\" [minWidth]=\"200\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Gender\" [flexGrow]=\"1\">\n          <ng-template let-column=\"column\" let-sort=\"sortFn\" ngx-datatable-header-template>\n            <span class=\"mobile-hidden\">{{ column.name }}</span>\n          </ng-template>\n\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            <span class=\"mobile-hidden\">{{ value }}</span>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Age\" [flexGrow]=\"1\">\n          <ng-template let-column=\"column\" let-sort=\"sortFn\" ngx-datatable-header-template>\n            <span class=\"mobile-hidden\">{{ column.name }}</span>\n          </ng-template>\n\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            <span class=\"mobile-hidden\">{{ value }}</span>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n\n    <div style=\"margin: 50px;\">\n      This demo combines the features used in the <i>Row Detail</i> Rows demo, <i>Flex</i> Column demo, and the\n      <i>Inline</i> Templates demo. When your browser is at 800px, the gender and age columns will be hidden and will\n      appear in the row detail view.\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ResponsiveComponent {\n  @ViewChild('myTable') table: any;\n\n  rows: any[] = [];\n  expanded: any = {};\n  timeout: any;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  onPage(event) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      console.log('paged!', event);\n    }, 100);\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n}\n","import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'row-details-demo',\n  template: `\n    <div>\n      <h3>\n        Row Detail Demo\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/row-detail.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n        <small>\n          <a href=\"javascript:void(0)\" (click)=\"table.rowDetail.expandAllRows()\">Expand All</a>\n          |\n          <a href=\"javascript:void(0)\" (click)=\"table.rowDetail.collapseAllRows()\">Collapse All</a>\n        </small>\n      </h3>\n      <ngx-datatable\n        #myTable\n        class=\"material expandable\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [rows]=\"rows\"\n        (page)=\"onPage($event)\"\n      >\n        <!-- Row Detail Template -->\n        <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\n            <div style=\"padding-left:35px;\">\n              <div><strong>Address</strong></div>\n              <div>{{ row.address.city }}, {{ row.address.state }}</div>\n            </div>\n          </ng-template>\n        </ngx-datatable-row-detail>\n\n        <!-- Column Templates -->\n        <ngx-datatable-column\n          [width]=\"50\"\n          [resizeable]=\"false\"\n          [sortable]=\"false\"\n          [draggable]=\"false\"\n          [canAutoResize]=\"false\"\n        >\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\n            <a\n              href=\"javascript:void(0)\"\n              [class.datatable-icon-right]=\"!expanded\"\n              [class.datatable-icon-down]=\"expanded\"\n              title=\"Expand/Collapse Row\"\n              (click)=\"toggleExpandRow(row)\"\n            >\n            </a>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Index\" [width]=\"80\">\n          <ng-template let-rowIndex=\"rowIndex\" let-row=\"row\" ngx-datatable-cell-template>\n            <strong>{{ rowIndex }}</strong>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Expanded\" [width]=\"80\">\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\n            <strong>{{ expanded === 1 }}</strong>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Name\" [width]=\"200\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            <strong>{{ value }}</strong>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [width]=\"300\">\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            <i [innerHTML]=\"row['name']\"></i> and <i>{{ value }}</i>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class RowDetailsComponent {\n  @ViewChild('myTable') table: any;\n\n  rows: any[] = [];\n  expanded: any = {};\n  timeout: any;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  onPage(event) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      console.log('paged!', event);\n    }, 100);\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n}\n","import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { NgStyle } from '@angular/common';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'row-grouping-demo',\n  template: `\n    <div>\n      <h3>\n        Row Grouping\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/row-grouping.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        #myTable\n        class=\"material expandable\"\n        [rows]=\"rows\"\n        [groupRowsBy]=\"'age'\"\n        [columnMode]=\"ColumnMode.force\"\n        [scrollbarH]=\"true\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"40\"\n        [limit]=\"4\"\n        [groupExpansionDefault]=\"true\"\n      >\n        <!-- Group Header Template -->\n        <ngx-datatable-group-header [rowHeight]=\"50\" #myGroupHeader (toggle)=\"onDetailToggle($event)\">\n          <ng-template let-group=\"group\" let-expanded=\"expanded\" ngx-datatable-group-header-template>\n            <div style=\"padding-left:5px;\">\n              <a\n                href=\"#\"\n                [class.datatable-icon-right]=\"!expanded\"\n                [class.datatable-icon-down]=\"expanded\"\n                title=\"Expand/Collapse Group\"\n                (click)=\"toggleExpandGroup(group)\"\n              >\n                <b>Age: {{ group.value[0].age }}</b>\n              </a>\n            </div>\n          </ng-template>\n        </ngx-datatable-group-header>\n\n        <!-- Row Column Template -->\n        <ngx-datatable-column name=\"Exp. Pay.\" prop=\"\" editable=\"true\" frozenLeft=\"True\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n            let-group=\"group\"\n          >\n            <label for=\"ep1{{ rowIndex }}\" class=\"datatable-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"ep1{{ rowIndex }}\"\n                name=\"{{ rowIndex }}\"\n                value=\"0\"\n                class=\"expectedpayment\"\n                (change)=\"checkGroup($event, row, rowIndex, group)\"\n                [checked]=\"row.exppayyes === 1\"\n              />\n            </label>\n            <label for=\"ep2{{ rowIndex }}\" class=\"datatable-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"ep2{{ rowIndex }}\"\n                name=\"{{ rowIndex }}\"\n                value=\"1\"\n                class=\"expectedpayment2\"\n                (change)=\"checkGroup($event, row, rowIndex, group)\"\n                [checked]=\"row.exppayno === 1\"\n              />\n            </label>\n            <label for=\"ep3{{ rowIndex }}\" class=\"datatable-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"ep3{{ rowIndex }}\"\n                name=\"{{ rowIndex }}\"\n                value=\"2\"\n                class=\"expectedpayment3\"\n                (change)=\"checkGroup($event, row, rowIndex, group)\"\n                [checked]=\"row.exppaypending === 1\"\n              />\n            </label>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Source\" prop=\"source\" editable=\"false\" frozenLeft=\"True\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Name\" prop=\"name\" editable=\"true\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" prop=\"gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\" prop=\"age\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Comment\" prop=\"comment\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n            let-group=\"group\"\n            let-rowHeight=\"rowHeight\"\n          >\n            <input\n              autofocus\n              (blur)=\"updateValue($event, 'comment', rowIndex)\"\n              type=\"text\"\n              name=\"comment\"\n              [value]=\"value\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class RowGroupingComponent {\n  @ViewChild('myTable') table: any;\n\n  funder = [];\n  calculated = [];\n  pending = [];\n  groups = [];\n\n  editing = {};\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/forRowGrouping.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  getGroupRowHeight(group, rowHeight) {\n    let style = {};\n\n    style = {\n      height: group.length * 40 + 'px',\n      width: '100%'\n    };\n\n    return style;\n  }\n\n  checkGroup(event, row, rowIndex, group) {\n    let groupStatus = 'Pending';\n    let expectedPaymentDealtWith = true;\n\n    row.exppayyes = 0;\n    row.exppayno = 0;\n    row.exppaypending = 0;\n\n    if (event.target.checked) {\n      if (event.target.value === '0') {\n        // expected payment yes selected\n        row.exppayyes = 1;\n      } else if (event.target.value === '1') {\n        // expected payment yes selected\n        row.exppayno = 1;\n      } else if (event.target.value === '2') {\n        // expected payment yes selected\n        row.exppaypending = 1;\n      }\n    }\n\n    if (group.length === 2) {\n      // There are only 2 lines in a group\n      // tslint:disable-next-line:max-line-length\n      if (\n        ['Calculated', 'Funder'].indexOf(group[0].source) > -1 &&\n        ['Calculated', 'Funder'].indexOf(group[1].source) > -1\n      ) {\n        // Sources are funder and calculated\n        // tslint:disable-next-line:max-line-length\n        if (group[0].startdate === group[1].startdate && group[0].enddate === group[1].enddate) {\n          // Start dates and end dates match\n          for (let index = 0; index < group.length; index++) {\n            if (group[index].source !== row.source) {\n              if (event.target.value === '0') {\n                // expected payment yes selected\n                group[index].exppayyes = 0;\n                group[index].exppaypending = 0;\n                group[index].exppayno = 1;\n              }\n            }\n\n            if (group[index].exppayyes === 0 && group[index].exppayno === 0 && group[index].exppaypending === 0) {\n              expectedPaymentDealtWith = false;\n            }\n            console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\n          }\n        }\n      }\n    } else {\n      for (let index = 0; index < group.length; index++) {\n        if (group[index].exppayyes === 0 && group[index].exppayno === 0 && group[index].exppaypending === 0) {\n          expectedPaymentDealtWith = false;\n        }\n        console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\n      }\n    }\n\n    // check if there is a pending selected payment or a row that does not have any expected payment selected\n    if (\n      group.filter(rowFilter => rowFilter.exppaypending === 1).length === 0 &&\n      group.filter(rowFilter => rowFilter.exppaypending === 0 && rowFilter.exppayyes === 0 && rowFilter.exppayno === 0)\n        .length === 0\n    ) {\n      console.log('expected payment dealt with');\n\n      // check if can set the group status\n      const numberOfExpPayYes = group.filter(rowFilter => rowFilter.exppayyes === 1).length;\n      const numberOfSourceFunder = group.filter(rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Funder')\n        .length;\n      const numberOfSourceCalculated = group.filter(\n        rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Calculated'\n      ).length;\n      const numberOfSourceManual = group.filter(rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Manual')\n        .length;\n\n      console.log('numberOfExpPayYes', numberOfExpPayYes);\n      console.log('numberOfSourceFunder', numberOfSourceFunder);\n      console.log('numberOfSourceCalculated', numberOfSourceCalculated);\n      console.log('numberOfSourceManual', numberOfSourceManual);\n\n      if (numberOfExpPayYes > 0) {\n        if (numberOfExpPayYes === numberOfSourceFunder) {\n          groupStatus = 'Funder Selected';\n        } else if (numberOfExpPayYes === numberOfSourceCalculated) {\n          groupStatus = 'Calculated Selected';\n        } else if (numberOfExpPayYes === numberOfSourceManual) {\n          groupStatus = 'Manual Selected';\n        } else {\n          groupStatus = 'Hybrid Selected';\n        }\n      }\n    }\n\n    group[0].groupstatus = groupStatus;\n  }\n\n  updateValue(event, cell, rowIndex) {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n  }\n\n  toggleExpandGroup(group) {\n    console.log('Toggled Expand Group!', group);\n    this.table.groupHeader.toggleExpandGroup(group);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'rx-demo',\n  template: `\n    <div>\n      <h3>\n        RXjs Data\n        <small>\n          <a href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/rx.component.ts\" target=\"_blank\">\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material striped\"\n        [rows]=\"rows | async\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class RxDemoComponent {\n  rows: Observable<any[]>;\n\n  columns = [{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.rows = Observable.create(subscriber => {\n      this.fetch(data => {\n        subscriber.next(data.splice(0, 15));\n        subscriber.next(data.splice(15, 30));\n        subscriber.complete();\n      });\n    });\n\n    // Rx.DOM.ajax({ url: '/products', responseType: 'json'}).subscribe()\n    // this.rows = Observable.from(rows);\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'horz-vert-scrolling-demo',\n  template: `\n    <div>\n      <h3>\n        Horizontal and Vertical Scrolling\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/scrolling.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        columnMode=\"force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"0\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [scrollbarH]=\"true\"\n      >\n        <ngx-datatable-column name=\"Name\" [width]=\"300\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"City\" [width]=\"300\" prop=\"address.city\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"State\" [width]=\"300\" prop=\"address.state\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class HorzVertScrolling {\n  rows = [];\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'tabs-demo',\n  template: `\n    <div>\n      <h3>\n        Hidden By Default\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/tabs.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n\n      <div style=\"width:75%;margin:0 auto\">\n        <div>\n          <button type=\"button\" (click)=\"tab1 = true; tab2 = false; tab3 = false\">Nothing</button>\n          <button type=\"button\" (click)=\"tab2 = true; tab1 = false; tab3 = false\">Hidden</button>\n          <button type=\"button\" (click)=\"tab3 = true; tab1 = false; tab2 = false\">NgIf</button>\n        </div>\n\n        <div [hidden]=\"!tab1\">\n          <p>Click a button to toggle table visibilities</p>\n        </div>\n\n        <div [hidden]=\"!tab2\">\n          <h4>hidden Table</h4>\n          <ngx-datatable\n            class=\"material\"\n            [rows]=\"rows\"\n            [columnMode]=\"ColumnMode.force\"\n            [headerHeight]=\"50\"\n            [footerHeight]=\"50\"\n            [rowHeight]=\"50\"\n            [scrollbarV]=\"true\"\n          >\n            <ngx-datatable-column name=\"Name\" [width]=\"200\"></ngx-datatable-column>\n            <ngx-datatable-column name=\"Gender\" [width]=\"300\"></ngx-datatable-column>\n            <ngx-datatable-column name=\"Age\" [width]=\"80\"></ngx-datatable-column>\n          </ngx-datatable>\n        </div>\n\n        <div *ngIf=\"tab3\">\n          <h4>ngIf Table</h4>\n          <ngx-datatable\n            class=\"material\"\n            [rows]=\"rows\"\n            [columnMode]=\"ColumnMode.force\"\n            [headerHeight]=\"50\"\n            [footerHeight]=\"50\"\n            [rowHeight]=\"50\"\n            [scrollbarV]=\"true\"\n          >\n            <ngx-datatable-column name=\"Name\" [width]=\"200\"></ngx-datatable-column>\n            <ngx-datatable-column name=\"Gender\" [width]=\"300\"></ngx-datatable-column>\n            <ngx-datatable-column name=\"Age\" [width]=\"80\"></ngx-datatable-column>\n          </ngx-datatable>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class TabsDemoComponent {\n  rows = [];\n\n  tab1 = true;\n  tab2 = false;\n  tab3 = false;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'virtual-scroll-demo',\n  template: `\n    <div>\n      <h3>\n        Virtual Scrolling with 10k Rows\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/virtual.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"getRowHeight\"\n        [scrollbarV]=\"true\"\n        (page)=\"onPage($event)\"\n      >\n        <ngx-datatable-column name=\"Name\" [width]=\"300\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            <strong>{{ value }}</strong>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [width]=\"300\">\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            <i [innerHTML]=\"row['name']\"></i> and <i>{{ value }}</i>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Row Height\" prop=\"height\" [width]=\"80\"> </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class VirtualScrollComponent {\n  rows;\n  expanded = {};\n  timeout: any;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  onPage(event) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      console.log('paged!', event);\n    }, 100);\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      const rows = JSON.parse(req.response);\n\n      for (const row of rows) {\n        row.height = Math.floor(Math.random() * 80) + 50;\n      }\n\n      cb(rows);\n    };\n\n    req.send();\n  }\n\n  getRowHeight(row) {\n    return row.height;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'column-flex-demo',\n  template: `\n    <div>\n      <h3>\n        Flex Column Width Distribution\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-flex.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [columnMode]=\"ColumnMode.flex\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"Name\" [flexGrow]=\"3\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [flexGrow]=\"1\">\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\" [flexGrow]=\"1\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ColumnFlexComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'column-force-demo',\n  template: `\n    <div>\n      <h3>\n        Force Fill Column Width Distribution\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-force.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"Name\" [width]=\"100\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [width]=\"100\">\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\" [width]=\"300\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ColumnForceComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'column-reorder-demo',\n  styles: [\n    `\n      .icon {\n        position: absolute;\n      }\n      .datatable-icon-down {\n        top: 0px;\n      }\n      .datatable-icon-up {\n        top: 40px;\n      }\n      .dragFromLeft .icon {\n        left: -13px;\n      }\n    `\n  ],\n  template: `\n    <div>\n      <h3>\n        Reorder Column\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-reorder.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [loadingIndicator]=\"loadingIndicator\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [reorderable]=\"reorderable\"\n        [swapColumns]=\"swapColumns\"\n        [targetMarkerTemplate]=\"targetMarkerTemplate\"\n      >\n      </ngx-datatable>\n      <ng-template #targetMarkerTemplate let-class=\"class\">\n        <div [ngClass]=\"class\">\n          <div class=\"icon datatable-icon-down\"></div>\n          <div class=\"icon datatable-icon-up\"></div>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class ColumnReorderComponent {\n  rows = [];\n  loadingIndicator = true;\n  reorderable = true;\n  swapColumns = false;\n\n  columns = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company', sortable: false }];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n      setTimeout(() => {\n        this.loadingIndicator = false;\n      }, 1500);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'column-standard-demo',\n  template: `\n    <div>\n      <h3>\n        Fixed Column Widths\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-standard.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.standard\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n      >\n        <ngx-datatable-column name=\"Name\" [width]=\"300\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [width]=\"300\">\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\" [width]=\"300\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ColumnStandardComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'column-toggle-demo',\n  template: `\n    <div>\n      <h3>\n        Column Toggling\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-toggle.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <ngx-datatable\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n        >\n          <ngx-datatable-column *ngFor=\"let col of columns\" [name]=\"col.name\"> </ngx-datatable-column>\n        </ngx-datatable>\n      </div>\n      <div class=\"selected-column\">\n        <h4>Available Columns</h4>\n        <ul>\n          <li *ngFor=\"let col of allColumns\">\n            <input type=\"checkbox\" [id]=\"col.name\" (click)=\"toggle(col)\" [checked]=\"isChecked(col)\" />\n            <label [attr.for]=\"col.name\">{{ col.name }}</label>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class ColumnToggleComponent {\n  rows = [\n    {\n      name: 'Claudine Neal',\n      gender: 'female',\n      company: 'Sealoud'\n    },\n    {\n      name: 'Beryl Rice',\n      gender: 'female',\n      company: 'Velity'\n    }\n  ];\n\n  columns = [{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }];\n\n  allColumns = [{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }];\n\n  ColumnMode = ColumnMode;\n\n  toggle(col) {\n    const isChecked = this.isChecked(col);\n\n    if (isChecked) {\n      this.columns = this.columns.filter(c => {\n        return c.name !== col.name;\n      });\n    } else {\n      this.columns = [...this.columns, col];\n    }\n  }\n\n  isChecked(col) {\n    return (\n      this.columns.find(c => {\n        return c.name === col.name;\n      }) !== undefined\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'column-pinning-demo',\n  template: `\n    <div>\n      <h3>\n        Column Pinning\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/pinning.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [scrollbarH]=\"true\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"Name\" [width]=\"300\" [frozenLeft]=\"true\"> </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"> </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\"> </ngx-datatable-column>\n        <ngx-datatable-column name=\"City\" [width]=\"150\" prop=\"address.city\"> </ngx-datatable-column>\n        <ngx-datatable-column name=\"State\" [width]=\"300\" prop=\"address.state\" [frozenRight]=\"true\">\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ColumnPinningComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { PagedData } from './model/paged-data';\nimport { CorporateEmployee } from './model/corporate-employee';\nimport { Page } from './model/page';\n\nimport companyData from 'src/assets/data/company.json';\n\n/**\n * A server used to mock a paged data result from a server\n */\n@Injectable()\nexport class MockServerResultsService {\n  /**\n   * A method that mocks a paged server response\n   * @param page The selected page\n   * @returns {any} An observable containing the employee data\n   */\n  public getResults(page: Page): Observable<PagedData<CorporateEmployee>> {\n    return of(companyData)\n      .pipe(map(d => this.getPagedData(page)))\n      .pipe(delay(1000 * Math.random()));\n  }\n\n  /**\n   * Package companyData into a PagedData object based on the selected Page\n   * @param page The page data used to get the selected data from companyData\n   * @returns {PagedData<CorporateEmployee>} An array of the selected data and page\n   */\n  private getPagedData(page: Page): PagedData<CorporateEmployee> {\n    const pagedData = new PagedData<CorporateEmployee>();\n    page.totalElements = companyData.length;\n    page.totalPages = page.totalElements / page.size;\n    const start = page.pageNumber * page.size;\n    const end = Math.min(start + page.size, page.totalElements);\n    for (let i = start; i < end; i++) {\n      const jsonObj = companyData[i];\n      const employee = new CorporateEmployee(jsonObj.name, jsonObj.gender, jsonObj.company, jsonObj.age);\n      pagedData.data.push(employee);\n    }\n    pagedData.page = page;\n    return pagedData;\n  }\n}\n","/**\n * A model for an individual corporate employee\n */\nexport class CorporateEmployee {\n  name: string;\n  gender: string;\n  company: string;\n  age: number;\n\n  constructor(name: string, gender: string, company: string, age: number) {\n    this.name = name;\n    this.gender = gender;\n    this.company = company;\n    this.age = age;\n  }\n}\n","/**\n * An object used to get page information from the server\n */\nexport class Page {\n  // The number of elements in the page\n  size: number = 0;\n  // The total number of elements\n  totalElements: number = 0;\n  // The total number of pages\n  totalPages: number = 0;\n  // The current page number\n  pageNumber: number = 0;\n}\n","import { Page } from './page';\n\n/**\n * An array of data with an associated page object used for paging\n */\nexport class PagedData<T> {\n  data = new Array<T>();\n  page = new Page();\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'client-paging-demo',\n  template: `\n    <div>\n      <h3>\n        Client-side Paging\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/paging-client.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }]\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [limit]=\"10\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ClientPagingComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { MockServerResultsService } from './mock-server-results-service';\nimport { CorporateEmployee } from './model/corporate-employee';\nimport { Page } from './model/page';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'paging-scrolling-novirtualization-demo',\n  providers: [MockServerResultsService],\n  template: `\n    <div>\n      <h3>\n        Server-side Paging\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/paging-scrolling-novirtualization.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }]\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [scrollbarV]=\"true\"\n        [virtualization]=\"false\"\n        [externalPaging]=\"true\"\n        [count]=\"page.totalElements\"\n        [offset]=\"page.pageNumber\"\n        [limit]=\"page.size\"\n        (page)=\"setPage($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class PagingScrollingNoVirtualizationComponent {\n  page = new Page();\n  rows = new Array<CorporateEmployee>();\n\n  ColumnMode = ColumnMode;\n\n  constructor(private serverResultsService: MockServerResultsService) {\n    this.page.pageNumber = 0;\n    this.page.size = 20;\n  }\n\n  ngOnInit() {\n    this.setPage({ offset: 0 });\n  }\n\n  /**\n   * Populate the table with new data based on the page number\n   * @param page The page to select\n   */\n  setPage(pageInfo) {\n    this.page.pageNumber = pageInfo.offset;\n    this.serverResultsService.getResults(this.page).subscribe(pagedData => {\n      this.page = pagedData.page;\n      this.rows = pagedData.data;\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { MockServerResultsService } from './mock-server-results-service';\nimport { CorporateEmployee } from './model/corporate-employee';\nimport { Page } from './model/page';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'server-paging-demo',\n  providers: [MockServerResultsService],\n  template: `\n    <div>\n      <h3>\n        Server-side Paging\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/paging-server.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }]\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [externalPaging]=\"true\"\n        [count]=\"page.totalElements\"\n        [offset]=\"page.pageNumber\"\n        [limit]=\"page.size\"\n        (page)=\"setPage($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ServerPagingComponent {\n  page = new Page();\n  rows = new Array<CorporateEmployee>();\n\n  ColumnMode = ColumnMode;\n\n  constructor(private serverResultsService: MockServerResultsService) {\n    this.page.pageNumber = 0;\n    this.page.size = 20;\n  }\n\n  ngOnInit() {\n    this.setPage({ offset: 0 });\n  }\n\n  /**\n   * Populate the table with new data based on the page number\n   * @param page The page to select\n   */\n  setPage(pageInfo) {\n    this.page.pageNumber = pageInfo.offset;\n    this.serverResultsService.getResults(this.page).subscribe(pagedData => {\n      this.page = pagedData.page;\n      this.rows = pagedData.data;\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { MockServerResultsService } from './mock-server-results-service';\nimport { CorporateEmployee } from './model/corporate-employee';\nimport { Page } from './model/page';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\nimport { delay } from 'rxjs/operators';\n\ninterface PageInfo {\n  offset: number;\n  pageSize: number;\n  limit: number;\n  count: number;\n}\n\n@Component({\n  selector: 'virtual-paging-demo',\n  providers: [MockServerResultsService],\n  template: `\n    <div>\n      <h3>\n        Virtual Server-side Paging\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/paging-virtual.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"[\n          { name: 'Name', sortable: false },\n          { name: 'Gender', sortable: false },\n          { name: 'Company', sortable: false }\n        ]\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [loadingIndicator]=\"isLoading > 0\"\n        [scrollbarV]=\"true\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [externalPaging]=\"true\"\n        [externalSorting]=\"true\"\n        [count]=\"totalElements\"\n        [offset]=\"pageNumber\"\n        (page)=\"setPage($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class VirtualPagingComponent {\n  totalElements: number;\n  pageNumber: number;\n  rows: CorporateEmployee[];\n  cache: any = {};\n\n  ColumnMode = ColumnMode;\n\n  isLoading = 0;\n\n  constructor(private serverResultsService: MockServerResultsService) {\n    this.pageNumber = 0;\n  }\n\n  setPage(pageInfo: PageInfo) {\n    // Current page number is determined by last call to setPage\n    // This is the page the UI is currently displaying\n    // The current page is based on the UI pagesize and scroll position\n    // Pagesize can change depending on browser size\n    this.pageNumber = pageInfo.offset;\n\n    // Calculate row offset in the UI using pageInfo\n    // This is the scroll position in rows\n    const rowOffset = pageInfo.offset * pageInfo.pageSize;\n\n    // When calling the server, we keep page size fixed\n    // This should be the max UI pagesize or larger\n    // This is not necessary but helps simplify caching since the UI page size can change\n    const page = new Page();\n    page.size = 20;\n    page.pageNumber = Math.floor(rowOffset / page.size);\n\n    // We keep a index of server loaded pages so we don't load same data twice\n    // This is based on the server page not the UI\n    if (this.cache[page.pageNumber]) return;\n    this.cache[page.pageNumber] = true;\n\n    // Counter of pending API calls\n    this.isLoading++;\n\n    this.serverResultsService.getResults(page).subscribe(pagedData => {\n      // Update total count\n      this.totalElements = pagedData.page.totalElements;\n\n      // Create array to store data if missing\n      // The array should have the correct number of with \"holes\" for missing data\n      if (!this.rows) {\n        this.rows = new Array<CorporateEmployee>(this.totalElements || 0);\n      }\n\n      // Calc starting row offset\n      // This is the position to insert the new data\n      const start = pagedData.page.pageNumber * pagedData.page.size;\n\n      // Copy existing data\n      const rows = [...this.rows];\n\n      // Insert new rows into correct position\n      rows.splice(start, pagedData.page.size, ...pagedData.data);\n\n      // Set rows to our new rows for display\n      this.rows = rows;\n\n      // Decrement the counter of pending API calls\n      this.isLoading--;\n    });\n  }\n}\n","import { Component, ElementRef, Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { CorporateEmployee } from './model/corporate-employee';\n\nimport data from 'src/assets/data/company.json';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\nconst companyData = data as any[];\n\nclass PagedData<T> {\n  data: T[];\n}\n\n/**\n * A server used to mock a paged data result from a server\n */\n@Injectable()\nexport class MockServerResultsService {\n  public getResults(offset: number, limit: number): Observable<PagedData<CorporateEmployee>> {\n    return of(companyData.slice(offset, offset + limit)).pipe(\n      delay(new Date(Date.now() + 500)),\n      map(d => ({ data: d }))\n    );\n  }\n}\n\n@Component({\n  selector: 'server-scrolling-demo',\n  providers: [MockServerResultsService],\n  template: `\n    <div>\n      <h3>\n        Server-side Scrolling\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/scrolling-server.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material server-scrolling-demo\"\n        [rows]=\"rows\"\n        [columns]=\"[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }]\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"headerHeight\"\n        [rowHeight]=\"rowHeight\"\n        [loadingIndicator]=\"isLoading\"\n        [scrollbarV]=\"true\"\n        (scroll)=\"onScroll($event.offsetY)\"\n      ></ngx-datatable>\n    </div>\n  `,\n  styleUrls: ['./scrolling-server.component.css']\n})\nexport class ServerScrollingComponent {\n  readonly headerHeight = 50;\n  readonly rowHeight = 50;\n  readonly pageLimit = 10;\n\n  rows: CorporateEmployee[] = [];\n  isLoading: boolean;\n\n  ColumnMode = ColumnMode;\n\n  constructor(private serverResultsService: MockServerResultsService, private el: ElementRef) {}\n\n  ngOnInit() {\n    this.onScroll(0);\n  }\n\n  onScroll(offsetY: number) {\n    // total height of all rows in the viewport\n    const viewHeight = this.el.nativeElement.getBoundingClientRect().height - this.headerHeight;\n\n    // check if we scrolled to the end of the viewport\n    if (!this.isLoading && offsetY + viewHeight >= this.rows.length * this.rowHeight) {\n      // total number of results to load\n      let limit = this.pageLimit;\n\n      // check if we haven't fetched any results yet\n      if (this.rows.length === 0) {\n        // calculate the number of rows that fit within viewport\n        const pageSize = Math.ceil(viewHeight / this.rowHeight);\n\n        // change the limit to pageSize such that we fill the first page entirely\n        // (otherwise, we won't be able to scroll past it)\n        limit = Math.max(pageSize, this.pageLimit);\n      }\n      this.loadPage(limit);\n    }\n  }\n\n  private loadPage(limit: number) {\n    // set the loading flag, which serves two purposes:\n    // 1) it prevents the same page from being loaded twice\n    // 2) it enables display of the loading indicator\n    this.isLoading = true;\n\n    this.serverResultsService.getResults(this.rows.length, limit).subscribe(results => {\n      const rows = [...this.rows, ...results.data];\n      this.rows = rows;\n      this.isLoading = false;\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'cell-selection-demo',\n  template: `\n    <div>\n      <h3>\n        Cell Selection\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-cell.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material selection-cell\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.force\"\n        [columns]=\"columns\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [selected]=\"selected\"\n        [selectionType]=\"SelectionType.cell\"\n        (select)=\"onSelect($event)\"\n        (activate)=\"onActivate($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class CellSelectionComponent {\n  rows: any[] = [];\n  selected: any[] = [];\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect(event) {\n    console.log('Event: select', event, this.selected);\n  }\n\n  onActivate(event) {\n    console.log('Event: activate', event);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'chkbox-selection-template-demo',\n  template: `\n    <div>\n      <h3>\n        Custom Checkbox Selection\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-chkbox-template.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n        <small>\n          <a href=\"javascript:void(0)\" (click)=\"add()\">Add</a> |\n          <a href=\"javascript:void(0)\" (click)=\"update()\">Update</a> |\n          <a href=\"javascript:void(0)\" (click)=\"remove()\">Remove</a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <ngx-datatable\n          style=\"width: 90%\"\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n          [limit]=\"5\"\n          [selected]=\"selected\"\n          [selectionType]=\"SelectionType.checkbox\"\n          (activate)=\"onActivate($event)\"\n          (select)=\"onSelect($event)\"\n        >\n          <ngx-datatable-column\n            [width]=\"30\"\n            [sortable]=\"false\"\n            [canAutoResize]=\"false\"\n            [draggable]=\"false\"\n            [resizeable]=\"false\"\n          >\n            <ng-template\n              ngx-datatable-header-template\n              let-value=\"value\"\n              let-allRowsSelected=\"allRowsSelected\"\n              let-selectFn=\"selectFn\"\n            >\n              <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"selectFn(!allRowsSelected)\" />\n            </ng-template>\n            <ng-template\n              ngx-datatable-cell-template\n              let-value=\"value\"\n              let-isSelected=\"isSelected\"\n              let-onCheckboxChangeFn=\"onCheckboxChangeFn\"\n            >\n              <input type=\"checkbox\" [checked]=\"isSelected\" (change)=\"onCheckboxChangeFn($event)\" />\n            </ng-template>\n          </ngx-datatable-column>\n          <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n          <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n          <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\n        </ngx-datatable>\n      </div>\n\n      <div class=\"selected-column\">\n        <h4>\n          Selections <small>({{ selected?.length }})</small>\n        </h4>\n        <ul>\n          <li *ngFor=\"let sel of selected\">\n            {{ sel.name }}\n          </li>\n          <li *ngIf=\"!selected?.length\">No Selections</li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class CustomCheckboxSelectionComponent {\n  rows = [];\n  selected = [];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n\n  add() {\n    this.selected.push(this.rows[1], this.rows[3]);\n  }\n\n  update() {\n    this.selected = [this.rows[1], this.rows[3]];\n  }\n\n  remove() {\n    this.selected = [];\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'chkbox-selection-demo',\n  template: `\n    <div>\n      <h3>\n        Checkbox Selection\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-chkbox.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n        <small>\n          <a href=\"javascript:void(0)\" (click)=\"add()\">Add</a> |\n          <a href=\"javascript:void(0)\" (click)=\"update()\">Update</a> |\n          <a href=\"javascript:void(0)\" (click)=\"remove()\">Remove</a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <ngx-datatable\n          style=\"width: 90%\"\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n          [limit]=\"5\"\n          [selected]=\"selected\"\n          [selectionType]=\"SelectionType.checkbox\"\n          [selectAllRowsOnPage]=\"false\"\n          [displayCheck]=\"displayCheck\"\n          (activate)=\"onActivate($event)\"\n          (select)=\"onSelect($event)\"\n        >\n          <ngx-datatable-column\n            [width]=\"30\"\n            [sortable]=\"false\"\n            [canAutoResize]=\"false\"\n            [draggable]=\"false\"\n            [resizeable]=\"false\"\n            [headerCheckboxable]=\"true\"\n            [checkboxable]=\"true\"\n          >\n          </ngx-datatable-column>\n          <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n          <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n          <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\n        </ngx-datatable>\n      </div>\n\n      <div class=\"selected-column\">\n        <h4>\n          Selections <small>({{ selected?.length }})</small>\n        </h4>\n        <ul>\n          <li *ngFor=\"let sel of selected\">\n            {{ sel.name }}\n          </li>\n          <li *ngIf=\"!selected?.length\">No Selections</li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class CheckboxSelectionComponent {\n  rows = [];\n  selected = [];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n\n  add() {\n    this.selected.push(this.rows[1], this.rows[3]);\n  }\n\n  update() {\n    this.selected = [this.rows[1], this.rows[3]];\n  }\n\n  remove() {\n    this.selected = [];\n  }\n\n  displayCheck(row) {\n    return row.name !== 'Ethel Price';\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'multidisable-selection-demo',\n  template: `\n    <div>\n      <h3>\n        Selection Callback to Disable Selections\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-disabled.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <ngx-datatable\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [columns]=\"columns\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n          [limit]=\"5\"\n          [selectCheck]=\"checkSelectable\"\n          [selected]=\"selected\"\n          [selectionType]=\"SelectionType.multi\"\n          (activate)=\"onActivate($event)\"\n          (select)=\"onSelect($event)\"\n        >\n        </ngx-datatable>\n      </div>\n\n      <div class=\"selected-column\">\n        <h4>Selections</h4>\n        <ul>\n          <li *ngFor=\"let sel of selected\">\n            {{ sel.name }}\n          </li>\n          <li *ngIf=\"!selected.length\">No Selections</li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class MultiDisableSelectionComponent {\n  rows = [];\n\n  selected = [];\n\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n\n  checkSelectable(event) {\n    console.log('Checking if selectable', event);\n    return event.name !== 'Ethel Price';\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'multi-click-selection-demo',\n  template: `\n    <div>\n      <h3>\n        Multi Click Selection\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-multi-click.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <div class=\"info\">\n          <p>This demonstrates multi selection table, where any click event causes a selection.</p>\n        </div>\n\n        <ngx-datatable\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [columns]=\"columns\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n          [limit]=\"5\"\n          [selected]=\"selected\"\n          [selectionType]=\"SelectionType.multiClick\"\n          (activate)=\"onActivate($event)\"\n          (select)=\"onSelect($event)\"\n        >\n        </ngx-datatable>\n      </div>\n\n      <div class=\"selected-column\">\n        <h4>Selections</h4>\n        <ul>\n          <li *ngFor=\"let sel of selected\">\n            {{ sel.name }}\n          </li>\n          <li *ngIf=\"!selected.length\">No Selections</li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class MultiClickSelectionComponent {\n  rows = [];\n\n  selected = [];\n\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'multi-selection-demo',\n  template: `\n    <div>\n      <h3>\n        Multi Select\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-multi.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <div class=\"info\">\n          <p>This demonstrates multi selection table, use CTRL or SHIFT click to select multiple items.</p>\n        </div>\n\n        <ngx-datatable\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [columns]=\"columns\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n          [limit]=\"5\"\n          [selected]=\"selected\"\n          [selectionType]=\"SelectionType.multi\"\n          (activate)=\"onActivate($event)\"\n          (select)=\"onSelect($event)\"\n        >\n        </ngx-datatable>\n      </div>\n\n      <div class=\"selected-column\">\n        <h4>Selections</h4>\n        <ul>\n          <li *ngFor=\"let sel of selected\">\n            {{ sel.name }}\n          </li>\n          <li *ngIf=\"!selected.length\">No Selections</li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class MultiSelectionComponent {\n  rows = [];\n\n  selected = [];\n\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'single-selection-demo',\n  template: `\n    <div>\n      <h3>\n        Single Row Selection\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-single.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <div class=\"info\">\n          <p>This demonstrates a simple single selection table with the 3rd row selected by default.</p>\n        </div>\n\n        <ngx-datatable\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [columns]=\"columns\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n          [limit]=\"5\"\n          [selected]=\"selected\"\n          [selectionType]=\"SelectionType.single\"\n          (activate)=\"onActivate($event)\"\n          (select)=\"onSelect($event)\"\n        >\n        </ngx-datatable>\n      </div>\n\n      <div class=\"selected-column\">\n        <h4>Selections</h4>\n        <ul>\n          <li *ngFor=\"let sel of selected\">\n            {{ sel.name }}\n          </li>\n          <li *ngIf=\"!selected.length\">No Selections</li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class SingleSelectionComponent {\n  rows = [];\n\n  selected = [];\n\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.selected = [data[2]];\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SortType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'client-sorting-demo',\n  template: `\n    <div>\n      <h3>\n        Client-side Sorting\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/sorting/sorting-client.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [sortType]=\"SortType.multi\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ClientSortingComponent {\n  rows = [];\n\n  columns = [{ name: 'Company' }, { name: 'Name' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n  SortType = SortType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'comparator-sorting-demo',\n  template: `\n    <div>\n      <h3>\n        Custom Sorting Comparator\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/sorting/sorting-comparator.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class SortingComparatorComponent {\n  rows = [];\n\n  columns = [\n    { name: 'Company', comparator: this.companyComparator.bind(this) },\n    { name: 'Name', sortable: false },\n    { name: 'Gender', sortable: false }\n  ];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data.splice(0, 20));\n    };\n\n    req.send();\n  }\n\n  companyComparator(propA, propB) {\n    console.log('Sorting Comparator', propA, propB);\n\n    // Just a simple sort function comparisoins\n    if (propA.toLowerCase() < propB.toLowerCase()) {\n      return -1;\n    }\n    if (propA.toLowerCase() > propB.toLowerCase()) {\n      return 1;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'default-sorting-demo',\n  template: `\n    <div>\n      <h3>\n        Client-side Sorting\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/sorting/sorting-default.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [sorts]=\"[{ prop: 'name', dir: 'desc' }]\"\n      >\n        <ngx-datatable-column name=\"Company\">\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\n            {{ row.company }}\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Name\">\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\n            {{ row.name }}\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Gender\"> </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class DefaultSortingComponent implements OnInit {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  ngOnInit() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'server-sorting-demo',\n  template: `\n    <div>\n      <h3>\n        Server-side Sorting\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/sorting/sorting-server.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [externalSorting]=\"true\"\n        [loadingIndicator]=\"loading\"\n        (sort)=\"onSort($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ServerSortingComponent {\n  loading = false;\n\n  rows = [];\n\n  columns = [\n    { name: 'Company', sortable: true },\n    { name: 'Name', sortable: true },\n    { name: 'Gender', sortable: true }\n  ];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data.splice(0, 20));\n    };\n\n    req.send();\n  }\n\n  onSort(event) {\n    // event was triggered, start sort sequence\n    console.log('Sort Event', event);\n    this.loading = true;\n    // emulate a server request with a timeout\n    setTimeout(() => {\n      const rows = [...this.rows];\n      // this is only for demo purposes, normally\n      // your server would return the result for\n      // you and you would just set the rows prop\n      const sort = event.sorts[0];\n      rows.sort((a, b) => {\n        return a[sort.prop].localeCompare(b[sort.prop]) * (sort.dir === 'desc' ? -1 : 1);\n      });\n\n      this.rows = rows;\n      this.loading = false;\n    }, 1000);\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'summary-row-custom-template-demo',\n  template: `\n    <div>\n      <h3>\n        Summary Row with Custom Template\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/summary/summary-row-custom-template.component.ts\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [summaryRow]=\"true\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [rowHeight]=\"'auto'\"\n        [summaryHeight]=\"55\"\n        [rows]=\"rows\"\n      >\n      </ngx-datatable>\n      <ng-template #nameSummaryCell let-row=\"row\" let-value=\"value\">\n        <div class=\"name-container\">\n          <div class=\"chip\" *ngFor=\"let name of getNames()\">\n            <span class=\"chip-content\">{{ name }}</span>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  `,\n  styleUrls: ['./summary-row-custom-template.component.scss']\n})\nexport class SummaryRowCustomTemplateComponent implements OnInit {\n  rows = [];\n\n  @ViewChild('nameSummaryCell')\n  nameSummaryCell: TemplateRef<any>;\n\n  columns = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        prop: 'name',\n        summaryFunc: () => null,\n        summaryTemplate: this.nameSummaryCell\n      },\n      { name: 'Gender', summaryFunc: cells => this.summaryForGender(cells) },\n      { prop: 'age', summaryFunc: cells => this.avgAge(cells) }\n    ];\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  getNames(): string[] {\n    return this.rows.map(row => row.name).map(fullName => fullName.split(' ')[1]);\n  }\n\n  private summaryForGender(cells: string[]) {\n    const males = cells.filter(cell => cell === 'male').length;\n    const females = cells.filter(cell => cell === 'female').length;\n\n    return `males: ${males}, females: ${females}`;\n  }\n\n  private avgAge(cells: number[]): number {\n    const filteredCells = cells.filter(cell => !!cell);\n    return filteredCells.reduce((sum, cell) => (sum += cell), 0) / filteredCells.length;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'summary-row-inline-html',\n  template: `\n    <div>\n      <h3>\n        Inline HTML template\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/summary/summary-row-inline-html.component.ts\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [summaryRow]=\"enableSummary\"\n        [summaryPosition]=\"summaryPosition\"\n        [summaryHeight]=\"100\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column prop=\"name\" [summaryTemplate]=\"nameSummaryCell\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [summaryFunc]=\"summaryForGender\"></ngx-datatable-column>\n        <ngx-datatable-column prop=\"age\" [summaryFunc]=\"avgAge\"></ngx-datatable-column>\n      </ngx-datatable>\n      <ng-template #nameSummaryCell>\n        <div class=\"name-container\">\n          <div class=\"chip\" *ngFor=\"let name of getNames()\">\n            <span class=\"chip-content\">{{ name }}</span>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class SummaryRowInlineHtmlComponent {\n  rows = [];\n\n  enableSummary = true;\n  summaryPosition = 'top';\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  getNames(): string[] {\n    return this.rows.map(row => row.name).map(fullName => fullName.split(' ')[1]);\n  }\n\n  summaryForGender(cells: string[]) {\n    const males = cells.filter(cell => cell === 'male').length;\n    const females = cells.filter(cell => cell === 'female').length;\n\n    return `males: ${males}, females: ${females}`;\n  }\n\n  avgAge(cells: number[]): number {\n    const filteredCells = cells.filter(cell => !!cell);\n    return filteredCells.reduce((sum, cell) => (sum += cell), 0) / filteredCells.length;\n  }\n}\n","import { Component } from '@angular/core';\nimport { MockServerResultsService } from '../paging/mock-server-results-service';\nimport { PagedData } from '../paging/model/paged-data';\nimport { CorporateEmployee } from '../paging/model/corporate-employee';\nimport { Page } from '../paging/model/page';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'summary-row-server-paging-demo',\n  providers: [MockServerResultsService],\n  template: `\n    <div>\n      <h3>\n        Server-side paging\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/summary/summary-row-server-paging.component.ts\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [summaryRow]=\"true\"\n        [summaryHeight]=\"55\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [externalPaging]=\"true\"\n        [count]=\"page.totalElements\"\n        [offset]=\"page.pageNumber\"\n        [limit]=\"page.size\"\n        (page)=\"setPage($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class SummaryRowServerPagingComponent {\n  page = new Page();\n  rows = new Array<CorporateEmployee>();\n\n  columns = [\n    // NOTE: cells for current page only !\n    { name: 'Name', summaryFunc: cells => `${cells.length} total` },\n    { name: 'Gender', summaryFunc: () => this.getGenderSummary() },\n    { name: 'Company', summaryFunc: () => null }\n  ];\n\n  ColumnMode = ColumnMode;\n\n  constructor(private serverResultsService: MockServerResultsService) {\n    this.page.pageNumber = 0;\n    this.page.size = 20;\n  }\n\n  ngOnInit() {\n    this.setPage({ offset: 0 });\n  }\n\n  /**\n   * Populate the table with new data based on the page number\n   * @param page The page to select\n   */\n  setPage(pageInfo) {\n    this.page.pageNumber = pageInfo.offset;\n    this.serverResultsService.getResults(this.page).subscribe(pagedData => {\n      this.page = pagedData.page;\n      this.rows = pagedData.data;\n    });\n  }\n\n  getGenderSummary(): string {\n    // NOTE: there should be logic to get required informations from server\n    return '10 males, 10 females';\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'summary-row-simple-demo',\n  template: `\n    <div>\n      <h3>\n        Simple Summary Row\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/summary/summary-row-simple.component.ts\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div class=\"controls\">\n        <div>\n          <input\n            id=\"enable-summary\"\n            type=\"checkbox\"\n            [checked]=\"enableSummary\"\n            (change)=\"enableSummary = !enableSummary\"\n          />\n          <label for=\"enable-summary\">Enable Summary Row</label>\n        </div>\n        <div>\n          <label for=\"position-select\">Position</label>\n          <select id=\"position-select\" (change)=\"onPositionSelectChange($event)\">\n            <option [value]=\"'top'\">Top</option>\n            <option [value]=\"'bottom'\">Bottom</option>\n          </select>\n        </div>\n      </div>\n      <ngx-datatable\n        class=\"material\"\n        [summaryRow]=\"enableSummary\"\n        [summaryPosition]=\"summaryPosition\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [summaryHeight]=\"55\"\n        [rows]=\"rows\"\n      >\n      </ngx-datatable>\n    </div>\n  `,\n  styleUrls: ['./summary-row-simple.component.scss']\n})\nexport class SummaryRowSimpleComponent {\n  rows = [];\n\n  columns = [\n    { prop: 'name', summaryFunc: null },\n    { name: 'Gender', summaryFunc: cells => this.summaryForGender(cells) },\n    { prop: 'age', summaryFunc: cells => this.avgAge(cells) }\n  ];\n\n  enableSummary = true;\n  summaryPosition = 'top';\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb: (data: [unknown]) => void) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onPositionSelectChange($event: Event) {\n    const target = $event.target as HTMLSelectElement;\n    this.summaryPosition = target.value;\n  }\n\n  private summaryForGender(cells: string[]) {\n    const males = cells.filter(cell => cell === 'male').length;\n    const females = cells.filter(cell => cell === 'female').length;\n\n    return `males: ${males}, females: ${females}`;\n  }\n\n  private avgAge(cells: number[]): number {\n    const filteredCells = cells.filter(cell => !!cell);\n    return filteredCells.reduce((sum, cell) => (sum += cell), 0) / filteredCells.length;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'inline-templates-demo',\n  template: `\n    <div>\n      <h3>\n        Expressive Templates\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/templates/template-dom.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n      >\n        <ngx-datatable-column name=\"Name\">\n          <ng-template let-column=\"column\" ngx-datatable-header-template> Holla! {{ column.name }} </ng-template>\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            Hi: <strong>{{ value }}</strong>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\">\n          <ng-template let-column=\"column\" let-sort=\"sortFn\" ngx-datatable-header-template>\n            <span (click)=\"sort()\">{{ column.name }}</span>\n          </ng-template>\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            My name is: <i [innerHTML]=\"row['name']\"></i> and <i>{{ value }}</i>\n            <div>{{ joke }}</div>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            <div style=\"border:solid 1px #ddd;margin:5px;padding:3px\">\n              <div style=\"background:#999;height:10px\" [style.width]=\"value + '%'\"></div>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class InlineTemplatesComponent {\n  rows = [];\n  joke = 'knock knock';\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'template-ref-demo',\n  template: `\n    <div>\n      <h3>\n        TemplateRef via Column Property\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/templates/template-obj.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n      >\n      </ngx-datatable>\n\n      <ng-template #hdrTpl let-column=\"column\"> <strong>Fancy</strong>: {{ column.name }} !! </ng-template>\n\n      <ng-template #editTmpl let-row=\"row\" let-value=\"value\">\n        <img *ngIf=\"value === 'male'\" width=\"150\" src=\"https://media.giphy.com/media/I8nepxWwlEuqI/giphy.gif\" />\n        <img *ngIf=\"value === 'female'\" width=\"150\" src=\"https://media.giphy.com/media/sxSVG3XHf7yww/giphy.gif\" />\n      </ng-template>\n    </div>\n  `\n})\nexport class TemplateRefTemplatesComponent {\n  @ViewChild('editTmpl', { static: true }) editTmpl: TemplateRef<any>;\n  @ViewChild('hdrTpl', { static: true }) hdrTpl: TemplateRef<any>;\n\n  rows = [];\n  columns = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        cellTemplate: this.editTmpl,\n        headerTemplate: this.hdrTpl,\n        name: 'Gender'\n      }\n    ];\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'client-side-tree-demo',\n  template: `\n    <div>\n      <h3>\n        Flex Column Width Distribution\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/tree/client-tree.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [columnMode]=\"ColumnMode.flex\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [treeFromRelation]=\"'manager'\"\n        [treeToRelation]=\"'name'\"\n        [rows]=\"rows\"\n        (treeAction)=\"onTreeAction($event)\"\n      >\n        <ngx-datatable-column name=\"Name\" [flexGrow]=\"3\" [isTreeColumn]=\"true\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [flexGrow]=\"1\">\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\" [flexGrow]=\"1\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `,\n  styles: ['.icon {height: 10px; width: 10px; }', '.disabled {opacity: 0.5; }']\n})\nexport class ClientTreeComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company_tree.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onTreeAction(event: any) {\n    const index = event.rowIndex;\n    const row = event.row;\n    if (row.treeStatus === 'collapsed') {\n      row.treeStatus = 'expanded';\n    } else {\n      row.treeStatus = 'collapsed';\n    }\n    this.rows = [...this.rows];\n  }\n}\n","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'full-screen-tree-demo',\n  template: `\n    <div>\n      <h3>\n        Full Screen\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/tree/fullscreen.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material fullscreen\"\n        style=\"top: 52px\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"0\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [scrollbarH]=\"true\"\n        [rows]=\"rows\"\n        [treeFromRelation]=\"'parentId'\"\n        [treeToRelation]=\"'id'\"\n        (treeAction)=\"onTreeAction($event)\"\n      >\n        <ngx-datatable-column name=\"Id\" [width]=\"80\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Name\" [isTreeColumn]=\"true\" [width]=\"300\" [treeLevelIndent]=\"20\">\n          <ng-template ngx-datatable-tree-toggle let-tree=\"cellContext\">\n            <button [disabled]=\"tree.treeStatus === 'disabled'\" (click)=\"tree.onTreeAction()\">\n              <span *ngIf=\"tree.treeStatus === 'loading'\">\n                ...\n              </span>\n              <span *ngIf=\"tree.treeStatus === 'collapsed'\">\n                ↑\n              </span>\n              <span *ngIf=\"tree.treeStatus === 'expanded'\">\n                ↓\n              </span>\n              <span *ngIf=\"tree.treeStatus === 'disabled'\">\n                ⃠\n              </span>\n            </button>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"City\" [width]=\"300\" prop=\"address.city\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"State\" [width]=\"300\" prop=\"address.state\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `,\n  styles: ['.icon {height: 10px; width: 10px; }', '.disabled {opacity: 0.5; }']\n})\nexport class FullScreenTreeComponent {\n  rows = [];\n  lastIndex = 15;\n\n  ColumnMode = ColumnMode;\n\n  constructor(private cd: ChangeDetectorRef) {\n    this.fetch(data => {\n      data = data.slice(1, this.lastIndex);\n      this.rows = data.map(d => {\n        d.treeStatus = 'collapsed';\n        d.parentId = null;\n        return d;\n      });\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      setTimeout(() => {\n        cb(JSON.parse(req.response));\n      }, 500);\n    };\n\n    req.send();\n  }\n\n  onTreeAction(event: any) {\n    const index = event.rowIndex;\n    const row = event.row;\n    if (row.treeStatus === 'collapsed') {\n      row.treeStatus = 'loading';\n      this.fetch(data => {\n        data = data.slice(this.lastIndex, this.lastIndex + 3).map(d => {\n          d.treeStatus = 'collapsed';\n          d.parentId = row.id;\n          return d;\n        });\n        this.lastIndex = this.lastIndex + 3;\n        row.treeStatus = 'expanded';\n        this.rows = [...this.rows, ...data];\n        this.cd.detectChanges();\n      });\n    } else {\n      row.treeStatus = 'collapsed';\n      this.rows = [...this.rows];\n      this.cd.detectChanges();\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}