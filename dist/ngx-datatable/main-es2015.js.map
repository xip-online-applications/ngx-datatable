{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./projects/swimlane/ngx-datatable/src/lib/components/body/body-cell.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/body/body-group-header-template.directive.ts","./projects/swimlane/ngx-datatable/src/lib/components/body/body-group-header.directive.ts","./projects/swimlane/ngx-datatable/src/lib/components/body/body-row-wrapper.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/body/body-row.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/body/body.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/body/progress-bar.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/body/scroller.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/body/selection.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/body/summary/summary-row.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/columns/column-cell.directive.ts","./projects/swimlane/ngx-datatable/src/lib/components/columns/column-header.directive.ts","./projects/swimlane/ngx-datatable/src/lib/components/columns/column.directive.ts","./projects/swimlane/ngx-datatable/src/lib/components/columns/tree.directive.ts","./projects/swimlane/ngx-datatable/src/lib/components/datatable.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/datatable.component.html","./projects/swimlane/ngx-datatable/src/lib/components/footer/footer-template.directive.ts","./projects/swimlane/ngx-datatable/src/lib/components/footer/footer.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/footer/footer.directive.ts","./projects/swimlane/ngx-datatable/src/lib/components/footer/pager.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/header/header-cell.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/header/header.component.ts","./projects/swimlane/ngx-datatable/src/lib/components/row-detail/row-detail-template.directive.ts","./projects/swimlane/ngx-datatable/src/lib/components/row-detail/row-detail.directive.ts","./projects/swimlane/ngx-datatable/src/lib/directives/draggable.directive.ts","./projects/swimlane/ngx-datatable/src/lib/directives/long-press.directive.ts","./projects/swimlane/ngx-datatable/src/lib/directives/orderable.directive.ts","./projects/swimlane/ngx-datatable/src/lib/directives/resizeable.directive.ts","./projects/swimlane/ngx-datatable/src/lib/directives/visibility.directive.ts","./projects/swimlane/ngx-datatable/src/lib/ngx-datatable.module.ts","./projects/swimlane/ngx-datatable/src/lib/services/column-changes.service.ts","./projects/swimlane/ngx-datatable/src/lib/services/dimensions-helper.service.ts","./projects/swimlane/ngx-datatable/src/lib/services/scrollbar-helper.service.ts","./projects/swimlane/ngx-datatable/src/lib/types/click.type.ts","./projects/swimlane/ngx-datatable/src/lib/types/column-mode.type.ts","./projects/swimlane/ngx-datatable/src/lib/types/contextmenu.type.ts","./projects/swimlane/ngx-datatable/src/lib/types/selection.type.ts","./projects/swimlane/ngx-datatable/src/lib/types/sort-direction.type.ts","./projects/swimlane/ngx-datatable/src/lib/types/sort.type.ts","./projects/swimlane/ngx-datatable/src/lib/utils/camel-case.ts","./projects/swimlane/ngx-datatable/src/lib/utils/column-helper.ts","./projects/swimlane/ngx-datatable/src/lib/utils/column-prop-getters.ts","./projects/swimlane/ngx-datatable/src/lib/utils/column.ts","./projects/swimlane/ngx-datatable/src/lib/utils/elm-from-point.ts","./projects/swimlane/ngx-datatable/src/lib/utils/id.ts","./projects/swimlane/ngx-datatable/src/lib/utils/keys.ts","./projects/swimlane/ngx-datatable/src/lib/utils/math.ts","./projects/swimlane/ngx-datatable/src/lib/utils/prefixes.ts","./projects/swimlane/ngx-datatable/src/lib/utils/row-height-cache.ts","./projects/swimlane/ngx-datatable/src/lib/utils/selection.ts","./projects/swimlane/ngx-datatable/src/lib/utils/sort.ts","./projects/swimlane/ngx-datatable/src/lib/utils/throttle.ts","./projects/swimlane/ngx-datatable/src/lib/utils/translate.ts","./projects/swimlane/ngx-datatable/src/lib/utils/tree.ts","./projects/swimlane/ngx-datatable/src/public-api.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/basic/basic-auto.component.ts","./src/app/basic/basic-fixed.component.ts","./src/app/basic/bootstrap.component.ts","./src/app/basic/contextmenu.component.ts","./src/app/basic/css.component.ts","./src/app/basic/dark-theme.component.ts","./src/app/basic/dynamic-height.component.ts","./src/app/basic/filter.component.ts","./src/app/basic/footer.component.ts","./src/app/basic/fullscreen.component.ts","./src/app/basic/inline.component.ts","./src/app/basic/live.component.ts","./src/app/basic/multiple.component.ts","./src/app/basic/responsive.component.ts","./src/app/basic/row-detail.component.ts","./src/app/basic/row-grouping.component.ts","./src/app/basic/rx.component.ts","./src/app/basic/scrolling.component.ts","./src/app/basic/tabs.component.ts","./src/app/basic/virtual.component.ts","./src/app/columns/column-flex.component.ts","./src/app/columns/column-force.component.ts","./src/app/columns/column-reorder.component.ts","./src/app/columns/column-standard.component.ts","./src/app/columns/column-toggle.component.ts","./src/app/columns/pinning.component.ts","./src/app/paging/mock-server-results-service.ts","./src/app/paging/model/corporate-employee.ts","./src/app/paging/model/page.ts","./src/app/paging/model/paged-data.ts","./src/app/paging/paging-client.component.ts","./src/app/paging/paging-scrolling-novirtualization.component.ts","./src/app/paging/paging-server.component.ts","./src/app/paging/paging-virtual.component.ts","./src/app/paging/scrolling-server.component.ts","./src/app/selection/selection-cell.component.ts","./src/app/selection/selection-chkbox-template.component.ts","./src/app/selection/selection-chkbox.component.ts","./src/app/selection/selection-disabled.component.ts","./src/app/selection/selection-multi-click.component.ts","./src/app/selection/selection-multi.component.ts","./src/app/selection/selection-single.component.ts","./src/app/sorting/sorting-client.component.ts","./src/app/sorting/sorting-comparator.component.ts","./src/app/sorting/sorting-default.component.ts","./src/app/sorting/sorting-server.component.ts","./src/app/summary/summary-row-custom-template.component.ts","./src/app/summary/summary-row-inline-html.component.ts","./src/app/summary/summary-row-server-paging.component.ts","./src/app/summary/summary-row-simple.component.ts","./src/app/templates/template-dom.component.ts","./src/app/templates/template-obj.component.ts","./src/app/tree/client-tree.component.ts","./src/app/tree/fullscreen.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import {\n  Component,\n  Input,\n  PipeTransform,\n  HostBinding,\n  ViewChild,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  ViewContainerRef,\n  OnDestroy,\n  DoCheck,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { TableColumn } from '../../types/table-column.type';\nimport { SortDirection } from '../../types/sort-direction.type';\nimport { Keys } from '../../utils/keys';\n\nexport type TreeStatus = 'collapsed' | 'expanded' | 'loading' | 'disabled';\n\n@Component({\n  selector: 'datatable-body-cell',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"datatable-body-cell-label\" [style.margin-left.px]=\"calcLeftMargin(column, row)\">\n      <label\n        *ngIf=\"column.checkboxable && (!displayCheck || displayCheck(row, column, value))\"\n        class=\"datatable-checkbox\"\n      >\n        <input type=\"checkbox\" [checked]=\"isSelected\" (click)=\"onCheckboxChange($event)\" />\n      </label>\n      <ng-container *ngIf=\"column.isTreeColumn\">\n        <button\n          *ngIf=\"!column.treeToggleTemplate\"\n          class=\"datatable-tree-button\"\n          [disabled]=\"treeStatus === 'disabled'\"\n          (click)=\"onTreeAction()\"\n        >\n          <span>\n            <i *ngIf=\"treeStatus === 'loading'\" class=\"icon datatable-icon-collapse\"></i>\n            <i *ngIf=\"treeStatus === 'collapsed'\" class=\"icon datatable-icon-up\"></i>\n            <i *ngIf=\"treeStatus === 'expanded' || treeStatus === 'disabled'\" class=\"icon datatable-icon-down\"></i>\n          </span>\n        </button>\n        <ng-template\n          *ngIf=\"column.treeToggleTemplate\"\n          [ngTemplateOutlet]=\"column.treeToggleTemplate\"\n          [ngTemplateOutletContext]=\"{ cellContext: cellContext }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <span *ngIf=\"!column.cellTemplate\" [title]=\"sanitizedValue\" [innerHTML]=\"value\"> </span>\n      <ng-template\n        #cellTemplate\n        *ngIf=\"column.cellTemplate\"\n        [ngTemplateOutlet]=\"column.cellTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n    </div>\n  `\n})\nexport class DataTableBodyCellComponent implements DoCheck, OnDestroy {\n  @Input() displayCheck: (row: any, column?: TableColumn, value?: any) => boolean;\n\n  @Input() set group(group: any) {\n    this._group = group;\n    this.cellContext.group = group;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get group() {\n    return this._group;\n  }\n\n  @Input() set rowHeight(val: number) {\n    this._rowHeight = val;\n    this.cellContext.rowHeight = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get rowHeight() {\n    return this._rowHeight;\n  }\n\n  @Input() set isSelected(val: boolean) {\n    this._isSelected = val;\n    this.cellContext.isSelected = val;\n    this.cd.markForCheck();\n  }\n\n  get isSelected(): boolean {\n    return this._isSelected;\n  }\n\n  @Input() set expanded(val: boolean) {\n    this._expanded = val;\n    this.cellContext.expanded = val;\n    this.cd.markForCheck();\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  @Input() set rowIndex(val: number) {\n    this._rowIndex = val;\n    this.cellContext.rowIndex = val;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get rowIndex(): number {\n    return this._rowIndex;\n  }\n\n  @Input() set column(column: TableColumn) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get column(): TableColumn {\n    return this._column;\n  }\n\n  @Input() set row(row: any) {\n    this._row = row;\n    this.cellContext.row = row;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get row(): any {\n    return this._row;\n  }\n\n  @Input() set sorts(val: any[]) {\n    this._sorts = val;\n    this.calcSortDir = this.calcSortDir(val);\n  }\n\n  get sorts(): any[] {\n    return this._sorts;\n  }\n\n  @Input() set treeStatus(status: TreeStatus) {\n    if (status !== 'collapsed' && status !== 'expanded' && status !== 'loading' && status !== 'disabled') {\n      this._treeStatus = 'collapsed';\n    } else {\n      this._treeStatus = status;\n    }\n    this.cellContext.treeStatus = this._treeStatus;\n    this.checkValueUpdates();\n    this.cd.markForCheck();\n  }\n\n  get treeStatus(): TreeStatus {\n    return this._treeStatus;\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild('cellTemplate', { read: ViewContainerRef, static: true })\n  cellTemplate: ViewContainerRef;\n\n  @HostBinding('class')\n  get columnCssClasses(): any {\n    let cls = 'datatable-body-cell';\n    if (this.column.cellClass) {\n      if (typeof this.column.cellClass === 'string') {\n        cls += ' ' + this.column.cellClass;\n      } else if (typeof this.column.cellClass === 'function') {\n        const res = this.column.cellClass({\n          row: this.row,\n          group: this.group,\n          column: this.column,\n          value: this.value,\n          rowHeight: this.rowHeight\n        });\n\n        if (typeof res === 'string') {\n          cls += ' ' + res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) {\n              cls += ` ${k}`;\n            }\n          }\n        }\n      }\n    }\n    if (!this.sortDir) {\n      cls += ' sort-active';\n    }\n    if (this.isFocused) {\n      cls += ' active';\n    }\n    if (this.sortDir === SortDirection.asc) {\n      cls += ' sort-asc';\n    }\n    if (this.sortDir === SortDirection.desc) {\n      cls += ' sort-desc';\n    }\n\n    return cls;\n  }\n\n  @HostBinding('style.width.px')\n  get width(): number {\n    return this.column.width;\n  }\n\n  @HostBinding('style.minWidth.px')\n  get minWidth(): number {\n    return this.column.minWidth;\n  }\n\n  @HostBinding('style.maxWidth.px')\n  get maxWidth(): number {\n    return this.column.maxWidth;\n  }\n\n  @HostBinding('style.height')\n  get height(): string | number {\n    const height = this.rowHeight;\n    if (isNaN(height)) {\n      return height;\n    }\n    return height + 'px';\n  }\n\n  sanitizedValue: any;\n  value: any;\n  sortDir: SortDirection;\n  isFocused = false;\n  onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n  activateFn = this.activate.emit.bind(this.activate);\n\n  cellContext: any;\n\n  private _isSelected: boolean;\n  private _sorts: any[];\n  private _column: TableColumn;\n  private _row: any;\n  private _group: any;\n  private _rowHeight: number;\n  private _rowIndex: number;\n  private _expanded: boolean;\n  private _element: any;\n  private _treeStatus: TreeStatus;\n\n  constructor(element: ElementRef, private cd: ChangeDetectorRef) {\n    this.cellContext = {\n      onCheckboxChangeFn: this.onCheckboxChangeFn,\n      activateFn: this.activateFn,\n      row: this.row,\n      group: this.group,\n      value: this.value,\n      column: this.column,\n      rowHeight: this.rowHeight,\n      isSelected: this.isSelected,\n      rowIndex: this.rowIndex,\n      treeStatus: this.treeStatus,\n      onTreeAction: this.onTreeAction.bind(this)\n    };\n\n    this._element = element.nativeElement;\n  }\n\n  ngDoCheck(): void {\n    this.checkValueUpdates();\n  }\n\n  ngOnDestroy(): void {\n    if (this.cellTemplate) {\n      this.cellTemplate.clear();\n    }\n  }\n\n  checkValueUpdates(): void {\n    let value = '';\n\n    if (!this.row || !this.column) {\n      value = '';\n    } else {\n      const val = this.column.$$valueGetter(this.row, this.column.prop);\n      const userPipe: PipeTransform = this.column.pipe;\n\n      if (userPipe) {\n        value = userPipe.transform(val);\n      } else if (value !== undefined) {\n        value = val;\n      }\n    }\n\n    if (this.value !== value) {\n      this.value = value;\n      this.cellContext.value = value;\n      this.sanitizedValue = value !== null && value !== undefined ? this.stripHtml(value) : value;\n      this.cd.markForCheck();\n    }\n  }\n\n  @HostListener('focus')\n  onFocus(): void {\n    this.isFocused = true;\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    this.isFocused = false;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(event: MouseEvent): void {\n    this.activate.emit({\n      type: 'click',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n\n  @HostListener('dblclick', ['$event'])\n  onDblClick(event: MouseEvent): void {\n    this.activate.emit({\n      type: 'dblclick',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element\n    });\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetCell = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetCell) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        group: this.group,\n        rowHeight: this.rowHeight,\n        column: this.column,\n        value: this.value,\n        cellElement: this._element\n      });\n    }\n  }\n\n  onCheckboxChange(event: any): void {\n    this.activate.emit({\n      type: 'checkbox',\n      event,\n      row: this.row,\n      group: this.group,\n      rowHeight: this.rowHeight,\n      column: this.column,\n      value: this.value,\n      cellElement: this._element,\n      treeStatus: 'collapsed'\n    });\n  }\n\n  calcSortDir(sorts: any[]): any {\n    if (!sorts) {\n      return;\n    }\n\n    const sort = sorts.find((s: any) => {\n      return s.prop === this.column.prop;\n    });\n\n    if (sort) {\n      return sort.dir;\n    }\n  }\n\n  stripHtml(html: string): string {\n    if (!html.replace) {\n      return html;\n    }\n    return html.replace(/<\\/?[^>]+(>|$)/g, '');\n  }\n\n  onTreeAction() {\n    this.treeAction.emit(this.row);\n  }\n\n  calcLeftMargin(column: any, row: any) {\n    const levelIndent = column.treeLevelIndent != null ? column.treeLevelIndent : 50;\n    return column.isTreeColumn ? row.level * levelIndent : 0;\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-datatable-group-header-template]'\n})\nexport class DatatableGroupHeaderTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DatatableGroupHeaderTemplateDirective } from './body-group-header-template.directive';\n\n@Directive({ selector: 'ngx-datatable-group-header' })\nexport class DatatableGroupHeaderDirective {\n  /**\n   * Row height is required when virtual scroll is enabled.\n   */\n  @Input() rowHeight: number | ((group?: any, index?: number) => number) = 0;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DatatableGroupHeaderTemplateDirective, { read: TemplateRef, static: true })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n\n  /**\n   * Track toggling of group visibility\n   */\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Toggle the expansion of a group\n   */\n  toggleExpandGroup(group: any): void {\n    this.toggle.emit({\n      type: 'group',\n      value: group\n    });\n  }\n\n  /**\n   * Expand all groups\n   */\n  expandAllGroups(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n\n  /**\n   * Collapse all groups\n   */\n  collapseAllGroups(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  DoCheck,\n  ChangeDetectionStrategy,\n  KeyValueDiffer,\n  ChangeDetectorRef,\n  KeyValueDiffers\n} from '@angular/core';\n\n@Component({\n  selector: 'datatable-row-wrapper',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div *ngIf=\"groupHeader && groupHeader.template\" class=\"datatable-group-header\" [ngStyle]=\"getGroupHeaderStyle()\">\n      <ng-template\n        *ngIf=\"groupHeader && groupHeader.template\"\n        [ngTemplateOutlet]=\"groupHeader.template\"\n        [ngTemplateOutletContext]=\"groupContext\"\n      >\n      </ng-template>\n    </div>\n    <ng-content *ngIf=\"(groupHeader && groupHeader.template && expanded) || !groupHeader || !groupHeader.template\">\n    </ng-content>\n    <div\n      *ngIf=\"rowDetail && rowDetail.template && expanded\"\n      [style.height.px]=\"detailRowHeight\"\n      class=\"datatable-row-detail\"\n    >\n      <ng-template\n        *ngIf=\"rowDetail && rowDetail.template\"\n        [ngTemplateOutlet]=\"rowDetail.template\"\n        [ngTemplateOutletContext]=\"rowContext\"\n      >\n      </ng-template>\n    </div>\n  `,\n  host: {\n    class: 'datatable-row-wrapper'\n  }\n})\nexport class DataTableRowWrapperComponent implements DoCheck {\n  @Input() innerWidth: number;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() offsetX: number;\n  @Input() detailRowHeight: any;\n  @Input() row: any;\n  @Input() groupedRows: any;\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n\n  @Input() set rowIndex(val: number) {\n    this._rowIndex = val;\n    this.rowContext.rowIndex = val;\n    this.groupContext.rowIndex = val;\n    this.cd.markForCheck();\n  }\n\n  get rowIndex(): number {\n    return this._rowIndex;\n  }\n\n  @Input() set expanded(val: boolean) {\n    this._expanded = val;\n    this.groupContext.expanded = val;\n    this.rowContext.expanded = val;\n    this.cd.markForCheck();\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  groupContext: any;\n  rowContext: any;\n\n  private rowDiffer: KeyValueDiffer<{}, {}>;\n  private _expanded: boolean = false;\n  private _rowIndex: number;\n\n  constructor(private cd: ChangeDetectorRef, private differs: KeyValueDiffers) {\n    this.groupContext = {\n      group: this.row,\n      expanded: this.expanded,\n      rowIndex: this.rowIndex\n    };\n\n    this.rowContext = {\n      row: this.row,\n      expanded: this.expanded,\n      rowIndex: this.rowIndex\n    };\n\n    this.rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this.rowDiffer.diff(this.row)) {\n      this.rowContext.row = this.row;\n      this.groupContext.group = this.row;\n      this.cd.markForCheck();\n    }\n  }\n\n  @HostListener('contextmenu', ['$event'])\n  onContextmenu($event: MouseEvent): void {\n    this.rowContextmenu.emit({ event: $event, row: this.row });\n  }\n\n  getGroupHeaderStyle(): any {\n    const styles = {};\n\n    styles['transform'] = 'translate3d(' + this.offsetX + 'px, 0px, 0px)';\n    styles['backface-visibility'] = 'hidden';\n    styles['width'] = this.innerWidth;\n\n    return styles;\n  }\n}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  ElementRef,\n  Output,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  EventEmitter,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  DoCheck,\n  SkipSelf\n} from '@angular/core';\n\nimport { TreeStatus } from './body-cell.component';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { Keys } from '../../utils/keys';\nimport { ScrollbarHelper } from '../../services/scrollbar-helper.service';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body-row',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div\n      *ngFor=\"let colGroup of _columnsByPin; let i = index; trackBy: trackByGroups\"\n      class=\"datatable-row-{{ colGroup.type }} datatable-row-group\"\n      [ngStyle]=\"_groupStyles[colGroup.type]\"\n    >\n      <datatable-body-cell\n        role=\"cell\"\n        *ngFor=\"let column of colGroup.columns; let ii = index; trackBy: columnTrackingFn\"\n        tabindex=\"-1\"\n        [row]=\"row\"\n        [group]=\"group\"\n        [expanded]=\"expanded\"\n        [isSelected]=\"isSelected\"\n        [rowIndex]=\"rowIndex\"\n        [column]=\"column\"\n        [rowHeight]=\"rowHeight\"\n        [displayCheck]=\"displayCheck\"\n        [treeStatus]=\"treeStatus\"\n        (activate)=\"onActivate($event, ii)\"\n        (treeAction)=\"onTreeAction()\"\n      >\n      </datatable-body-cell>\n    </div>\n  `\n})\nexport class DataTableBodyRowComponent implements DoCheck {\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    this.recalculateColumns(val);\n    this.buildStylesByGroup();\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set innerWidth(val: number) {\n    if (this._columns) {\n      const colByPin = columnsByPin(this._columns);\n      this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n    }\n\n    this._innerWidth = val;\n    this.recalculateColumns();\n    this.buildStylesByGroup();\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() expanded: boolean;\n  @Input() rowClass: any;\n  @Input() row: any;\n  @Input() group: any;\n  @Input() isSelected: boolean;\n  @Input() rowIndex: number;\n  @Input() displayCheck: any;\n  @Input() treeStatus: TreeStatus = 'collapsed';\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.buildStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @HostBinding('class')\n  get cssClass() {\n    let cls = 'datatable-body-row';\n    if (this.isSelected) {\n      cls += ' active';\n    }\n    if (this.rowIndex % 2 !== 0) {\n      cls += ' datatable-row-odd';\n    }\n    if (this.rowIndex % 2 === 0) {\n      cls += ' datatable-row-even';\n    }\n\n    if (this.rowClass) {\n      const res = this.rowClass(this.row);\n      if (typeof res === 'string') {\n        cls += ` ${res}`;\n      } else if (typeof res === 'object') {\n        const keys = Object.keys(res);\n        for (const k of keys) {\n          if (res[k] === true) {\n            cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    return cls;\n  }\n\n  @Input()\n  rowHeight: number;\n\n  @HostBinding('style')\n  get rowStyles() {\n    let styles = this.calcRowStyles();\n    console.log(styles);\n    return styles;\n  }\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  _element: any;\n  _columnGroupWidths: any;\n  _columnsByPin: any;\n  _offsetX: number;\n  _columns: any[];\n  _innerWidth: number;\n  _groupStyles: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private _rowDiffer: KeyValueDiffer<{}, {}>;\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef\n  ) {\n    this._element = element.nativeElement;\n    this._rowDiffer = differs.find({}).create();\n  }\n\n  ngDoCheck(): void {\n    if (this._rowDiffer.diff(this.row)) {\n      this.cd.markForCheck();\n    }\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  buildStylesByGroup() {\n    this._groupStyles.left = this.calcStylesByGroup('left');\n    this._groupStyles.center = this.calcStylesByGroup('center');\n    this._groupStyles.right = this.calcStylesByGroup('right');\n    this.cd.markForCheck();\n  }\n\n  calcRowStyles() {\n    const width = this.innerWidth;\n    const height = this.rowHeight;\n    // const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${width}px`,\n      height: `${height}px`\n    };\n\n    translateXY(styles, 0, 0);\n\n    return styles;\n  }\n\n  calcStylesByGroup(group: string) {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      // translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = (offsetDiff + this.scrollbarHelper.width) * -1;\n      translateXY(styles, offset - offsetX, 0);\n    } else {\n      translateXY(styles, -offsetX, 0);\n    }\n\n    return styles;\n  }\n\n  onActivate(event: any, index: number): void {\n    event.cellIndex = index;\n    event.rowElement = this._element;\n    this.activate.emit(event);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n    const isTargetRow = event.target === this._element;\n\n    const isAction =\n      keyCode === Keys.return ||\n      keyCode === Keys.down ||\n      keyCode === Keys.up ||\n      keyCode === Keys.left ||\n      keyCode === Keys.right;\n\n    if (isAction && isTargetRow) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      this.activate.emit({\n        type: 'keydown',\n        event,\n        row: this.row,\n        rowElement: this._element\n      });\n    }\n  }\n\n  @HostListener('mouseenter', ['$event'])\n  onMouseenter(event: any): void {\n    this.activate.emit({\n      type: 'mouseenter',\n      event,\n      row: this.row,\n      rowElement: this._element\n    });\n  }\n\n  recalculateColumns(val: any[] = this.columns): void {\n    this._columns = val;\n    const colsByPin = columnsByPin(this._columns);\n    this._columnsByPin = columnsByPinArr(this._columns);\n    this._columnGroupWidths = columnGroupWidths(colsByPin, this._columns);\n  }\n\n  onTreeAction() {\n    this.treeAction.emit();\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { ScrollerComponent } from './scroller.component';\nimport { SelectionType } from '../../types/selection.type';\nimport { columnsByPin, columnGroupWidths } from '../../utils/column';\nimport { RowHeightCache } from '../../utils/row-height-cache';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-body',\n  template: `\n    <datatable-progress *ngIf=\"loadingIndicator\"> </datatable-progress>\n    <datatable-selection\n      #selector\n      [selected]=\"selected\"\n      [rows]=\"rows\"\n      [selectCheck]=\"selectCheck\"\n      [selectEnabled]=\"selectEnabled\"\n      [selectionType]=\"selectionType\"\n      [rowIdentity]=\"rowIdentity\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n    >\n      <datatable-scroller\n        *ngIf=\"rows?.length\"\n        [scrollbarV]=\"scrollbarV\"\n        [scrollbarH]=\"scrollbarH\"\n        [scrollHeight]=\"scrollHeight\"\n        [scrollWidth]=\"columnGroupWidths?.total\"\n        (scroll)=\"onBodyScroll($event)\"\n      >\n        <datatable-summary-row\n          *ngIf=\"summaryRow && summaryPosition === 'top'\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n        <datatable-row-wrapper\n          [groupedRows]=\"groupedRows\"\n          *ngFor=\"let group of temp; let i = index; trackBy: rowTrackingFn\"\n          [innerWidth]=\"innerWidth\"\n          [ngStyle]=\"getRowsStyles(group)\"\n          [rowDetail]=\"rowDetail\"\n          [groupHeader]=\"groupHeader\"\n          [offsetX]=\"offsetX\"\n          [detailRowHeight]=\"getDetailRowHeight(group && group[i], i)\"\n          [row]=\"group\"\n          [expanded]=\"getRowExpanded(group)\"\n          [rowIndex]=\"getRowIndex(group && group[i])\"\n          (rowContextmenu)=\"rowContextmenu.emit($event)\"\n        >\n          <datatable-body-row\n            role=\"row\"\n            *ngIf=\"!groupedRows; else groupedRowsTemplate\"\n            tabindex=\"-1\"\n            [isSelected]=\"selector.getRowSelected(group)\"\n            [innerWidth]=\"innerWidth\"\n            [offsetX]=\"offsetX\"\n            [columns]=\"columns\"\n            [rowHeight]=\"getRowHeight(group)\"\n            [row]=\"group\"\n            [rowIndex]=\"getRowIndex(group)\"\n            [expanded]=\"getRowExpanded(group)\"\n            [rowClass]=\"rowClass\"\n            [displayCheck]=\"displayCheck\"\n            [treeStatus]=\"group && group.treeStatus\"\n            (treeAction)=\"onTreeAction(group)\"\n            (activate)=\"selector.onActivate($event, indexes.first + i)\"\n          >\n          </datatable-body-row>\n          <ng-template #groupedRowsTemplate>\n            <datatable-body-row\n              role=\"row\"\n              *ngFor=\"let row of group.value; let i = index; trackBy: rowTrackingFn\"\n              tabindex=\"-1\"\n              [isSelected]=\"selector.getRowSelected(row)\"\n              [innerWidth]=\"innerWidth\"\n              [offsetX]=\"offsetX\"\n              [columns]=\"columns\"\n              [rowHeight]=\"getRowHeight(row)\"\n              [row]=\"row\"\n              [group]=\"group.value\"\n              [rowIndex]=\"getRowIndex(row)\"\n              [expanded]=\"getRowExpanded(row)\"\n              [rowClass]=\"rowClass\"\n              (activate)=\"selector.onActivate($event, i)\"\n            >\n            </datatable-body-row>\n          </ng-template>\n        </datatable-row-wrapper>\n        <datatable-summary-row\n          role=\"row\"\n          *ngIf=\"summaryRow && summaryPosition === 'bottom'\"\n          [ngStyle]=\"getBottomSummaryRowStyles()\"\n          [rowHeight]=\"summaryHeight\"\n          [offsetX]=\"offsetX\"\n          [innerWidth]=\"innerWidth\"\n          [rows]=\"rows\"\n          [columns]=\"columns\"\n        >\n        </datatable-summary-row>\n      </datatable-scroller>\n      <div class=\"empty-row\" *ngIf=\"!rows?.length && !loadingIndicator\" [innerHTML]=\"emptyMessage\"></div>\n    </datatable-selection>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'datatable-body'\n  }\n})\nexport class DataTableBodyComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean;\n  @Input() scrollbarH: boolean;\n  @Input() loadingIndicator: boolean;\n  @Input() externalPaging: boolean;\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number);\n  @Input() offsetX: number;\n  @Input() emptyMessage: string;\n  @Input() selectionType: SelectionType;\n  @Input() selected: any[] = [];\n  @Input() rowIdentity: any;\n  @Input() rowDetail: any;\n  @Input() groupHeader: any;\n  @Input() selectCheck: any;\n  @Input() displayCheck: any;\n  @Input() trackByProp: string;\n  @Input() rowClass: any;\n  @Input() groupedRows: any;\n  @Input() groupExpansionDefault: boolean;\n  @Input() innerWidth: number;\n  @Input() groupRowsBy: string;\n  @Input() virtualization: boolean;\n  @Input() summaryRow: boolean;\n  @Input() summaryPosition: string;\n  @Input() summaryHeight: number;\n\n  @Input() set pageSize(val: number) {\n    this._pageSize = val;\n    this.recalcLayout();\n  }\n\n  get pageSize(): number {\n    return this._pageSize;\n  }\n\n  @Input() set rows(val: any[]) {\n    this._rows = val;\n    this.recalcLayout();\n  }\n\n  get rows(): any[] {\n    return this._rows;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n    const colsByPin = columnsByPin(val);\n    this.columnGroupWidths = columnGroupWidths(colsByPin, val);\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input() set offset(val: number) {\n    this._offset = val;\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) this.recalcLayout();\n  }\n\n  get offset(): number {\n    return this._offset;\n  }\n\n  @Input() set rowCount(val: number) {\n    this._rowCount = val;\n    this.recalcLayout();\n  }\n\n  get rowCount(): number {\n    return this._rowCount;\n  }\n\n  @HostBinding('style.width')\n  get bodyWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    } else {\n      return '100%';\n    }\n  }\n\n  @Input()\n  @HostBinding('style.height')\n  set bodyHeight(val) {\n    if (this.scrollbarV) {\n      this._bodyHeight = val + 'px';\n    } else {\n      this._bodyHeight = 'auto';\n    }\n\n    this.recalcLayout();\n  }\n\n  get bodyHeight() {\n    return this._bodyHeight;\n  }\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n  @Output() page: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() detailToggle: EventEmitter<any> = new EventEmitter();\n  @Output() rowContextmenu = new EventEmitter<{ event: MouseEvent; row: any }>(false);\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  @ViewChild(ScrollerComponent) scroller: ScrollerComponent;\n\n  /**\n   * Returns if selection is enabled.\n   */\n  get selectEnabled(): boolean {\n    return !!this.selectionType;\n  }\n\n  /**\n   * Property that would calculate the height of scroll bar\n   * based on the row heights cache for virtual scroll and virtualization. Other scenarios\n   * calculate scroll height automatically (as height will be undefined).\n   */\n  get scrollHeight(): number | undefined {\n    if (this.scrollbarV && this.virtualization && this.rowCount) {\n      return this.rowHeightsCache.query(this.rowCount - 1);\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n\n  rowHeightsCache: RowHeightCache = new RowHeightCache();\n  temp: any[] = [];\n  offsetY = 0;\n  indexes: any = {};\n  columnGroupWidths: any;\n  columnGroupWidthsWithoutGroup: any;\n  rowTrackingFn: any;\n  listener: any;\n  rowIndexes: any = new WeakMap<any, string>();\n  rowExpansions: any[] = [];\n\n  _rows: any[];\n  _bodyHeight: any;\n  _columns: any[];\n  _rowCount: number;\n  _offset: number;\n  _pageSize: number;\n\n  /**\n   * Creates an instance of DataTableBodyComponent.\n   */\n  constructor(private cd: ChangeDetectorRef) {\n    // declare fn here so we can get access to the `this` property\n    this.rowTrackingFn = (index: number, row: any): any => {\n      const idx = this.getRowIndex(row);\n      if (this.trackByProp) {\n        return row[this.trackByProp];\n      } else {\n        return idx;\n      }\n    };\n  }\n\n  /**\n   * Called after the constructor, initializing input properties\n   */\n  ngOnInit(): void {\n    if (this.rowDetail) {\n      this.listener = this.rowDetail.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'row') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n\n    if (this.groupHeader) {\n      this.listener = this.groupHeader.toggle.subscribe(({ type, value }: { type: string; value: any }) => {\n        if (type === 'group') {\n          this.toggleRowExpansion(value);\n        }\n        if (type === 'all') {\n          this.toggleAllRows(value);\n        }\n\n        // Refresh rows after toggle\n        // Fixes #883\n        this.updateIndexes();\n        this.updateRows();\n        this.cd.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Called once, before the instance is destroyed.\n   */\n  ngOnDestroy(): void {\n    if (this.rowDetail || this.groupHeader) {\n      this.listener.unsubscribe();\n    }\n  }\n\n  /**\n   * Updates the Y offset given a new offset.\n   */\n  updateOffsetY(offset?: number): void {\n    // scroller is missing on empty table\n    if (!this.scroller) {\n      return;\n    }\n\n    if (this.scrollbarV && this.virtualization && offset) {\n      // First get the row Index that we need to move to.\n      const rowIndex = this.pageSize * offset;\n      offset = this.rowHeightsCache.query(rowIndex - 1);\n    } else if (this.scrollbarV && !this.virtualization) {\n      offset = 0;\n    }\n\n    this.scroller.setOffset(offset || 0);\n  }\n\n  /**\n   * Body was scrolled, this is mainly useful for\n   * when a user is server-side pagination via virtual scroll.\n   */\n  onBodyScroll(event: any): void {\n    const scrollYPos: number = event.scrollYPos;\n    const scrollXPos: number = event.scrollXPos;\n\n    // if scroll change, trigger update\n    // this is mainly used for header cell positions\n    if (this.offsetY !== scrollYPos || this.offsetX !== scrollXPos) {\n      this.scroll.emit({\n        offsetY: scrollYPos,\n        offsetX: scrollXPos\n      });\n    }\n\n    this.offsetY = scrollYPos;\n    this.offsetX = scrollXPos;\n\n    this.updateIndexes();\n    this.updatePage(event.direction);\n    this.updateRows();\n  }\n\n  /**\n   * Updates the page given a direction.\n   */\n  updatePage(direction: string): void {\n    let offset = this.indexes.first / this.pageSize;\n\n    if (direction === 'up') {\n      offset = Math.ceil(offset);\n    } else if (direction === 'down') {\n      offset = Math.floor(offset);\n    }\n\n    if (direction !== undefined && !isNaN(offset)) {\n      this.page.emit({ offset });\n    }\n  }\n\n  /**\n   * Updates the rows in the view port\n   */\n  updateRows(): void {\n    const { first, last } = this.indexes;\n    let rowIndex = first;\n    let idx = 0;\n    const temp: any[] = [];\n\n    // if grouprowsby has been specified treat row paging\n    // parameters as group paging parameters ie if limit 10 has been\n    // specified treat it as 10 groups rather than 10 rows\n    if (this.groupedRows) {\n      let maxRowsPerGroup = 3;\n      // if there is only one group set the maximum number of\n      // rows per group the same as the total number of rows\n      if (this.groupedRows.length === 1) {\n        maxRowsPerGroup = this.groupedRows[0].value.length;\n      }\n\n      while (rowIndex < last && rowIndex < this.groupedRows.length) {\n        // Add the groups into this page\n        const group = this.groupedRows[rowIndex];\n        this.rowIndexes.set(group, rowIndex);\n\n        if (group.value) {\n          // add indexes for each group item\n          group.value.forEach((g: any, i: number) => {\n            const _idx = `${rowIndex}-${i}`;\n            this.rowIndexes.set(g, _idx);\n          });\n        }\n        temp[idx] = group;\n        idx++;\n\n        // Group index in this context\n        rowIndex++;\n      }\n    } else {\n      while (rowIndex < last && rowIndex < this.rowCount) {\n        const row = this.rows[rowIndex];\n\n        if (row) {\n          // add indexes for each row\n          this.rowIndexes.set(row, rowIndex);\n          temp[idx] = row;\n        }\n\n        idx++;\n        rowIndex++;\n      }\n    }\n\n    this.temp = temp;\n  }\n\n  /**\n   * Get the row height\n   */\n  getRowHeight(row: any): number {\n    // if its a function return it\n    if (typeof this.rowHeight === 'function') {\n      return this.rowHeight(row);\n    }\n\n    return this.rowHeight as number;\n  }\n\n  /**\n   * @param group the group with all rows\n   */\n  getGroupHeight(group: any): number {\n    let rowHeight = 0;\n\n    if (group.value) {\n      for (let index = 0; index < group.value.length; index++) {\n        rowHeight += this.getRowAndDetailHeight(group.value[index]);\n      }\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Calculate row height based on the expanded state of the row.\n   */\n  getRowAndDetailHeight(row: any): number {\n    let rowHeight = this.getRowHeight(row);\n    const expanded = this.getRowExpanded(row);\n\n    // Adding detail row height if its expanded.\n    if (expanded) {\n      rowHeight += this.getDetailRowHeight(row);\n    }\n\n    return rowHeight;\n  }\n\n  /**\n   * Get the height of the detail row.\n   */\n  getDetailRowHeight = (row?: any, index?: any): number => {\n    if (!this.rowDetail) {\n      return 0;\n    }\n    const rowHeight = this.rowDetail.rowHeight;\n    return typeof rowHeight === 'function' ? rowHeight(row, index) : (rowHeight as number);\n  };\n\n  /**\n   * Calculates the styles for the row so that the rows can be moved in 2D space\n   * during virtual scroll inside the DOM.   In the below case the Y position is\n   * manipulated.   As an example, if the height of row 0 is 30 px and row 1 is\n   * 100 px then following styles are generated:\n   *\n   * transform: translate3d(0px, 0px, 0px);    ->  row0\n   * transform: translate3d(0px, 30px, 0px);   ->  row1\n   * transform: translate3d(0px, 130px, 0px);  ->  row2\n   *\n   * Row heights have to be calculated based on the row heights cache as we wont\n   * be able to determine which row is of what height before hand.  In the above\n   * case the positionY of the translate3d for row2 would be the sum of all the\n   * heights of the rows before it (i.e. row0 and row1).\n   *\n   * @param rows the row that needs to be placed in the 2D space.\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getRowsStyles(rows: any): any {\n    const styles: any = {};\n\n    // only add styles for the group if there is a group\n    if (this.groupedRows) {\n      styles.width = this.columnGroupWidths.total;\n    }\n\n    if (this.scrollbarV && this.virtualization) {\n      let idx = 0;\n\n      if (this.groupedRows) {\n        // Get the latest row rowindex in a group\n        const row = rows[rows.length - 1];\n        idx = row ? this.getRowIndex(row) : 0;\n      } else {\n        idx = this.getRowIndex(rows);\n      }\n\n      // const pos = idx * rowHeight;\n      // The position of this row would be the sum of all row heights\n      // until the previous row position.\n      const pos = this.rowHeightsCache.query(idx - 1);\n\n      translateXY(styles, this.offsetX, pos);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Calculate bottom summary row offset for scrollbar mode.\n   * For more information about cache and offset calculation\n   * see description for `getRowsStyles` method\n   *\n   * @returns the CSS3 style to be applied\n   *\n   * @memberOf DataTableBodyComponent\n   */\n  getBottomSummaryRowStyles(): any {\n    if (!this.scrollbarV || !this.rows || !this.rows.length) {\n      return null;\n    }\n\n    const styles = { position: 'absolute' };\n    const pos = this.rowHeightsCache.query(this.rows.length - 1);\n\n    translateXY(styles, 0, pos);\n\n    return styles;\n  }\n\n  /**\n   * Hides the loading indicator\n   */\n  hideIndicator(): void {\n    setTimeout(() => (this.loadingIndicator = false), 500);\n  }\n\n  /**\n   * Updates the index of the rows in the viewport\n   */\n  updateIndexes(): void {\n    let first = 0;\n    let last = 0;\n\n    if (this.scrollbarV) {\n      if (this.virtualization) {\n        // Calculation of the first and last indexes will be based on where the\n        // scrollY position would be at.  The last index would be the one\n        // that shows up inside the view port the last.\n        const height = parseInt(this.bodyHeight, 0);\n        first = this.rowHeightsCache.getRowIndex(this.offsetY);\n        last = this.rowHeightsCache.getRowIndex(height + this.offsetY) + 1;\n      } else {\n        // If virtual rows are not needed\n        // We render all in one go\n        first = 0;\n        last = this.rowCount;\n      }\n    } else {\n      // The server is handling paging and will pass an array that begins with the\n      // element at a specified offset.  first should always be 0 with external paging.\n      if (!this.externalPaging) {\n        first = Math.max(this.offset * this.pageSize, 0);\n      }\n      last = Math.min(first + this.pageSize, this.rowCount);\n    }\n\n    this.indexes = { first, last };\n  }\n\n  /**\n   * Refreshes the full Row Height cache.  Should be used\n   * when the entire row array state has changed.\n   */\n  refreshRowHeightCache(): void {\n    if (!this.scrollbarV || (this.scrollbarV && !this.virtualization)) {\n      return;\n    }\n\n    // clear the previous row height cache if already present.\n    // this is useful during sorts, filters where the state of the\n    // rows array is changed.\n    this.rowHeightsCache.clearCache();\n\n    // Initialize the tree only if there are rows inside the tree.\n    if (this.rows && this.rows.length) {\n      const rowExpansions = new Set();\n      for (const row of this.rows) {\n        if (this.getRowExpanded(row)) {\n          rowExpansions.add(row);\n        }\n      }\n\n      this.rowHeightsCache.initCache({\n        rows: this.rows,\n        rowHeight: this.rowHeight,\n        detailRowHeight: this.getDetailRowHeight,\n        externalVirtual: this.scrollbarV && this.externalPaging,\n        rowCount: this.rowCount,\n        rowIndexes: this.rowIndexes,\n        rowExpansions\n      });\n    }\n  }\n\n  /**\n   * Gets the index for the view port\n   */\n  getAdjustedViewPortIndex(): number {\n    // Capture the row index of the first row that is visible on the viewport.\n    // If the scroll bar is just below the row which is highlighted then make that as the\n    // first index.\n    const viewPortFirstRowIndex = this.indexes.first;\n\n    if (this.scrollbarV && this.virtualization) {\n      const offsetScroll = this.rowHeightsCache.query(viewPortFirstRowIndex - 1);\n      return offsetScroll <= this.offsetY ? viewPortFirstRowIndex - 1 : viewPortFirstRowIndex;\n    }\n\n    return viewPortFirstRowIndex;\n  }\n\n  /**\n   * Toggle the Expansion of the row i.e. if the row is expanded then it will\n   * collapse and vice versa.   Note that the expanded status is stored as\n   * a part of the row object itself as we have to preserve the expanded row\n   * status in case of sorting and filtering of the row set.\n   */\n  toggleRowExpansion(row: any): void {\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n    const rowExpandedIdx = this.getRowExpandedIdx(row, this.rowExpansions);\n    const expanded = rowExpandedIdx > -1;\n\n    // If the detailRowHeight is auto --> only in case of non-virtualized scroll\n    if (this.scrollbarV && this.virtualization) {\n      const detailRowHeight = this.getDetailRowHeight(row) * (expanded ? -1 : 1);\n      // const idx = this.rowIndexes.get(row) || 0;\n      const idx = this.getRowIndex(row);\n      this.rowHeightsCache.update(idx, detailRowHeight);\n    }\n\n    // Update the toggled row and update thive nevere heights in the cache.\n    if (expanded) {\n      this.rowExpansions.splice(rowExpandedIdx, 1);\n    } else {\n      this.rowExpansions.push(row);\n    }\n\n    this.detailToggle.emit({\n      rows: [row],\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Expand/Collapse all the rows no matter what their state is.\n   */\n  toggleAllRows(expanded: boolean): void {\n    // clear prev expansions\n    this.rowExpansions = [];\n\n    // Capture the row index of the first row that is visible on the viewport.\n    const viewPortFirstRowIndex = this.getAdjustedViewPortIndex();\n\n    if (expanded) {\n      for (const row of this.rows) {\n        this.rowExpansions.push(row);\n      }\n    }\n\n    if (this.scrollbarV) {\n      // Refresh the full row heights cache since every row was affected.\n      this.recalcLayout();\n    }\n\n    // Emit all rows that have been expanded.\n    this.detailToggle.emit({\n      rows: this.rows,\n      currentIndex: viewPortFirstRowIndex\n    });\n  }\n\n  /**\n   * Recalculates the table\n   */\n  recalcLayout(): void {\n    this.refreshRowHeightCache();\n    this.updateIndexes();\n    this.updateRows();\n  }\n\n  /**\n   * Tracks the column\n   */\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  /**\n   * Gets the row pinning group styles\n   */\n  stylesByGroup(group: string) {\n    const widths = this.columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'left') {\n      translateXY(styles, offsetX, 0);\n    } else if (group === 'right') {\n      const bodyWidth = parseInt(this.innerWidth + '', 0);\n      const totalDiff = widths.total - bodyWidth;\n      const offsetDiff = totalDiff - offsetX;\n      const offset = offsetDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n\n  /**\n   * Returns if the row was expanded and set default row expansion when row expansion is empty\n   */\n  getRowExpanded(row: any): boolean {\n    if (this.rowExpansions.length === 0 && this.groupExpansionDefault) {\n      for (const group of this.groupedRows) {\n        this.rowExpansions.push(group);\n      }\n    }\n\n    return this.getRowExpandedIdx(row, this.rowExpansions) > -1;\n  }\n\n  getRowExpandedIdx(row: any, expanded: any[]): number {\n    if (!expanded || !expanded.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return expanded.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n\n  /**\n   * Gets the row index given a row\n   */\n  getRowIndex(row: any): number {\n    return this.rowIndexes.get(row) || 0;\n  }\n\n  onTreeAction(row: any) {\n    this.treeAction.emit({ row });\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-progress',\n  template: `\n    <div class=\"progress-linear\" role=\"progressbar\">\n      <div class=\"container\">\n        <div class=\"bar\"></div>\n      </div>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressBarComponent {}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  Output,\n  EventEmitter,\n  Renderer2,\n  NgZone,\n  OnInit,\n  OnDestroy,\n  HostBinding,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { MouseEvent } from '../../events';\n\n@Component({\n  selector: 'datatable-scroller',\n  template: ` <ng-content></ng-content> `,\n  host: {\n    class: 'datatable-scroll'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScrollerComponent implements OnInit, OnDestroy {\n  @Input() scrollbarV: boolean = false;\n  @Input() scrollbarH: boolean = false;\n\n  @HostBinding('style.height.px')\n  @Input()\n  scrollHeight: number;\n\n  @HostBinding('style.width.px')\n  @Input()\n  scrollWidth: number;\n\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n\n  scrollYPos: number = 0;\n  scrollXPos: number = 0;\n  prevScrollYPos: number = 0;\n  prevScrollXPos: number = 0;\n  element: any;\n  parentElement: any;\n  onScrollListener: any;\n\n  private _scrollEventListener: any = null;\n\n  constructor(private ngZone: NgZone, element: ElementRef, private renderer: Renderer2) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // manual bind so we don't always listen\n    if (this.scrollbarV || this.scrollbarH) {\n      const renderer = this.renderer;\n      this.parentElement = renderer.parentNode(renderer.parentNode(this.element));\n      this._scrollEventListener = this.onScrolled.bind(this);\n      this.parentElement.addEventListener('scroll', this._scrollEventListener);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._scrollEventListener) {\n      this.parentElement.removeEventListener('scroll', this._scrollEventListener);\n      this._scrollEventListener = null;\n    }\n  }\n\n  setOffset(offsetY: number): void {\n    if (this.parentElement) {\n      this.parentElement.scrollTop = offsetY;\n    }\n  }\n\n  onScrolled(event: MouseEvent): void {\n    const dom: Element = <Element>event.currentTarget;\n    requestAnimationFrame(() => {\n      this.scrollYPos = dom.scrollTop;\n      this.scrollXPos = dom.scrollLeft;\n      this.updateOffset();\n    });\n  }\n\n  updateOffset(): void {\n    let direction: string;\n    if (this.scrollYPos < this.prevScrollYPos) {\n      direction = 'down';\n    } else if (this.scrollYPos > this.prevScrollYPos) {\n      direction = 'up';\n    }\n\n    this.scroll.emit({\n      direction,\n      scrollYPos: this.scrollYPos,\n      scrollXPos: this.scrollXPos\n    });\n\n    this.prevScrollYPos = this.scrollYPos;\n    this.prevScrollXPos = this.scrollXPos;\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { SelectionType } from '../../types/selection.type';\nimport { selectRowsBetween, selectRows } from '../../utils/selection';\nimport { Keys } from '../../utils/keys';\n\nexport interface Model {\n  type: string;\n  event: MouseEvent | KeyboardEvent;\n  row: any;\n  rowElement: any;\n  cellElement: any;\n  cellIndex: number;\n}\n\n@Component({\n  selector: 'datatable-selection',\n  template: ` <ng-content></ng-content> `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableSelectionComponent {\n  @Input() rows: any[];\n  @Input() selected: any[];\n  @Input() selectEnabled: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() rowIdentity: any;\n  @Input() selectCheck: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  prevIndex: number;\n\n  selectRow(event: KeyboardEvent | MouseEvent, index: number, row: any): void {\n    if (!this.selectEnabled) return;\n\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const multi = this.selectionType === SelectionType.multi;\n    const multiClick = this.selectionType === SelectionType.multiClick;\n    let selected: any[] = [];\n\n    if (multi || chkbox || multiClick) {\n      if (event.shiftKey) {\n        selected = selectRowsBetween([], this.rows, index, this.prevIndex, this.getRowSelectedIdx.bind(this));\n      } else if (event.ctrlKey || event.metaKey || multiClick || chkbox) {\n        selected = selectRows([...this.selected], row, this.getRowSelectedIdx.bind(this));\n      } else {\n        selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n      }\n    } else {\n      selected = selectRows([], row, this.getRowSelectedIdx.bind(this));\n    }\n\n    if (typeof this.selectCheck === 'function') {\n      selected = selected.filter(this.selectCheck.bind(this));\n    }\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n\n    this.prevIndex = index;\n\n    this.select.emit({\n      selected\n    });\n  }\n\n  onActivate(model: Model, index: number): void {\n    const { type, event, row } = model;\n    const chkbox = this.selectionType === SelectionType.checkbox;\n    const select = (!chkbox && (type === 'click' || type === 'dblclick')) || (chkbox && type === 'checkbox');\n\n    if (select) {\n      this.selectRow(event, index, row);\n    } else if (type === 'keydown') {\n      if ((<KeyboardEvent>event).keyCode === Keys.return) {\n        this.selectRow(event, index, row);\n      } else {\n        this.onKeyboardFocus(model);\n      }\n    }\n    this.activate.emit(model);\n  }\n\n  onKeyboardFocus(model: Model): void {\n    const { keyCode } = <KeyboardEvent>model.event;\n    const shouldFocus = keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.right || keyCode === Keys.left;\n\n    if (shouldFocus) {\n      const isCellSelection = this.selectionType === SelectionType.cell;\n\n      if (!model.cellElement || !isCellSelection) {\n        this.focusRow(model.rowElement, keyCode);\n      } else if (isCellSelection) {\n        this.focusCell(model.cellElement, model.rowElement, keyCode, model.cellIndex);\n      }\n    }\n  }\n\n  focusRow(rowElement: any, keyCode: number): void {\n    const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n    if (nextRowElement) nextRowElement.focus();\n  }\n\n  getPrevNextRow(rowElement: any, keyCode: number): any {\n    const parentElement = rowElement.parentElement;\n\n    if (parentElement) {\n      let focusElement: HTMLElement;\n      if (keyCode === Keys.up) {\n        focusElement = parentElement.previousElementSibling;\n      } else if (keyCode === Keys.down) {\n        focusElement = parentElement.nextElementSibling;\n      }\n\n      if (focusElement && focusElement.children.length) {\n        return focusElement.children[0];\n      }\n    }\n  }\n\n  focusCell(cellElement: any, rowElement: any, keyCode: number, cellIndex: number): void {\n    let nextCellElement: HTMLElement;\n\n    if (keyCode === Keys.left) {\n      nextCellElement = cellElement.previousElementSibling;\n    } else if (keyCode === Keys.right) {\n      nextCellElement = cellElement.nextElementSibling;\n    } else if (keyCode === Keys.up || keyCode === Keys.down) {\n      const nextRowElement = this.getPrevNextRow(rowElement, keyCode);\n      if (nextRowElement) {\n        const children = nextRowElement.getElementsByClassName('datatable-body-cell');\n        if (children.length) nextCellElement = children[cellIndex];\n      }\n    }\n\n    if (nextCellElement) nextCellElement.focus();\n  }\n\n  getRowSelected(row: any): boolean {\n    return this.getRowSelectedIdx(row, this.selected) > -1;\n  }\n\n  getRowSelectedIdx(row: any, selected: any[]): number {\n    if (!selected || !selected.length) return -1;\n\n    const rowId = this.rowIdentity(row);\n    return selected.findIndex(r => {\n      const id = this.rowIdentity(r);\n      return id === rowId;\n    });\n  }\n}\n","import { Component, Input, OnChanges, PipeTransform, TemplateRef } from '@angular/core';\n\nexport interface ISummaryColumn {\n  summaryFunc?: (cells: any[]) => any;\n  summaryTemplate?: TemplateRef<any>;\n\n  prop: string;\n  pipe?: PipeTransform;\n}\n\nfunction defaultSumFunc(cells: any[]): any {\n  const cellsWithValues = cells.filter(cell => !!cell);\n\n  if (!cellsWithValues.length) {\n    return null;\n  }\n  if (cellsWithValues.some(cell => typeof cell !== 'number')) {\n    return null;\n  }\n\n  return cellsWithValues.reduce((res, cell) => res + cell);\n}\n\nfunction noopSumFunc(cells: any[]): void {\n  return null;\n}\n\n@Component({\n  selector: 'datatable-summary-row',\n  template: `\n    <datatable-body-row\n      *ngIf=\"summaryRow && _internalColumns\"\n      tabindex=\"-1\"\n      [innerWidth]=\"innerWidth\"\n      [offsetX]=\"offsetX\"\n      [columns]=\"_internalColumns\"\n      [rowHeight]=\"rowHeight\"\n      [row]=\"summaryRow\"\n      [rowIndex]=\"-1\"\n    >\n    </datatable-body-row>\n  `,\n  host: {\n    class: 'datatable-summary-row'\n  }\n})\nexport class DataTableSummaryRowComponent implements OnChanges {\n  @Input() rows: any[];\n  @Input() columns: ISummaryColumn[];\n\n  @Input() rowHeight: number;\n  @Input() offsetX: number;\n  @Input() innerWidth: number;\n\n  _internalColumns: ISummaryColumn[];\n  summaryRow: any = {};\n\n  ngOnChanges() {\n    if (!this.columns || !this.rows) {\n      return;\n    }\n    this.updateInternalColumns();\n    this.updateValues();\n  }\n\n  private updateInternalColumns() {\n    this._internalColumns = this.columns.map(col => ({\n      ...col,\n      cellTemplate: col.summaryTemplate\n    }));\n  }\n\n  private updateValues() {\n    this.summaryRow = {};\n\n    this.columns\n      .filter(col => !col.summaryTemplate)\n      .forEach(col => {\n        const cellsFromSingleColumn = this.rows.map(row => row[col.prop]);\n        const sumFunc = this.getSummaryFunction(col);\n\n        this.summaryRow[col.prop] = col.pipe\n          ? col.pipe.transform(sumFunc(cellsFromSingleColumn))\n          : sumFunc(cellsFromSingleColumn);\n      });\n  }\n\n  private getSummaryFunction(column: ISummaryColumn): (a: any[]) => any {\n    if (column.summaryFunc === undefined) {\n      return defaultSumFunc;\n    } else if (column.summaryFunc === null) {\n      return noopSumFunc;\n    } else {\n      return column.summaryFunc;\n    }\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-cell-template]' })\nexport class DataTableColumnCellDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-header-template]' })\nexport class DataTableColumnHeaderDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Directive, TemplateRef, ContentChild, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { DataTableColumnHeaderDirective } from './column-header.directive';\nimport { DataTableColumnCellDirective } from './column-cell.directive';\nimport { DataTableColumnCellTreeToggle } from './tree.directive';\nimport { ColumnChangesService } from '../../services/column-changes.service';\nimport { TableColumnProp } from '../../types/table-column.type';\n\n@Directive({ selector: 'ngx-datatable-column' })\nexport class DataTableColumnDirective implements OnChanges {\n  @Input() name: string;\n  @Input() prop: TableColumnProp;\n  @Input() frozenLeft: any;\n  @Input() frozenRight: any;\n  @Input() flexGrow: number;\n  @Input() resizeable: boolean;\n  @Input() comparator: any;\n  @Input() pipe: any;\n  @Input() sortable: boolean;\n  @Input() draggable: boolean;\n  @Input() canAutoResize: boolean;\n  @Input() minWidth: number;\n  @Input() width: number;\n  @Input() maxWidth: number;\n  @Input() checkboxable: boolean;\n  @Input() headerCheckboxable: boolean;\n  @Input() headerClass: string | ((data: any) => string | any);\n  @Input() cellClass: string | ((data: any) => string | any);\n  @Input() isTreeColumn: boolean;\n  @Input() treeLevelIndent: number;\n  @Input() summaryFunc: (cells: any[]) => any;\n  @Input() summaryTemplate: TemplateRef<any>;\n\n  @Input('cellTemplate')\n  _cellTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnCellDirective, { read: TemplateRef, static: true })\n  _cellTemplateQuery: TemplateRef<any>;\n\n  get cellTemplate(): TemplateRef<any> {\n    return this._cellTemplateInput || this._cellTemplateQuery;\n  }\n\n  @Input('headerTemplate')\n  _headerTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnHeaderDirective, { read: TemplateRef, static: true })\n  _headerTemplateQuery: TemplateRef<any>;\n\n  get headerTemplate(): TemplateRef<any> {\n    return this._headerTemplateInput || this._headerTemplateQuery;\n  }\n\n  @Input('treeToggleTemplate')\n  _treeToggleTemplateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableColumnCellTreeToggle, { read: TemplateRef, static: true })\n  _treeToggleTemplateQuery: TemplateRef<any>;\n\n  get treeToggleTemplate(): TemplateRef<any> {\n    return this._treeToggleTemplateInput || this._treeToggleTemplateQuery;\n  }\n\n  private isFirstChange = true;\n\n  constructor(private columnChangesService: ColumnChangesService) {}\n\n  ngOnChanges() {\n    if (this.isFirstChange) {\n      this.isFirstChange = false;\n    } else {\n      this.columnChangesService.onInputChange();\n    }\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-tree-toggle]' })\nexport class DataTableColumnCellTreeToggle {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  ViewChild,\n  HostListener,\n  ContentChildren,\n  OnInit,\n  QueryList,\n  AfterViewInit,\n  HostBinding,\n  ContentChild,\n  DoCheck,\n  KeyValueDiffers,\n  KeyValueDiffer,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  SkipSelf,\n  Optional,\n  Inject\n} from '@angular/core';\n\nimport { DatatableGroupHeaderDirective } from './body/body-group-header.directive';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { INgxDatatableConfig } from '../ngx-datatable.module';\nimport { groupRowsByParents, optionalGetterForProp } from '../utils/tree';\nimport { TableColumn } from '../types/table-column.type';\nimport { setColumnDefaults, translateTemplates } from '../utils/column-helper';\nimport { ColumnMode } from '../types/column-mode.type';\nimport { SelectionType } from '../types/selection.type';\nimport { SortType } from '../types/sort.type';\nimport { ContextmenuType } from '../types/contextmenu.type';\nimport { DataTableColumnDirective } from './columns/column.directive';\nimport { DatatableRowDetailDirective } from './row-detail/row-detail.directive';\nimport { DatatableFooterDirective } from './footer/footer.directive';\nimport { DataTableBodyComponent } from './body/body.component';\nimport { DataTableHeaderComponent } from './header/header.component';\nimport { ScrollbarHelper } from '../services/scrollbar-helper.service';\nimport { ColumnChangesService } from '../services/column-changes.service';\nimport { DimensionsHelper } from '../services/dimensions-helper.service';\nimport { throttleable } from '../utils/throttle';\nimport { forceFillColumnWidths, adjustColumnWidths } from '../utils/math';\nimport { sortRows } from '../utils/sort';\n\n@Component({\n  selector: 'ngx-datatable',\n  templateUrl: './datatable.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./datatable.component.scss'],\n  host: {\n    class: 'ngx-datatable'\n  }\n})\nexport class DatatableComponent implements OnInit, DoCheck, AfterViewInit {\n  /**\n   * Template for the target marker of drag target columns.\n   */\n  @Input() targetMarkerTemplate: any;\n\n  /**\n   * Rows that are displayed in the table.\n   */\n  @Input() set rows(val: any) {\n    this._rows = val;\n\n    if (val) {\n      this._internalRows = [...val];\n    }\n\n    // auto sort on new updates\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(\n      this._internalRows,\n      optionalGetterForProp(this.treeFromRelation),\n      optionalGetterForProp(this.treeToRelation)\n    );\n\n    // recalculate sizes/etc\n    this.recalculate();\n\n    if (this._rows && this._groupRowsBy) {\n      // If a column has been specified in _groupRowsBy created a new array with the data grouped by that row\n      this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n    }\n\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Gets the rows.\n   */\n  get rows(): any {\n    return this._rows;\n  }\n\n  /**\n   * This attribute allows the user to set the name of the column to group the data with\n   */\n  @Input() set groupRowsBy(val: string) {\n    if (val) {\n      this._groupRowsBy = val;\n      if (this._rows && this._groupRowsBy) {\n        // cretes a new array with the data grouped\n        this.groupedRows = this.groupArrayBy(this._rows, this._groupRowsBy);\n      }\n    }\n  }\n\n  get groupRowsBy() {\n    return this._groupRowsBy;\n  }\n\n  /**\n   * This attribute allows the user to set a grouped array in the following format:\n   *  [\n   *    {groupid=1} [\n   *      {id=1 name=\"test1\"},\n   *      {id=2 name=\"test2\"},\n   *      {id=3 name=\"test3\"}\n   *    ]},\n   *    {groupid=2>[\n   *      {id=4 name=\"test4\"},\n   *      {id=5 name=\"test5\"},\n   *      {id=6 name=\"test6\"}\n   *    ]}\n   *  ]\n   */\n  @Input() groupedRows: any[];\n\n  /**\n   * Columns to be displayed.\n   */\n  @Input() set columns(val: TableColumn[]) {\n    if (val) {\n      this._internalColumns = [...val];\n      setColumnDefaults(this._internalColumns);\n      this.recalculateColumns();\n    }\n\n    this._columns = val;\n  }\n\n  /**\n   * Get the columns.\n   */\n  get columns(): TableColumn[] {\n    return this._columns;\n  }\n\n  /**\n   * List of row objects that should be\n   * represented as selected in the grid.\n   * Default value: `[]`\n   */\n  @Input() selected: any[] = [];\n\n  /**\n   * Enable vertical scrollbars\n   */\n  @Input() scrollbarV: boolean = false;\n\n  /**\n   * Enable horz scrollbars\n   */\n  @Input() scrollbarH: boolean = false;\n\n  /**\n   * The row height; which is necessary\n   * to calculate the height for the lazy rendering.\n   */\n  @Input() rowHeight: number | 'auto' | ((row?: any) => number) = 30;\n\n  /**\n   * Type of column width distribution formula.\n   * Example: flex, force, standard\n   */\n  @Input() columnMode: ColumnMode | keyof typeof ColumnMode = ColumnMode.standard;\n\n  /**\n   * The minimum header height in pixels.\n   * Pass a falsey for no header\n   */\n  @Input() headerHeight: number = 30;\n\n  /**\n   * The minimum footer height in pixels.\n   * Pass falsey for no footer\n   */\n  @Input() footerHeight: number = 0;\n\n  /**\n   * If the table should use external paging\n   * otherwise its assumed that all data is preloaded.\n   */\n  @Input() externalPaging: boolean = false;\n\n  /**\n   * If the table should use external sorting or\n   * the built-in basic sorting.\n   */\n  @Input() externalSorting: boolean = false;\n\n  /**\n   * The page size to be shown.\n   * Default value: `undefined`\n   */\n  @Input() set limit(val: number | undefined) {\n    this._limit = val;\n\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n\n  /**\n   * Gets the limit.\n   */\n  get limit(): number | undefined {\n    return this._limit;\n  }\n\n  /**\n   * The total count of all rows.\n   * Default value: `0`\n   */\n  @Input() set count(val: number) {\n    this._count = val;\n\n    // recalculate sizes/etc\n    this.recalculate();\n  }\n\n  /**\n   * Gets the count.\n   */\n  get count(): number {\n    return this._count;\n  }\n\n  /**\n   * The current offset ( page - 1 ) shown.\n   * Default value: `0`\n   */\n  @Input() set offset(val: number) {\n    this._offset = val;\n  }\n  get offset(): number {\n    return Math.max(Math.min(this._offset, Math.ceil(this.rowCount / this.pageSize) - 1), 0);\n  }\n\n  /**\n   * Show the linear loading bar.\n   * Default value: `false`\n   */\n  @Input() loadingIndicator: boolean = false;\n\n  /**\n   * Type of row selection. Options are:\n   *\n   *  - `single`\n   *  - `multi`\n   *  - `checkbox`\n   *  - `multiClick`\n   *  - `cell`\n   *\n   * For no selection pass a `falsey`.\n   * Default value: `undefined`\n   */\n  @Input() selectionType: SelectionType;\n\n  /**\n   * Enable/Disable ability to re-order columns\n   * by dragging them.\n   */\n  @Input() reorderable: boolean = true;\n\n  /**\n   * Swap columns on re-order columns or\n   * move them.\n   */\n  @Input() swapColumns: boolean = true;\n\n  /**\n   * The type of sorting\n   */\n  @Input() sortType: SortType = SortType.single;\n\n  /**\n   * Array of sorted columns by property and type.\n   * Default value: `[]`\n   */\n  @Input() sorts: any[] = [];\n\n  /**\n   * Css class overrides\n   */\n  @Input() cssClasses: any = {\n    sortAscending: 'datatable-icon-up',\n    sortDescending: 'datatable-icon-down',\n    sortUnset: 'datatable-icon-sort-unset',\n    pagerLeftArrow: 'datatable-icon-left',\n    pagerRightArrow: 'datatable-icon-right',\n    pagerPrevious: 'datatable-icon-prev',\n    pagerNext: 'datatable-icon-skip'\n  };\n\n  /**\n   * Message overrides for localization\n   *\n   * emptyMessage     [default] = 'No data to display'\n   * totalMessage     [default] = 'total'\n   * selectedMessage  [default] = 'selected'\n   */\n  @Input() messages: any = {\n    // Message to show when array is presented\n    // but contains no values\n    emptyMessage: 'No data to display',\n\n    // Footer total message\n    totalMessage: 'total',\n\n    // Footer selected message\n    selectedMessage: 'selected'\n  };\n\n  /**\n   * Row specific classes.\n   * Similar implementation to ngClass.\n   *\n   *  [rowClass]=\"'first second'\"\n   *  [rowClass]=\"{ 'first': true, 'second': true, 'third': false }\"\n   */\n  @Input() rowClass: any;\n\n  /**\n   * A boolean/function you can use to check whether you want\n   * to select a particular row based on a criteria. Example:\n   *\n   *    (selection) => {\n   *      return selection !== 'Ethel Price';\n   *    }\n   */\n  @Input() selectCheck: any;\n\n  /**\n   * A function you can use to check whether you want\n   * to show the checkbox for a particular row based on a criteria. Example:\n   *\n   *    (row, column, value) => {\n   *      return row.name !== 'Ethel Price';\n   *    }\n   */\n  @Input() displayCheck: (row: any, column?: any, value?: any) => boolean;\n\n  /**\n   * A boolean you can use to set the detault behaviour of rows and groups\n   * whether they will start expanded or not. If ommited the default is NOT expanded.\n   *\n   */\n  @Input() groupExpansionDefault: boolean = false;\n\n  /**\n   * Property to which you can use for custom tracking of rows.\n   * Example: 'name'\n   */\n  @Input() trackByProp: string;\n\n  /**\n   * Property to which you can use for determining select all\n   * rows on current page or not.\n   *\n   * @memberOf DatatableComponent\n   */\n  @Input() selectAllRowsOnPage = false;\n\n  /**\n   * A flag for row virtualization on / off\n   */\n  @Input() virtualization: boolean = true;\n\n  /**\n   * Tree from relation\n   */\n  @Input() treeFromRelation: string;\n\n  /**\n   * Tree to relation\n   */\n  @Input() treeToRelation: string;\n\n  /**\n   * A flag for switching summary row on / off\n   */\n  @Input() summaryRow: boolean = false;\n\n  /**\n   * A height of summary row\n   */\n  @Input() summaryHeight: number = 30;\n\n  /**\n   * A property holds a summary row position: top/bottom\n   */\n  @Input() summaryPosition: string = 'top';\n\n  /**\n   * Body was scrolled typically in a `scrollbarV:true` scenario.\n   */\n  @Output() scroll: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A cell or row was focused via keyboard or mouse click.\n   */\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * A cell or row was selected.\n   */\n  @Output() select: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Column sort was invoked.\n   */\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The table was paged either triggered by the pager or the body scroll.\n   */\n  @Output() page: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Columns were re-ordered.\n   */\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Column was resized.\n   */\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * The context menu was invoked on the table.\n   * type indicates whether the header or the body was clicked.\n   * content contains either the column or the row that was clicked.\n   */\n  @Output() tableContextmenu = new EventEmitter<{ event: MouseEvent; type: ContextmenuType; content: any }>(false);\n\n  /**\n   * A row was expanded ot collapsed for tree\n   */\n  @Output() treeAction: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * CSS class applied if the header height if fixed height.\n   */\n  @HostBinding('class.fixed-header')\n  get isFixedHeader(): boolean {\n    const headerHeight: number | string = this.headerHeight;\n    return typeof headerHeight === 'string' ? <string>headerHeight !== 'auto' : true;\n  }\n\n  /**\n   * CSS class applied to the root element if\n   * the row heights are fixed heights.\n   */\n  @HostBinding('class.fixed-row')\n  get isFixedRow(): boolean {\n    return this.rowHeight !== 'auto';\n  }\n\n  /**\n   * CSS class applied to root element if\n   * vertical scrolling is enabled.\n   */\n  @HostBinding('class.scroll-vertical')\n  get isVertScroll(): boolean {\n    return this.scrollbarV;\n  }\n\n  /**\n   * CSS class applied to root element if\n   * virtualization is enabled.\n   */\n  @HostBinding('class.virtualized')\n  get isVirtualized(): boolean {\n    return this.virtualization;\n  }\n\n  /**\n   * CSS class applied to the root element\n   * if the horziontal scrolling is enabled.\n   */\n  @HostBinding('class.scroll-horz')\n  get isHorScroll(): boolean {\n    return this.scrollbarH;\n  }\n\n  /**\n   * CSS class applied to root element is selectable.\n   */\n  @HostBinding('class.selectable')\n  get isSelectable(): boolean {\n    return this.selectionType !== undefined;\n  }\n\n  /**\n   * CSS class applied to root is checkbox selection.\n   */\n  @HostBinding('class.checkbox-selection')\n  get isCheckboxSelection(): boolean {\n    return this.selectionType === SelectionType.checkbox;\n  }\n\n  /**\n   * CSS class applied to root if cell selection.\n   */\n  @HostBinding('class.cell-selection')\n  get isCellSelection(): boolean {\n    return this.selectionType === SelectionType.cell;\n  }\n\n  /**\n   * CSS class applied to root if single select.\n   */\n  @HostBinding('class.single-selection')\n  get isSingleSelection(): boolean {\n    return this.selectionType === SelectionType.single;\n  }\n\n  /**\n   * CSS class added to root element if mulit select\n   */\n  @HostBinding('class.multi-selection')\n  get isMultiSelection(): boolean {\n    return this.selectionType === SelectionType.multi;\n  }\n\n  /**\n   * CSS class added to root element if mulit click select\n   */\n  @HostBinding('class.multi-click-selection')\n  get isMultiClickSelection(): boolean {\n    return this.selectionType === SelectionType.multiClick;\n  }\n\n  /**\n   * Column templates gathered from `ContentChildren`\n   * if described in your markup.\n   */\n  @ContentChildren(DataTableColumnDirective)\n  set columnTemplates(val: QueryList<DataTableColumnDirective>) {\n    this._columnTemplates = val;\n    this.translateColumns(val);\n  }\n\n  /**\n   * Returns the column templates.\n   */\n  get columnTemplates(): QueryList<DataTableColumnDirective> {\n    return this._columnTemplates;\n  }\n\n  /**\n   * Row Detail templates gathered from the ContentChild\n   */\n  @ContentChild(DatatableRowDetailDirective)\n  rowDetail: DatatableRowDetailDirective;\n\n  /**\n   * Group Header templates gathered from the ContentChild\n   */\n  @ContentChild(DatatableGroupHeaderDirective)\n  groupHeader: DatatableGroupHeaderDirective;\n\n  /**\n   * Footer template gathered from the ContentChild\n   */\n  @ContentChild(DatatableFooterDirective)\n  footer: DatatableFooterDirective;\n\n  /**\n   * Reference to the body component for manually\n   * invoking functions on the body.\n   */\n  @ViewChild(DataTableBodyComponent)\n  bodyComponent: DataTableBodyComponent;\n\n  /**\n   * Reference to the header component for manually\n   * invoking functions on the header.\n   *\n   * @memberOf DatatableComponent\n   */\n  @ViewChild(DataTableHeaderComponent)\n  headerComponent: DataTableHeaderComponent;\n\n  /**\n   * Returns if all rows are selected.\n   */\n  get allRowsSelected(): boolean {\n    let allRowsSelected = this.rows && this.selected && this.selected.length === this.rows.length;\n\n    if (this.bodyComponent && this.selectAllRowsOnPage) {\n      const indexes = this.bodyComponent.indexes;\n      const rowsOnPage = indexes.last - indexes.first;\n      allRowsSelected = this.selected.length === rowsOnPage;\n    }\n\n    return this.selected && this.rows && this.rows.length !== 0 && allRowsSelected;\n  }\n\n  element: HTMLElement;\n  _innerWidth: number;\n  pageSize: number;\n  bodyHeight: number;\n  rowCount: number = 0;\n  rowDiffer: KeyValueDiffer<{}, {}>;\n\n  _offsetX = new BehaviorSubject(0);\n  _limit: number | undefined;\n  _count: number = 0;\n  _offset: number = 0;\n  _rows: any[];\n  _groupRowsBy: string;\n  _internalRows: any[];\n  _internalColumns: TableColumn[];\n  _columns: TableColumn[];\n  _columnTemplates: QueryList<DataTableColumnDirective>;\n  _subscriptions: Subscription[] = [];\n\n  constructor(\n    @SkipSelf() private scrollbarHelper: ScrollbarHelper,\n    @SkipSelf() private dimensionsHelper: DimensionsHelper,\n    private cd: ChangeDetectorRef,\n    element: ElementRef,\n    differs: KeyValueDiffers,\n    private columnChangesService: ColumnChangesService,\n    @Optional() @Inject('configuration') private configuration: INgxDatatableConfig\n  ) {\n    // get ref to elm for measuring\n    this.element = element.nativeElement;\n    this.rowDiffer = differs.find({}).create();\n\n    // apply global settings from Module.forRoot\n    if (this.configuration && this.configuration.messages) {\n      this.messages = { ...this.configuration.messages };\n    }\n  }\n\n  /**\n   * Lifecycle hook that is called after data-bound\n   * properties of a directive are initialized.\n   */\n  ngOnInit(): void {\n    // need to call this immediatly to size\n    // if the table is hidden the visibility\n    // listener will invoke this itself upon show\n    this.recalculate();\n  }\n\n  /**\n   * Lifecycle hook that is called after a component's\n   * view has been fully initialized.\n   */\n  ngAfterViewInit(): void {\n    if (!this.externalSorting) {\n      this.sortInternalRows();\n    }\n\n    // this has to be done to prevent the change detection\n    // tree from freaking out because we are readjusting\n    if (typeof requestAnimationFrame === 'undefined') {\n      return;\n    }\n\n    requestAnimationFrame(() => {\n      this.recalculate();\n\n      // emit page for virtual server-side kickoff\n      if (this.externalPaging && this.scrollbarV) {\n        this.page.emit({\n          count: this.count,\n          pageSize: this.pageSize,\n          limit: this.limit,\n          offset: 0\n        });\n      }\n    });\n  }\n\n  /**\n   * Lifecycle hook that is called after a component's\n   * content has been fully initialized.\n   */\n  ngAfterContentInit() {\n    this.columnTemplates.changes.subscribe(v => this.translateColumns(v));\n    this.listenForColumnInputChanges();\n  }\n\n  /**\n   * This will be used when displaying or selecting rows.\n   * when tracking/comparing them, we'll use the value of this fn,\n   *\n   * (`fn(x) === fn(y)` instead of `x === y`)\n   */\n  @Input() rowIdentity: (x: any) => any = (x: any) => {\n    if (this._groupRowsBy) {\n      // each group in groupedRows are stored as {key, value: [rows]},\n      // where key is the groupRowsBy index\n      return x.key;\n    } else {\n      return x;\n    }\n  };\n\n  /**\n   * Translates the templates to the column objects\n   */\n  translateColumns(val: any) {\n    if (val) {\n      const arr = val.toArray();\n      if (arr.length) {\n        this._internalColumns = translateTemplates(arr);\n        setColumnDefaults(this._internalColumns);\n        this.recalculateColumns();\n        this.sortInternalRows();\n        this.cd.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Creates a map with the data grouped by the user choice of grouping index\n   *\n   * @param originalArray the original array passed via parameter\n   * @param groupByIndex  the index of the column to group the data by\n   */\n  groupArrayBy(originalArray: any, groupBy: any) {\n    // create a map to hold groups with their corresponding results\n    const map = new Map();\n    let i: number = 0;\n\n    originalArray.forEach((item: any) => {\n      const key = item[groupBy];\n      if (!map.has(key)) {\n        map.set(key, [item]);\n      } else {\n        map.get(key).push(item);\n      }\n      i++;\n    });\n\n    const addGroup = (key: any, value: any) => {\n      return { key, value };\n    };\n\n    // convert map back to a simple array of objects\n    return Array.from(map, x => addGroup(x[0], x[1]));\n  }\n\n  /*\n   * Lifecycle hook that is called when Angular dirty checks a directive.\n   */\n  ngDoCheck(): void {\n    if (this.rowDiffer.diff(this.rows)) {\n      if (!this.externalSorting) {\n        this.sortInternalRows();\n      } else {\n        this._internalRows = [...this.rows];\n      }\n\n      // auto group by parent on new update\n      this._internalRows = groupRowsByParents(\n        this._internalRows,\n        optionalGetterForProp(this.treeFromRelation),\n        optionalGetterForProp(this.treeToRelation)\n      );\n\n      this.recalculatePages();\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Recalc's the sizes of the grid.\n   *\n   * Updated automatically on changes to:\n   *\n   *  - Columns\n   *  - Rows\n   *  - Paging related\n   *\n   * Also can be manually invoked or upon window resize.\n   */\n  recalculate(): void {\n    this.recalculateDims();\n    this.recalculateColumns();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Window resize handler to update sizes.\n   */\n  @HostListener('window:resize')\n  @throttleable(5)\n  onWindowResize(): void {\n    this.recalculate();\n  }\n\n  /**\n   * Recalulcates the column widths based on column width\n   * distribution mode and scrollbar offsets.\n   */\n  recalculateColumns(\n    columns: any[] = this._internalColumns,\n    forceIdx: number = -1,\n    allowBleed: boolean = this.scrollbarH\n  ): any[] | undefined {\n    if (!columns) return undefined;\n\n    let width = this._innerWidth;\n    if (this.scrollbarV) {\n      width = width - this.scrollbarHelper.width;\n    }\n\n    if (this.columnMode === ColumnMode.force) {\n      forceFillColumnWidths(columns, width, forceIdx, allowBleed);\n    } else if (this.columnMode === ColumnMode.flex) {\n      adjustColumnWidths(columns, width);\n    }\n\n    return columns;\n  }\n\n  /**\n   * Recalculates the dimensions of the table size.\n   * Internally calls the page size and row count calcs too.\n   *\n   */\n  recalculateDims(): void {\n    const dims = this.dimensionsHelper.getDimensions(this.element);\n    this._innerWidth = Math.floor(dims.width);\n\n    if (this.scrollbarV) {\n      let height = dims.height;\n      if (this.headerHeight) height = height - this.headerHeight;\n      if (this.footerHeight) height = height - this.footerHeight;\n      this.bodyHeight = height;\n    }\n\n    this.recalculatePages();\n  }\n\n  /**\n   * Recalculates the pages after a update.\n   */\n  recalculatePages(): void {\n    this.pageSize = this.calcPageSize();\n    this.rowCount = this.calcRowCount();\n  }\n\n  /**\n   * Body triggered a page event.\n   */\n  onBodyPage({ offset }: any): void {\n    // Avoid pagination caming from body events like scroll when the table\n    // has no virtualization and the external paging is enable.\n    // This means, let's the developer handle pagination by my him(her) self\n    if (this.externalPaging && !this.virtualization) {\n      return;\n    }\n\n    this.offset = offset;\n\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n  }\n\n  /**\n   * The body triggered a scroll event.\n   */\n  onBodyScroll(event: MouseEvent): void {\n    this._offsetX.next(event.offsetX);\n    this.scroll.emit(event);\n    this.cd.detectChanges();\n  }\n\n  /**\n   * The footer triggered a page event.\n   */\n  onFooterPage(event: any) {\n    this.offset = event.page - 1;\n    this.bodyComponent.updateOffsetY(this.offset);\n\n    this.page.emit({\n      count: this.count,\n      pageSize: this.pageSize,\n      limit: this.limit,\n      offset: this.offset\n    });\n\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n  }\n\n  /**\n   * Recalculates the sizes of the page\n   */\n  calcPageSize(val: any[] = this.rows): number {\n    // Keep the page size constant even if the row has been expanded.\n    // This is because an expanded row is still considered to be a child of\n    // the original row.  Hence calculation would use rowHeight only.\n    if (this.scrollbarV && this.virtualization) {\n      const size = Math.ceil(this.bodyHeight / (this.rowHeight as number));\n      return Math.max(size, 0);\n    }\n\n    // if limit is passed, we are paging\n    if (this.limit !== undefined) {\n      return this.limit;\n    }\n\n    // otherwise use row length\n    if (val) {\n      return val.length;\n    }\n\n    // other empty :(\n    return 0;\n  }\n\n  /**\n   * Calculates the row count.\n   */\n  calcRowCount(val: any[] = this.rows): number {\n    if (!this.externalPaging) {\n      if (!val) return 0;\n\n      if (this.groupedRows) {\n        return this.groupedRows.length;\n      } else if (this.treeFromRelation != null && this.treeToRelation != null) {\n        return this._internalRows.length;\n      } else {\n        return val.length;\n      }\n    }\n\n    return this.count;\n  }\n\n  /**\n   * The header triggered a contextmenu event.\n   */\n  onColumnContextmenu({ event, column }: any): void {\n    this.tableContextmenu.emit({ event, type: ContextmenuType.header, content: column });\n  }\n\n  /**\n   * The body triggered a contextmenu event.\n   */\n  onRowContextmenu({ event, row }: any): void {\n    this.tableContextmenu.emit({ event, type: ContextmenuType.body, content: row });\n  }\n\n  /**\n   * The header triggered a column resize event.\n   */\n  onColumnResize({ column, newValue }: any): void {\n    /* Safari/iOS 10.2 workaround */\n    if (column === undefined) {\n      return;\n    }\n\n    let idx: number;\n    const cols = this._internalColumns.map((c, i) => {\n      c = { ...c };\n\n      if (c.$$id === column.$$id) {\n        idx = i;\n        c.width = newValue;\n\n        // set this so we can force the column\n        // width distribution to be to this value\n        c.$$oldWidth = newValue;\n      }\n\n      return c;\n    });\n\n    this.recalculateColumns(cols, idx);\n    this._internalColumns = cols;\n\n    this.resize.emit({\n      column,\n      newValue\n    });\n  }\n\n  /**\n   * The header triggered a column re-order event.\n   */\n  onColumnReorder({ column, newValue, prevValue }: any): void {\n    const cols = this._internalColumns.map(c => {\n      return { ...c };\n    });\n\n    if (this.swapColumns) {\n      const prevCol = cols[newValue];\n      cols[newValue] = column;\n      cols[prevValue] = prevCol;\n    } else {\n      if (newValue > prevValue) {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i < newValue; i++) {\n          cols[i] = cols[i + 1];\n        }\n        cols[newValue] = movedCol;\n      } else {\n        const movedCol = cols[prevValue];\n        for (let i = prevValue; i > newValue; i--) {\n          cols[i] = cols[i - 1];\n        }\n        cols[newValue] = movedCol;\n      }\n    }\n\n    this._internalColumns = cols;\n\n    this.reorder.emit({\n      column,\n      newValue,\n      prevValue\n    });\n  }\n\n  /**\n   * The header triggered a column sort event.\n   */\n  onColumnSort(event: any): void {\n    // clean selected rows\n    if (this.selectAllRowsOnPage) {\n      this.selected = [];\n      this.select.emit({\n        selected: this.selected\n      });\n    }\n\n    this.sorts = event.sorts;\n\n    // this could be optimized better since it will resort\n    // the rows again on the 'push' detection...\n    if (this.externalSorting === false) {\n      // don't use normal setter so we don't resort\n      this.sortInternalRows();\n    }\n\n    // auto group by parent on new update\n    this._internalRows = groupRowsByParents(\n      this._internalRows,\n      optionalGetterForProp(this.treeFromRelation),\n      optionalGetterForProp(this.treeToRelation)\n    );\n\n    // Always go to first page when sorting to see the newly sorted data\n    this.offset = 0;\n    this.bodyComponent.updateOffsetY(this.offset);\n    this.sort.emit(event);\n  }\n\n  /**\n   * Toggle all row selection\n   */\n  onHeaderSelect(event: any): void {\n    if (this.bodyComponent && this.selectAllRowsOnPage) {\n      // before we splice, chk if we currently have all selected\n      const first = this.bodyComponent.indexes.first;\n      const last = this.bodyComponent.indexes.last;\n      const allSelected = this.selected.length === last - first;\n\n      // remove all existing either way\n      this.selected = [];\n\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this._internalRows.slice(first, last));\n      }\n    } else {\n      // before we splice, chk if we currently have all selected\n      const allSelected = this.selected.length === this.rows.length;\n      // remove all existing either way\n      this.selected = [];\n      // do the opposite here\n      if (!allSelected) {\n        this.selected.push(...this.rows);\n      }\n    }\n\n    this.select.emit({\n      selected: this.selected\n    });\n  }\n\n  /**\n   * A row was selected from body\n   */\n  onBodySelect(event: any): void {\n    this.select.emit(event);\n  }\n\n  /**\n   * A row was expanded or collapsed for tree\n   */\n  onTreeAction(event: any) {\n    const row = event.row;\n    // TODO: For duplicated items this will not work\n    const rowIndex = this._rows.findIndex(r => r[this.treeToRelation] === event.row[this.treeToRelation]);\n    this.treeAction.emit({ row, rowIndex });\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach(subscription => subscription.unsubscribe());\n  }\n\n  /**\n   * listen for changes to input bindings of all DataTableColumnDirective and\n   * trigger the columnTemplates.changes observable to emit\n   */\n  private listenForColumnInputChanges(): void {\n    this._subscriptions.push(\n      this.columnChangesService.columnInputChanges$.subscribe(() => {\n        if (this.columnTemplates) {\n          this.columnTemplates.notifyOnChanges();\n        }\n      })\n    );\n  }\n\n  private sortInternalRows(): void {\n    this._internalRows = sortRows(this._internalRows, this._internalColumns, this.sorts);\n  }\n}\n","<div role=\"table\" visibilityObserver (visible)=\"recalculate()\">\n  <datatable-header\n    role=\"rowgroup\"\n    *ngIf=\"headerHeight\"\n    [sorts]=\"sorts\"\n    [sortType]=\"sortType\"\n    [scrollbarH]=\"scrollbarH\"\n    [innerWidth]=\"_innerWidth\"\n    [offsetX]=\"_offsetX | async\"\n    [dealsWithGroup]=\"groupedRows !== undefined\"\n    [columns]=\"_internalColumns\"\n    [headerHeight]=\"headerHeight\"\n    [reorderable]=\"reorderable\"\n    [targetMarkerTemplate]=\"targetMarkerTemplate\"\n    [sortAscendingIcon]=\"cssClasses.sortAscending\"\n    [sortDescendingIcon]=\"cssClasses.sortDescending\"\n    [sortUnsetIcon]=\"cssClasses.sortUnset\"\n    [allRowsSelected]=\"allRowsSelected\"\n    [selectionType]=\"selectionType\"\n    (sort)=\"onColumnSort($event)\"\n    (resize)=\"onColumnResize($event)\"\n    (reorder)=\"onColumnReorder($event)\"\n    (select)=\"onHeaderSelect($event)\"\n    (columnContextmenu)=\"onColumnContextmenu($event)\"\n  >\n  </datatable-header>\n  <datatable-body\n    role=\"rowgroup\"\n    [groupRowsBy]=\"groupRowsBy\"\n    [groupedRows]=\"groupedRows\"\n    [rows]=\"_internalRows\"\n    [groupExpansionDefault]=\"groupExpansionDefault\"\n    [scrollbarV]=\"scrollbarV\"\n    [scrollbarH]=\"scrollbarH\"\n    [virtualization]=\"virtualization\"\n    [loadingIndicator]=\"loadingIndicator\"\n    [externalPaging]=\"externalPaging\"\n    [rowHeight]=\"rowHeight\"\n    [rowCount]=\"rowCount\"\n    [offset]=\"offset\"\n    [trackByProp]=\"trackByProp\"\n    [columns]=\"_internalColumns\"\n    [pageSize]=\"pageSize\"\n    [offsetX]=\"_offsetX | async\"\n    [rowDetail]=\"rowDetail\"\n    [groupHeader]=\"groupHeader\"\n    [selected]=\"selected\"\n    [innerWidth]=\"_innerWidth\"\n    [bodyHeight]=\"bodyHeight\"\n    [selectionType]=\"selectionType\"\n    [emptyMessage]=\"messages.emptyMessage\"\n    [rowIdentity]=\"rowIdentity\"\n    [rowClass]=\"rowClass\"\n    [selectCheck]=\"selectCheck\"\n    [displayCheck]=\"displayCheck\"\n    [summaryRow]=\"summaryRow\"\n    [summaryHeight]=\"summaryHeight\"\n    [summaryPosition]=\"summaryPosition\"\n    (page)=\"onBodyPage($event)\"\n    (activate)=\"activate.emit($event)\"\n    (rowContextmenu)=\"onRowContextmenu($event)\"\n    (select)=\"onBodySelect($event)\"\n    (scroll)=\"onBodyScroll($event)\"\n    (treeAction)=\"onTreeAction($event)\"\n  >\n  </datatable-body>\n  <datatable-footer\n    *ngIf=\"footerHeight\"\n    [rowCount]=\"rowCount\"\n    [pageSize]=\"pageSize\"\n    [offset]=\"offset\"\n    [footerHeight]=\"footerHeight\"\n    [footerTemplate]=\"footer\"\n    [totalMessage]=\"messages.totalMessage\"\n    [pagerLeftArrowIcon]=\"cssClasses.pagerLeftArrow\"\n    [pagerRightArrowIcon]=\"cssClasses.pagerRightArrow\"\n    [pagerPreviousIcon]=\"cssClasses.pagerPrevious\"\n    [selectedCount]=\"selected.length\"\n    [selectedMessage]=\"!!selectionType && messages.selectedMessage\"\n    [pagerNextIcon]=\"cssClasses.pagerNext\"\n    (page)=\"onFooterPage($event)\"\n  >\n  </datatable-footer>\n</div>\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[ngx-datatable-footer-template]' })\nexport class DataTableFooterTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Component, Output, EventEmitter, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { DatatableFooterDirective } from './footer.directive';\n@Component({\n  selector: 'datatable-footer',\n  template: `\n    <div\n      class=\"datatable-footer-inner\"\n      [ngClass]=\"{ 'selected-count': selectedMessage }\"\n      [style.height.px]=\"footerHeight\"\n    >\n      <ng-template\n        *ngIf=\"footerTemplate\"\n        [ngTemplateOutlet]=\"footerTemplate.template\"\n        [ngTemplateOutletContext]=\"{\n          rowCount: rowCount,\n          pageSize: pageSize,\n          selectedCount: selectedCount,\n          curPage: curPage,\n          offset: offset\n        }\"\n      >\n      </ng-template>\n      <div class=\"page-count\" *ngIf=\"!footerTemplate\">\n        <span *ngIf=\"selectedMessage\"> {{ selectedCount?.toLocaleString() }} {{ selectedMessage }} / </span>\n        {{ rowCount?.toLocaleString() }} {{ totalMessage }}\n      </div>\n      <datatable-pager\n        *ngIf=\"!footerTemplate\"\n        [pagerLeftArrowIcon]=\"pagerLeftArrowIcon\"\n        [pagerRightArrowIcon]=\"pagerRightArrowIcon\"\n        [pagerPreviousIcon]=\"pagerPreviousIcon\"\n        [pagerNextIcon]=\"pagerNextIcon\"\n        [page]=\"curPage\"\n        [size]=\"pageSize\"\n        [count]=\"rowCount\"\n        [hidden]=\"!isVisible\"\n        (change)=\"page.emit($event)\"\n      >\n      </datatable-pager>\n    </div>\n  `,\n  host: {\n    class: 'datatable-footer'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableFooterComponent {\n  @Input() footerHeight: number;\n  @Input() rowCount: number;\n  @Input() pageSize: number;\n  @Input() offset: number;\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n  @Input() totalMessage: string;\n  @Input() footerTemplate: DatatableFooterDirective;\n\n  @Input() selectedCount: number = 0;\n  @Input() selectedMessage: string | boolean;\n\n  @Output() page: EventEmitter<any> = new EventEmitter();\n\n  get isVisible(): boolean {\n    return this.rowCount / this.pageSize > 1;\n  }\n\n  get curPage(): number {\n    return this.offset + 1;\n  }\n}\n","import { Input, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DataTableFooterTemplateDirective } from './footer-template.directive';\n\n@Directive({ selector: 'ngx-datatable-footer' })\nexport class DatatableFooterDirective {\n  @Input() footerHeight: number;\n  @Input() totalMessage: string;\n  @Input() selectedMessage: string | boolean;\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DataTableFooterTemplateDirective, { read: TemplateRef })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'datatable-pager',\n  template: `\n    <ul class=\"pager\">\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to first page\" href=\"javascript:void(0)\" (click)=\"selectPage(1)\">\n          <i class=\"{{ pagerPreviousIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canPrevious()\">\n        <a role=\"button\" aria-label=\"go to previous page\" href=\"javascript:void(0)\" (click)=\"prevPage()\">\n          <i class=\"{{ pagerLeftArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li\n        role=\"button\"\n        [attr.aria-label]=\"'page ' + pg.number\"\n        class=\"pages\"\n        *ngFor=\"let pg of pages\"\n        [class.active]=\"pg.number === page\"\n      >\n        <a href=\"javascript:void(0)\" (click)=\"selectPage(pg.number)\">\n          {{ pg.text }}\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to next page\" href=\"javascript:void(0)\" (click)=\"nextPage()\">\n          <i class=\"{{ pagerRightArrowIcon }}\"></i>\n        </a>\n      </li>\n      <li [class.disabled]=\"!canNext()\">\n        <a role=\"button\" aria-label=\"go to last page\" href=\"javascript:void(0)\" (click)=\"selectPage(totalPages)\">\n          <i class=\"{{ pagerNextIcon }}\"></i>\n        </a>\n      </li>\n    </ul>\n  `,\n  host: {\n    class: 'datatable-pager'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTablePagerComponent {\n  @Input() pagerLeftArrowIcon: string;\n  @Input() pagerRightArrowIcon: string;\n  @Input() pagerPreviousIcon: string;\n  @Input() pagerNextIcon: string;\n\n  @Input()\n  set size(val: number) {\n    this._size = val;\n    this.pages = this.calcPages();\n  }\n\n  get size(): number {\n    return this._size;\n  }\n\n  @Input()\n  set count(val: number) {\n    this._count = val;\n    this.pages = this.calcPages();\n  }\n\n  get count(): number {\n    return this._count;\n  }\n\n  @Input()\n  set page(val: number) {\n    this._page = val;\n    this.pages = this.calcPages();\n  }\n\n  get page(): number {\n    return this._page;\n  }\n\n  get totalPages(): number {\n    const count = this.size < 1 ? 1 : Math.ceil(this.count / this.size);\n    return Math.max(count || 0, 1);\n  }\n\n  @Output() change: EventEmitter<any> = new EventEmitter();\n\n  _count: number = 0;\n  _page: number = 1;\n  _size: number = 0;\n  pages: any;\n\n  canPrevious(): boolean {\n    return this.page > 1;\n  }\n\n  canNext(): boolean {\n    return this.page < this.totalPages;\n  }\n\n  prevPage(): void {\n    this.selectPage(this.page - 1);\n  }\n\n  nextPage(): void {\n    this.selectPage(this.page + 1);\n  }\n\n  selectPage(page: number): void {\n    if (page > 0 && page <= this.totalPages && page !== this.page) {\n      this.page = page;\n\n      this.change.emit({\n        page\n      });\n    }\n  }\n\n  calcPages(page?: number): any[] {\n    const pages = [];\n    let startPage = 1;\n    let endPage = this.totalPages;\n    const maxSize = 5;\n    const isMaxSized = maxSize < this.totalPages;\n\n    page = page || this.page;\n\n    if (isMaxSized) {\n      startPage = page - Math.floor(maxSize / 2);\n      endPage = page + Math.floor(maxSize / 2);\n\n      if (startPage < 1) {\n        startPage = 1;\n        endPage = Math.min(startPage + maxSize - 1, this.totalPages);\n      } else if (endPage > this.totalPages) {\n        startPage = Math.max(this.totalPages - maxSize + 1, 1);\n        endPage = this.totalPages;\n      }\n    }\n\n    for (let num = startPage; num <= endPage; num++) {\n      pages.push({\n        number: num,\n        text: <string>(<any>num)\n      });\n    }\n\n    return pages;\n  }\n}\n","import {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  HostBinding,\n  HostListener,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { TableColumn } from '../../types/table-column.type';\nimport { nextSortDir } from '../../utils/sort';\nimport { SortDirection } from '../../types/sort-direction.type';\n\n@Component({\n  selector: 'datatable-header-cell',\n  template: `\n    <div class=\"datatable-header-cell-template-wrap\">\n      <ng-template\n        *ngIf=\"isTarget\"\n        [ngTemplateOutlet]=\"targetMarkerTemplate\"\n        [ngTemplateOutletContext]=\"targetMarkerContext\"\n      >\n      </ng-template>\n      <label *ngIf=\"isCheckboxable\" class=\"datatable-checkbox\">\n        <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"select.emit(!allRowsSelected)\" />\n      </label>\n      <span *ngIf=\"!column.headerTemplate\" class=\"datatable-header-cell-wrapper\">\n        <span class=\"datatable-header-cell-label draggable\" (click)=\"onSort()\" [innerHTML]=\"name\"> </span>\n      </span>\n      <ng-template\n        *ngIf=\"column.headerTemplate\"\n        [ngTemplateOutlet]=\"column.headerTemplate\"\n        [ngTemplateOutletContext]=\"cellContext\"\n      >\n      </ng-template>\n      <span (click)=\"onSort()\" [class]=\"sortClass\"> </span>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header-cell'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderCellComponent {\n  @Input() sortType: SortType;\n  @Input() sortAscendingIcon: string;\n  @Input() sortDescendingIcon: string;\n  @Input() sortUnsetIcon: string;\n\n  @Input() isTarget: boolean;\n  @Input() targetMarkerTemplate: any;\n  @Input() targetMarkerContext: any;\n\n  _allRowsSelected: boolean;\n\n  @Input() set allRowsSelected(value) {\n    this._allRowsSelected = value;\n    this.cellContext.allRowsSelected = value;\n  }\n  get allRowsSelected() {\n    return this._allRowsSelected;\n  }\n\n  @Input() selectionType: SelectionType;\n\n  @Input() set column(column: TableColumn) {\n    this._column = column;\n    this.cellContext.column = column;\n    this.cd.markForCheck();\n  }\n\n  get column(): TableColumn {\n    return this._column;\n  }\n\n  @HostBinding('style.height.px')\n  @Input()\n  headerHeight: number;\n\n  @Input() set sorts(val: any[]) {\n    this._sorts = val;\n    this.sortDir = this.calcSortDir(val);\n    this.cellContext.sortDir = this.sortDir;\n    this.sortClass = this.calcSortClass(this.sortDir);\n    this.cd.markForCheck();\n  }\n\n  get sorts(): any[] {\n    return this._sorts;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  @HostBinding('class')\n  get columnCssClasses(): any {\n    let cls = 'datatable-header-cell';\n\n    if (this.column.sortable) cls += ' sortable';\n    if (this.column.resizeable) cls += ' resizeable';\n    if (this.column.headerClass) {\n      if (typeof this.column.headerClass === 'string') {\n        cls += ' ' + this.column.headerClass;\n      } else if (typeof this.column.headerClass === 'function') {\n        const res = this.column.headerClass({\n          column: this.column\n        });\n\n        if (typeof res === 'string') {\n          cls += res;\n        } else if (typeof res === 'object') {\n          const keys = Object.keys(res);\n          for (const k of keys) {\n            if (res[k] === true) cls += ` ${k}`;\n          }\n        }\n      }\n    }\n\n    const sortDir = this.sortDir;\n    if (sortDir) {\n      cls += ` sort-active sort-${sortDir}`;\n    }\n\n    return cls;\n  }\n\n  @HostBinding('attr.title')\n  get name(): string {\n    // guaranteed to have a value by setColumnDefaults() in column-helper.ts\n    return this.column.headerTemplate === undefined ? this.column.name : undefined;\n  }\n\n  @HostBinding('style.minWidth.px')\n  get minWidth(): number {\n    return this.column.minWidth;\n  }\n\n  @HostBinding('style.maxWidth.px')\n  get maxWidth(): number {\n    return this.column.maxWidth;\n  }\n\n  @HostBinding('style.width.px')\n  get width(): number {\n    return this.column.width;\n  }\n\n  get isCheckboxable(): boolean {\n    return this.column.checkboxable && this.column.headerCheckboxable && this.selectionType === SelectionType.checkbox;\n  }\n\n  sortFn = this.onSort.bind(this);\n  sortClass: string;\n  sortDir: SortDirection;\n  selectFn = this.select.emit.bind(this.select);\n\n  cellContext: any;\n\n  private _column: TableColumn;\n  private _sorts: any[];\n\n  constructor(private cd: ChangeDetectorRef) {\n    this.cellContext = {\n      column: this.column,\n      sortDir: this.sortDir,\n      sortFn: this.sortFn,\n      allRowsSelected: this.allRowsSelected,\n      selectFn: this.selectFn\n    };\n  }\n\n  @HostListener('contextmenu', ['$event'])\n  onContextmenu($event: MouseEvent): void {\n    this.columnContextmenu.emit({ event: $event, column: this.column });\n  }\n\n  ngOnInit() {\n    this.sortClass = this.calcSortClass(this.sortDir);\n  }\n\n  calcSortDir(sorts: any[]): any {\n    if (sorts && this.column) {\n      const sort = sorts.find((s: any) => {\n        return s.prop === this.column.prop;\n      });\n\n      if (sort) return sort.dir;\n    }\n  }\n\n  onSort(): void {\n    if (!this.column.sortable) return;\n\n    const newValue = nextSortDir(this.sortType, this.sortDir);\n    this.sort.emit({\n      column: this.column,\n      prevValue: this.sortDir,\n      newValue\n    });\n  }\n\n  calcSortClass(sortDir: SortDirection): string {\n    if (!this.cellContext.column.sortable) return;\n    if (sortDir === SortDirection.asc) {\n      return `sort-btn sort-asc ${this.sortAscendingIcon}`;\n    } else if (sortDir === SortDirection.desc) {\n      return `sort-btn sort-desc ${this.sortDescendingIcon}`;\n    } else {\n      return `sort-btn ${this.sortUnsetIcon}`;\n    }\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter,\n  Input,\n  HostBinding,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  OnDestroy\n} from '@angular/core';\nimport { columnsByPin, columnGroupWidths, columnsByPinArr } from '../../utils/column';\nimport { SortType } from '../../types/sort.type';\nimport { SelectionType } from '../../types/selection.type';\nimport { DataTableColumnDirective } from '../columns/column.directive';\nimport { translateXY } from '../../utils/translate';\n\n@Component({\n  selector: 'datatable-header',\n  template: `\n    <div\n      role=\"row\"\n      orderable\n      (reorder)=\"onColumnReordered($event)\"\n      (targetChanged)=\"onTargetChanged($event)\"\n      [style.width.px]=\"_columnGroupWidths.total\"\n      class=\"datatable-header-inner\"\n    >\n      <div\n        *ngFor=\"let colGroup of _columnsByPin; trackBy: trackByGroups\"\n        [class]=\"'datatable-row-' + colGroup.type\"\n        [ngStyle]=\"_styleByGroup[colGroup.type]\"\n      >\n        <datatable-header-cell\n          role=\"columnheader\"\n          *ngFor=\"let column of colGroup.columns; trackBy: columnTrackingFn\"\n          resizeable\n          [resizeEnabled]=\"column.resizeable\"\n          (resize)=\"onColumnResized($event, column)\"\n          long-press\n          [pressModel]=\"column\"\n          [pressEnabled]=\"reorderable && column.draggable\"\n          (longPressStart)=\"onLongPressStart($event)\"\n          (longPressEnd)=\"onLongPressEnd($event)\"\n          draggable\n          [dragX]=\"reorderable && column.draggable && column.dragging\"\n          [dragY]=\"false\"\n          [dragModel]=\"column\"\n          [dragEventTarget]=\"dragEventTarget\"\n          [headerHeight]=\"headerHeight\"\n          [isTarget]=\"column.isTarget\"\n          [targetMarkerTemplate]=\"targetMarkerTemplate\"\n          [targetMarkerContext]=\"column.targetMarkerContext\"\n          [column]=\"column\"\n          [sortType]=\"sortType\"\n          [sorts]=\"sorts\"\n          [selectionType]=\"selectionType\"\n          [sortAscendingIcon]=\"sortAscendingIcon\"\n          [sortDescendingIcon]=\"sortDescendingIcon\"\n          [sortUnsetIcon]=\"sortUnsetIcon\"\n          [allRowsSelected]=\"allRowsSelected\"\n          (sort)=\"onSort($event)\"\n          (select)=\"select.emit($event)\"\n          (columnContextmenu)=\"columnContextmenu.emit($event)\"\n        >\n        </datatable-header-cell>\n      </div>\n    </div>\n  `,\n  host: {\n    class: 'datatable-header'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DataTableHeaderComponent implements OnDestroy {\n  @Input() sortAscendingIcon: any;\n  @Input() sortDescendingIcon: any;\n  @Input() sortUnsetIcon: any;\n  @Input() scrollbarH: boolean;\n  @Input() dealsWithGroup: boolean;\n  @Input() targetMarkerTemplate: any;\n\n  targetMarkerContext: any;\n\n  @Input() set innerWidth(val: number) {\n    this._innerWidth = val;\n    setTimeout(() => {\n      if (this._columns) {\n        const colByPin = columnsByPin(this._columns);\n        this._columnGroupWidths = columnGroupWidths(colByPin, this._columns);\n        this.setStylesByGroup();\n      }\n    });\n  }\n\n  get innerWidth(): number {\n    return this._innerWidth;\n  }\n\n  @Input() sorts: any[];\n  @Input() sortType: SortType;\n  @Input() allRowsSelected: boolean;\n  @Input() selectionType: SelectionType;\n  @Input() reorderable: boolean;\n\n  dragEventTarget: any;\n\n  @HostBinding('style.height')\n  @Input()\n  set headerHeight(val: any) {\n    if (val !== 'auto') {\n      this._headerHeight = `${val}px`;\n    } else {\n      this._headerHeight = val;\n    }\n  }\n\n  get headerHeight(): any {\n    return this._headerHeight;\n  }\n\n  @Input() set columns(val: any[]) {\n    this._columns = val;\n\n    const colsByPin = columnsByPin(val);\n    this._columnsByPin = columnsByPinArr(val);\n    setTimeout(() => {\n      this._columnGroupWidths = columnGroupWidths(colsByPin, val);\n      this.setStylesByGroup();\n    });\n  }\n\n  get columns(): any[] {\n    return this._columns;\n  }\n\n  @Input()\n  set offsetX(val: number) {\n    this._offsetX = val;\n    this.setStylesByGroup();\n  }\n  get offsetX() {\n    return this._offsetX;\n  }\n\n  @Output() sort: EventEmitter<any> = new EventEmitter();\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() columnContextmenu = new EventEmitter<{ event: MouseEvent; column: any }>(false);\n\n  _columnsByPin: any;\n  _columnGroupWidths: any = {\n    total: 100\n  };\n  _innerWidth: number;\n  _offsetX: number;\n  _columns: any[];\n  _headerHeight: string;\n  _styleByGroup: { [prop: string]: {} } = {\n    left: {},\n    center: {},\n    right: {}\n  };\n\n  private destroyed = false;\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngOnDestroy(): void {\n    this.destroyed = true;\n  }\n\n  onLongPressStart({ event, model }: { event: any; model: any }) {\n    model.dragging = true;\n    this.dragEventTarget = event;\n  }\n\n  onLongPressEnd({ event, model }: { event: any; model: any }) {\n    this.dragEventTarget = event;\n\n    // delay resetting so sort can be\n    // prevented if we were dragging\n    setTimeout(() => {\n      // datatable component creates copies from columns on reorder\n      // set dragging to false on new objects\n      const column = this._columns.find(c => c.$$id === model.$$id);\n      if (column) {\n        column.dragging = false;\n      }\n    }, 5);\n  }\n\n  @HostBinding('style.width')\n  get headerWidth(): string {\n    if (this.scrollbarH) {\n      return this.innerWidth + 'px';\n    }\n\n    return '100%';\n  }\n\n  trackByGroups(index: number, colGroup: any): any {\n    return colGroup.type;\n  }\n\n  columnTrackingFn(index: number, column: any): any {\n    return column.$$id;\n  }\n\n  onColumnResized(width: number, column: DataTableColumnDirective): void {\n    if (width <= column.minWidth) {\n      width = column.minWidth;\n    } else if (width >= column.maxWidth) {\n      width = column.maxWidth;\n    }\n\n    this.resize.emit({\n      column,\n      prevValue: column.width,\n      newValue: width\n    });\n  }\n\n  onColumnReordered({ prevIndex, newIndex, model }: any): void {\n    const column = this.getColumn(newIndex);\n    column.isTarget = false;\n    column.targetMarkerContext = undefined;\n    this.reorder.emit({\n      column: model,\n      prevValue: prevIndex,\n      newValue: newIndex\n    });\n  }\n\n  onTargetChanged({ prevIndex, newIndex, initialIndex }: any): void {\n    if (prevIndex || prevIndex === 0) {\n      const oldColumn = this.getColumn(prevIndex);\n      oldColumn.isTarget = false;\n      oldColumn.targetMarkerContext = undefined;\n    }\n    if (newIndex || newIndex === 0) {\n      const newColumn = this.getColumn(newIndex);\n      newColumn.isTarget = true;\n\n      if (initialIndex !== newIndex) {\n        newColumn.targetMarkerContext = {\n          class: 'targetMarker '.concat(initialIndex > newIndex ? 'dragFromRight' : 'dragFromLeft')\n        };\n      }\n    }\n  }\n\n  getColumn(index: number): any {\n    const leftColumnCount = this._columnsByPin[0].columns.length;\n    if (index < leftColumnCount) {\n      return this._columnsByPin[0].columns[index];\n    }\n\n    const centerColumnCount = this._columnsByPin[1].columns.length;\n    if (index < leftColumnCount + centerColumnCount) {\n      return this._columnsByPin[1].columns[index - leftColumnCount];\n    }\n\n    return this._columnsByPin[2].columns[index - leftColumnCount - centerColumnCount];\n  }\n\n  onSort({ column, prevValue, newValue }: any): void {\n    // if we are dragging don't sort!\n    if (column.dragging) {\n      return;\n    }\n\n    const sorts = this.calcNewSorts(column, prevValue, newValue);\n    this.sort.emit({\n      sorts,\n      column,\n      prevValue,\n      newValue\n    });\n  }\n\n  calcNewSorts(column: any, prevValue: number, newValue: number): any[] {\n    let idx = 0;\n\n    if (!this.sorts) {\n      this.sorts = [];\n    }\n\n    const sorts = this.sorts.map((s, i) => {\n      s = { ...s };\n      if (s.prop === column.prop) {\n        idx = i;\n      }\n      return s;\n    });\n\n    if (newValue === undefined) {\n      sorts.splice(idx, 1);\n    } else if (prevValue) {\n      sorts[idx].dir = newValue;\n    } else {\n      if (this.sortType === SortType.single) {\n        sorts.splice(0, this.sorts.length);\n      }\n\n      sorts.push({ dir: newValue, prop: column.prop });\n    }\n\n    return sorts;\n  }\n\n  setStylesByGroup() {\n    this._styleByGroup.left = this.calcStylesByGroup('left');\n    this._styleByGroup.center = this.calcStylesByGroup('center');\n    this._styleByGroup.right = this.calcStylesByGroup('right');\n    if (!this.destroyed) {\n      this.cd.detectChanges();\n    }\n  }\n\n  calcStylesByGroup(group: string): any {\n    const widths = this._columnGroupWidths;\n    const offsetX = this.offsetX;\n\n    const styles = {\n      width: `${widths[group]}px`\n    };\n\n    if (group === 'center') {\n      translateXY(styles, offsetX * -1, 0);\n    } else if (group === 'right') {\n      const totalDiff = widths.total - this.innerWidth;\n      const offset = totalDiff * -1;\n      translateXY(styles, offset, 0);\n    }\n\n    return styles;\n  }\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[ngx-datatable-row-detail-template]'\n})\nexport class DatatableRowDetailTemplateDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { Input, Output, EventEmitter, Directive, TemplateRef, ContentChild } from '@angular/core';\nimport { DatatableRowDetailTemplateDirective } from './row-detail-template.directive';\n\n@Directive({ selector: 'ngx-datatable-row-detail' })\nexport class DatatableRowDetailDirective {\n  /**\n   * The detail row height is required especially\n   * when virtual scroll is enabled.\n   */\n  @Input() rowHeight: number | ((row?: any, index?: number) => number) = 0;\n\n  @Input('template')\n  _templateInput: TemplateRef<any>;\n\n  @ContentChild(DatatableRowDetailTemplateDirective, { read: TemplateRef, static: true })\n  _templateQuery: TemplateRef<any>;\n\n  get template(): TemplateRef<any> {\n    return this._templateInput || this._templateQuery;\n  }\n\n  /**\n   * Row detail row visbility was toggled.\n   */\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Toggle the expansion of the row\n   */\n  toggleExpandRow(row: any): void {\n    this.toggle.emit({\n      type: 'row',\n      value: row\n    });\n  }\n\n  /**\n   * API method to expand all the rows.\n   */\n  expandAllRows(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: true\n    });\n  }\n\n  /**\n   * API method to collapse all the rows.\n   */\n  collapseAllRows(): void {\n    this.toggle.emit({\n      type: 'all',\n      value: false\n    });\n  }\n}\n","import { Directive, ElementRef, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * Draggable Directive for Angular2\n *\n * Inspiration:\n *   https://github.com/AngularClass/angular2-examples/blob/master/rx-draggable/directives/draggable.ts\n *   http://stackoverflow.com/questions/35662530/how-to-implement-drag-and-drop-in-angular2\n *\n */\n@Directive({ selector: '[draggable]' })\nexport class DraggableDirective implements OnDestroy, OnChanges {\n  @Input() dragEventTarget: any;\n  @Input() dragModel: any;\n  @Input() dragX: boolean = true;\n  @Input() dragY: boolean = true;\n\n  @Output() dragStart: EventEmitter<any> = new EventEmitter();\n  @Output() dragging: EventEmitter<any> = new EventEmitter();\n  @Output() dragEnd: EventEmitter<any> = new EventEmitter();\n\n  element: HTMLElement;\n  isDragging: boolean = false;\n  subscription: Subscription;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['dragEventTarget'] && changes['dragEventTarget'].currentValue && this.dragModel.dragging) {\n      this.onMousedown(changes['dragEventTarget'].currentValue);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n  }\n\n  onMouseup(event: MouseEvent): void {\n    if (!this.isDragging) return;\n\n    this.isDragging = false;\n    this.element.classList.remove('dragging');\n\n    if (this.subscription) {\n      this._destroySubscription();\n      this.dragEnd.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n\n  onMousedown(event: MouseEvent): void {\n    // we only want to drag the inner header text\n    const isDragElm = (<HTMLElement>event.target).classList.contains('draggable');\n\n    if (isDragElm && (this.dragX || this.dragY)) {\n      event.preventDefault();\n      this.isDragging = true;\n\n      const mouseDownPos = { x: event.clientX, y: event.clientY };\n\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup(ev));\n\n      const mouseMoveSub = fromEvent(document, 'mousemove')\n        .pipe(takeUntil(mouseup))\n        .subscribe((ev: MouseEvent) => this.move(ev, mouseDownPos));\n\n      this.subscription.add(mouseMoveSub);\n\n      this.dragStart.emit({\n        event,\n        element: this.element,\n        model: this.dragModel\n      });\n    }\n  }\n\n  move(event: MouseEvent, mouseDownPos: { x: number; y: number }): void {\n    if (!this.isDragging) return;\n\n    const x = event.clientX - mouseDownPos.x;\n    const y = event.clientY - mouseDownPos.y;\n\n    if (this.dragX) this.element.style.left = `${x}px`;\n    if (this.dragY) this.element.style.top = `${y}px`;\n\n    this.element.classList.add('dragging');\n\n    this.dragging.emit({\n      event,\n      element: this.element,\n      model: this.dragModel\n    });\n  }\n\n  private _destroySubscription(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import { Directive, Input, Output, EventEmitter, HostBinding, HostListener, OnDestroy } from '@angular/core';\nimport { Observable, Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MouseEvent } from '../events';\n\n@Directive({ selector: '[long-press]' })\nexport class LongPressDirective implements OnDestroy {\n  @Input() pressEnabled: boolean = true;\n  @Input() pressModel: any;\n  @Input() duration: number = 500;\n\n  @Output() longPressStart: EventEmitter<any> = new EventEmitter();\n  @Output() longPressing: EventEmitter<any> = new EventEmitter();\n  @Output() longPressEnd: EventEmitter<any> = new EventEmitter();\n\n  pressing: boolean;\n  isLongPressing: boolean;\n  timeout: any;\n  mouseX: number = 0;\n  mouseY: number = 0;\n\n  subscription: Subscription;\n\n  @HostBinding('class.press')\n  get press(): boolean {\n    return this.pressing;\n  }\n\n  @HostBinding('class.longpress')\n  get isLongPress(): boolean {\n    return this.isLongPressing;\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDown(event: MouseEvent): void {\n    // don't do right/middle clicks\n    if (event.which !== 1 || !this.pressEnabled) return;\n\n    // don't start drag if its on resize handle\n    const target = <HTMLElement>event.target;\n    if (target.classList.contains('resize-handle')) return;\n\n    this.mouseX = event.clientX;\n    this.mouseY = event.clientY;\n\n    this.pressing = true;\n    this.isLongPressing = false;\n\n    const mouseup = fromEvent(document, 'mouseup');\n    this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\n\n    this.timeout = setTimeout(() => {\n      this.isLongPressing = true;\n      this.longPressStart.emit({\n        event,\n        model: this.pressModel\n      });\n\n      this.subscription.add(\n        fromEvent(document, 'mousemove')\n          .pipe(takeUntil(mouseup))\n          .subscribe((mouseEvent: MouseEvent) => this.onMouseMove(mouseEvent))\n      );\n\n      this.loop(event);\n    }, this.duration);\n\n    this.loop(event);\n  }\n\n  onMouseMove(event: MouseEvent): void {\n    if (this.pressing && !this.isLongPressing) {\n      const xThres = Math.abs(event.clientX - this.mouseX) > 10;\n      const yThres = Math.abs(event.clientY - this.mouseY) > 10;\n\n      if (xThres || yThres) {\n        this.endPress();\n      }\n    }\n  }\n\n  loop(event: MouseEvent): void {\n    if (this.isLongPressing) {\n      this.timeout = setTimeout(() => {\n        this.longPressing.emit({\n          event,\n          model: this.pressModel\n        });\n        this.loop(event);\n      }, 50);\n    }\n  }\n\n  endPress(): void {\n    clearTimeout(this.timeout);\n    this.isLongPressing = false;\n    this.pressing = false;\n    this._destroySubscription();\n\n    this.longPressEnd.emit({\n      model: this.pressModel\n    });\n  }\n\n  onMouseup(): void {\n    this.endPress();\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n  }\n\n  private _destroySubscription(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import {\n  Directive,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  KeyValueDiffers,\n  AfterContentInit,\n  OnDestroy,\n  Inject\n} from '@angular/core';\nimport { DraggableDirective } from './draggable.directive';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({ selector: '[orderable]' })\nexport class OrderableDirective implements AfterContentInit, OnDestroy {\n  @Output() reorder: EventEmitter<any> = new EventEmitter();\n  @Output() targetChanged: EventEmitter<any> = new EventEmitter();\n\n  @ContentChildren(DraggableDirective, { descendants: true })\n  draggables: QueryList<DraggableDirective>;\n\n  positions: any;\n  differ: any;\n  lastDraggingIndex: number;\n\n  constructor(differs: KeyValueDiffers, @Inject(DOCUMENT) private document: any) {\n    this.differ = differs.find({}).create();\n  }\n\n  ngAfterContentInit(): void {\n    // HACK: Investigate Better Way\n    this.updateSubscriptions();\n    this.draggables.changes.subscribe(this.updateSubscriptions.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.draggables.forEach(d => {\n      d.dragStart.unsubscribe();\n      d.dragging.unsubscribe();\n      d.dragEnd.unsubscribe();\n    });\n  }\n\n  updateSubscriptions(): void {\n    const diffs = this.differ.diff(this.createMapDiffs());\n\n    if (diffs) {\n      const subscribe = ({ currentValue, previousValue }: any) => {\n        unsubscribe({ previousValue });\n\n        if (currentValue) {\n          currentValue.dragStart.subscribe(this.onDragStart.bind(this));\n          currentValue.dragging.subscribe(this.onDragging.bind(this));\n          currentValue.dragEnd.subscribe(this.onDragEnd.bind(this));\n        }\n      };\n\n      const unsubscribe = ({ previousValue }: any) => {\n        if (previousValue) {\n          previousValue.dragStart.unsubscribe();\n          previousValue.dragging.unsubscribe();\n          previousValue.dragEnd.unsubscribe();\n        }\n      };\n\n      diffs.forEachAddedItem(subscribe);\n      // diffs.forEachChangedItem(subscribe.bind(this));\n      diffs.forEachRemovedItem(unsubscribe);\n    }\n  }\n\n  onDragStart(): void {\n    this.positions = {};\n\n    let i = 0;\n    for (const dragger of this.draggables.toArray()) {\n      const elm = dragger.element;\n      const left = parseInt(elm.offsetLeft.toString(), 0);\n      this.positions[dragger.dragModel.prop] = {\n        left,\n        right: left + parseInt(elm.offsetWidth.toString(), 0),\n        index: i++,\n        element: elm\n      };\n    }\n  }\n\n  onDragging({ element, model, event }: any): void {\n    const prevPos = this.positions[model.prop];\n    const target = this.isTarget(model, event);\n\n    if (target) {\n      if (this.lastDraggingIndex !== target.i) {\n        this.targetChanged.emit({\n          prevIndex: this.lastDraggingIndex,\n          newIndex: target.i,\n          initialIndex: prevPos.index\n        });\n        this.lastDraggingIndex = target.i;\n      }\n    } else if (this.lastDraggingIndex !== prevPos.index) {\n      this.targetChanged.emit({\n        prevIndex: this.lastDraggingIndex,\n        initialIndex: prevPos.index\n      });\n      this.lastDraggingIndex = prevPos.index;\n    }\n  }\n\n  onDragEnd({ element, model, event }: any): void {\n    const prevPos = this.positions[model.prop];\n\n    const target = this.isTarget(model, event);\n    if (target) {\n      this.reorder.emit({\n        prevIndex: prevPos.index,\n        newIndex: target.i,\n        model\n      });\n    }\n\n    this.lastDraggingIndex = undefined;\n    element.style.left = 'auto';\n  }\n\n  isTarget(model: any, event: any): any {\n    let i = 0;\n    const x = event.x || event.clientX;\n    const y = event.y || event.clientY;\n    const targets = this.document.elementsFromPoint(x, y);\n\n    for (const prop in this.positions) {\n      // current column position which throws event.\n      const pos = this.positions[prop];\n\n      // since we drag the inner span, we need to find it in the elements at the cursor\n      if (model.prop !== prop && targets.find((el: any) => el === pos.element)) {\n        return {\n          pos,\n          i\n        };\n      }\n\n      i++;\n    }\n  }\n\n  private createMapDiffs(): { [key: string]: DraggableDirective } {\n    return this.draggables.toArray().reduce((acc, curr) => {\n      acc[curr.dragModel.$$id] = curr;\n      return acc;\n    }, {});\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  AfterViewInit,\n  Renderer2\n} from '@angular/core';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[resizeable]',\n  host: {\n    '[class.resizeable]': 'resizeEnabled'\n  }\n})\nexport class ResizeableDirective implements OnDestroy, AfterViewInit {\n  @Input() resizeEnabled: boolean = true;\n  @Input() minWidth: number;\n  @Input() maxWidth: number;\n\n  @Output() resize: EventEmitter<any> = new EventEmitter();\n\n  element: HTMLElement;\n  subscription: Subscription;\n  resizing: boolean = false;\n  private resizeHandle: HTMLElement;\n\n  constructor(element: ElementRef, private renderer: Renderer2) {\n    this.element = element.nativeElement;\n  }\n\n  ngAfterViewInit(): void {\n    const renderer2 = this.renderer;\n    this.resizeHandle = renderer2.createElement('span');\n    if (this.resizeEnabled) {\n      renderer2.addClass(this.resizeHandle, 'resize-handle');\n    } else {\n      renderer2.addClass(this.resizeHandle, 'resize-handle--not-resizable');\n    }\n    renderer2.appendChild(this.element, this.resizeHandle);\n  }\n\n  ngOnDestroy(): void {\n    this._destroySubscription();\n    if (this.renderer.destroyNode) {\n      this.renderer.destroyNode(this.resizeHandle);\n    } else if (this.resizeHandle) {\n      this.renderer.removeChild(this.renderer.parentNode(this.resizeHandle), this.resizeHandle);\n    }\n  }\n\n  onMouseup(): void {\n    this.resizing = false;\n\n    if (this.subscription && !this.subscription.closed) {\n      this._destroySubscription();\n      this.resize.emit(this.element.clientWidth);\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event: MouseEvent): void {\n    const isHandle = (<HTMLElement>event.target).classList.contains('resize-handle');\n    const initialWidth = this.element.clientWidth;\n    const mouseDownScreenX = event.screenX;\n\n    if (isHandle) {\n      event.stopPropagation();\n      this.resizing = true;\n\n      const mouseup = fromEvent(document, 'mouseup');\n      this.subscription = mouseup.subscribe((ev: MouseEvent) => this.onMouseup());\n\n      const mouseMoveSub = fromEvent(document, 'mousemove')\n        .pipe(takeUntil(mouseup))\n        .subscribe((e: MouseEvent) => this.move(e, initialWidth, mouseDownScreenX));\n\n      this.subscription.add(mouseMoveSub);\n    }\n  }\n\n  move(event: MouseEvent, initialWidth: number, mouseDownScreenX: number): void {\n    const movementX = event.screenX - mouseDownScreenX;\n    const newWidth = initialWidth + movementX;\n\n    const overMinWidth = !this.minWidth || newWidth >= this.minWidth;\n    const underMaxWidth = !this.maxWidth || newWidth <= this.maxWidth;\n\n    if (overMinWidth && underMaxWidth) {\n      this.element.style.width = `${newWidth}px`;\n    }\n  }\n\n  private _destroySubscription() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n      this.subscription = undefined;\n    }\n  }\n}\n","import { Directive, Output, EventEmitter, ElementRef, HostBinding, NgZone, OnInit, OnDestroy } from '@angular/core';\n\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\n@Directive({ selector: '[visibilityObserver]' })\nexport class VisibilityDirective implements OnInit, OnDestroy {\n  @HostBinding('class.visible')\n  isVisible: boolean = false;\n\n  @Output() visible: EventEmitter<any> = new EventEmitter();\n\n  timeout: any;\n\n  constructor(private element: ElementRef, private zone: NgZone) {}\n\n  ngOnInit(): void {\n    this.runCheck();\n  }\n\n  ngOnDestroy(): void {\n    clearTimeout(this.timeout);\n  }\n\n  onVisibilityChange(): void {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n\n  runCheck(): void {\n    const check = () => {\n      // https://davidwalsh.name/offsetheight-visibility\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\n\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 50);\n        });\n      }\n    };\n\n    this.timeout = setTimeout(() => check());\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrollbarHelper } from './services/scrollbar-helper.service';\nimport { DimensionsHelper } from './services/dimensions-helper.service';\nimport { ColumnChangesService } from './services/column-changes.service';\nimport { DataTableFooterTemplateDirective } from './components/footer/footer-template.directive';\nimport { VisibilityDirective } from './directives/visibility.directive';\nimport { DraggableDirective } from './directives/draggable.directive';\nimport { ResizeableDirective } from './directives/resizeable.directive';\nimport { OrderableDirective } from './directives/orderable.directive';\nimport { LongPressDirective } from './directives/long-press.directive';\nimport { ScrollerComponent } from './components/body/scroller.component';\nimport { DatatableComponent } from './components/datatable.component';\nimport { DataTableColumnDirective } from './components/columns/column.directive';\nimport { DataTableHeaderComponent } from './components/header/header.component';\nimport { DataTableHeaderCellComponent } from './components/header/header-cell.component';\nimport { DataTableBodyComponent } from './components/body/body.component';\nimport { DataTableFooterComponent } from './components/footer/footer.component';\nimport { DataTablePagerComponent } from './components/footer/pager.component';\nimport { ProgressBarComponent } from './components/body/progress-bar.component';\nimport { DataTableBodyRowComponent } from './components/body/body-row.component';\nimport { DataTableRowWrapperComponent } from './components/body/body-row-wrapper.component';\nimport { DatatableRowDetailDirective } from './components/row-detail/row-detail.directive';\nimport { DatatableGroupHeaderDirective } from './components/body/body-group-header.directive';\nimport { DatatableRowDetailTemplateDirective } from './components/row-detail/row-detail-template.directive';\nimport { DataTableBodyCellComponent } from './components/body/body-cell.component';\nimport { DataTableSelectionComponent } from './components/body/selection.component';\nimport { DataTableColumnHeaderDirective } from './components/columns/column-header.directive';\nimport { DataTableColumnCellDirective } from './components/columns/column-cell.directive';\nimport { DataTableColumnCellTreeToggle } from './components/columns/tree.directive';\nimport { DatatableFooterDirective } from './components/footer/footer.directive';\nimport { DatatableGroupHeaderTemplateDirective } from './components/body/body-group-header-template.directive';\nimport { DataTableSummaryRowComponent } from './components/body/summary/summary-row.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [ScrollbarHelper, DimensionsHelper, ColumnChangesService],\n  declarations: [\n    DataTableFooterTemplateDirective,\n    VisibilityDirective,\n    DraggableDirective,\n    ResizeableDirective,\n    OrderableDirective,\n    LongPressDirective,\n    ScrollerComponent,\n    DatatableComponent,\n    DataTableColumnDirective,\n    DataTableHeaderComponent,\n    DataTableHeaderCellComponent,\n    DataTableBodyComponent,\n    DataTableFooterComponent,\n    DataTablePagerComponent,\n    ProgressBarComponent,\n    DataTableBodyRowComponent,\n    DataTableRowWrapperComponent,\n    DatatableRowDetailDirective,\n    DatatableGroupHeaderDirective,\n    DatatableRowDetailTemplateDirective,\n    DataTableBodyCellComponent,\n    DataTableSelectionComponent,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n    DataTableColumnCellTreeToggle,\n    DatatableFooterDirective,\n    DatatableGroupHeaderTemplateDirective,\n    DataTableSummaryRowComponent\n  ],\n  exports: [\n    DatatableComponent,\n    DatatableRowDetailDirective,\n    DatatableGroupHeaderDirective,\n    DatatableRowDetailTemplateDirective,\n    DataTableColumnDirective,\n    DataTableColumnHeaderDirective,\n    DataTableColumnCellDirective,\n    DataTableColumnCellTreeToggle,\n    DataTableFooterTemplateDirective,\n    DatatableFooterDirective,\n    DataTablePagerComponent,\n    DatatableGroupHeaderTemplateDirective\n  ]\n})\nexport class NgxDatatableModule {\n  /**\n   * Configure global configuration via INgxDatatableConfig\n   * @param configuration\n   */\n  static forRoot(configuration: INgxDatatableConfig): ModuleWithProviders<NgxDatatableModule> {\n    return {\n      ngModule: NgxDatatableModule,\n      providers: [{ provide: 'configuration', useValue: configuration }]\n    };\n  }\n}\n\n/**\n * Interface definition for INgxDatatableConfig global configuration\n */\nexport interface INgxDatatableConfig {\n  messages: {\n    emptyMessage: string; // Message to show when array is presented, but contains no values\n    totalMessage: string; // Footer total message\n    selectedMessage: string; // Footer selected message\n  };\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\n/**\n * service to make DatatableComponent aware of changes to\n * input bindings of DataTableColumnDirective\n */\n@Injectable()\nexport class ColumnChangesService {\n  private columnInputChanges = new Subject<undefined>();\n\n  get columnInputChanges$(): Observable<undefined> {\n    return this.columnInputChanges.asObservable();\n  }\n\n  onInputChange(): void {\n    this.columnInputChanges.next();\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n@Injectable()\nexport class DimensionsHelper {\n  getDimensions(element: Element): ClientRect {\n    return element.getBoundingClientRect();\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Gets the width of the scrollbar.  Nesc for windows\n * http://stackoverflow.com/a/13382873/888165\n */\n@Injectable()\nexport class ScrollbarHelper {\n  width: number = this.getWidth();\n\n  constructor(@Inject(DOCUMENT) private document: any) {}\n\n  getWidth(): number {\n    const outer = this.document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.width = '100px';\n    outer.style.msOverflowStyle = 'scrollbar';\n    this.document.body.appendChild(outer);\n\n    const widthNoScroll = outer.offsetWidth;\n    outer.style.overflow = 'scroll';\n\n    const inner = this.document.createElement('div');\n    inner.style.width = '100%';\n    outer.appendChild(inner);\n\n    const widthWithScroll = inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n\n    return widthNoScroll - widthWithScroll;\n  }\n}\n","export enum ClickType {\n  single = 'single',\n  double = 'double'\n}\n","export enum ColumnMode {\n  standard = 'standard',\n  flex = 'flex',\n  force = 'force'\n}\n","export enum ContextmenuType {\n  header = 'header',\n  body = 'body'\n}\n","export enum SelectionType {\n  single = 'single',\n  multi = 'multi',\n  multiClick = 'multiClick',\n  cell = 'cell',\n  checkbox = 'checkbox'\n}\n","export enum SortDirection {\n  asc = 'asc',\n  desc = 'desc'\n}\n","export enum SortType {\n  single = 'single',\n  multi = 'multi'\n}\n","/**\n * Converts strings from something to camel case\n * http://stackoverflow.com/questions/10425287/convert-dash-separated-string-to-camelcase\n */\nexport function camelCase(str: string): string {\n  // Replace special characters with a space\n  str = str.replace(/[^a-zA-Z0-9 ]/g, ' ');\n  // put a space before an uppercase letter\n  str = str.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n\n  // Lower case first character and some other stuff\n  str = str\n    .replace(/([^a-zA-Z0-9 ])|^[0-9]+/g, '')\n    .trim()\n    .toLowerCase();\n\n  // uppercase characters preceded by a space or number\n  str = str.replace(/([ 0-9]+)([a-zA-Z])/g, function (a, b, c) {\n    return b.trim() + c.toUpperCase();\n  });\n\n  return str;\n}\n\n/**\n * Converts strings from camel case to words\n * http://stackoverflow.com/questions/7225407/convert-camelcasetext-to-camel-case-text\n */\nexport function deCamelCase(str: string): string {\n  return str.replace(/([A-Z])/g, match => ` ${match}`).replace(/^./, match => match.toUpperCase());\n}\n","import { camelCase, deCamelCase } from './camel-case';\nimport { id } from './id';\nimport { getterForProp } from './column-prop-getters';\nimport { TableColumn } from '../types/table-column.type';\nimport { DataTableColumnDirective } from '../components/columns/column.directive';\n\n/**\n * Sets the column defaults\n */\nexport function setColumnDefaults(columns: TableColumn[]) {\n  if (!columns) return;\n\n  // Only one column should hold the tree view\n  // Thus if multiple columns are provided with\n  // isTreeColumn as true we take only the first one\n  let treeColumnFound: boolean = false;\n\n  for (const column of columns) {\n    if (!column.$$id) {\n      column.$$id = id();\n    }\n\n    // prop can be numeric; zero is valid not a missing prop\n    // translate name => prop\n    if (isNullOrUndefined(column.prop) && column.name) {\n      column.prop = camelCase(column.name);\n    }\n\n    if (!column.$$valueGetter) {\n      column.$$valueGetter = getterForProp(column.prop);\n    }\n\n    // format props if no name passed\n    if (!isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = deCamelCase(String(column.prop));\n    }\n\n    if (isNullOrUndefined(column.prop) && isNullOrUndefined(column.name)) {\n      column.name = ''; // Fixes IE and Edge displaying `null`\n    }\n\n    if (!column.hasOwnProperty('resizeable')) {\n      column.resizeable = true;\n    }\n\n    if (!column.hasOwnProperty('sortable')) {\n      column.sortable = true;\n    }\n\n    if (!column.hasOwnProperty('draggable')) {\n      column.draggable = true;\n    }\n\n    if (!column.hasOwnProperty('canAutoResize')) {\n      column.canAutoResize = true;\n    }\n\n    if (!column.hasOwnProperty('width')) {\n      column.width = 150;\n    }\n\n    if (!column.hasOwnProperty('isTreeColumn')) {\n      column.isTreeColumn = false;\n    } else {\n      if (column.isTreeColumn && !treeColumnFound) {\n        // If the first column with isTreeColumn is true found\n        // we mark that treeCoulmn is found\n        treeColumnFound = true;\n      } else {\n        // After that isTreeColumn property for any other column\n        // will be set as false\n        column.isTreeColumn = false;\n      }\n    }\n  }\n}\n\nexport function isNullOrUndefined<T>(value: T | null | undefined): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Translates templates definitions to objects\n */\nexport function translateTemplates(templates: DataTableColumnDirective[]): any[] {\n  const result: any[] = [];\n  for (const temp of templates) {\n    const col: any = {};\n\n    const props = Object.getOwnPropertyNames(temp);\n    for (const prop of props) {\n      col[prop] = temp[prop];\n    }\n\n    if (temp.headerTemplate) {\n      col.headerTemplate = temp.headerTemplate;\n    }\n\n    if (temp.cellTemplate) {\n      col.cellTemplate = temp.cellTemplate;\n    }\n\n    if (temp.summaryFunc) {\n      col.summaryFunc = temp.summaryFunc;\n    }\n\n    if (temp.summaryTemplate) {\n      col.summaryTemplate = temp.summaryTemplate;\n    }\n\n    result.push(col);\n  }\n\n  return result;\n}\n","import { TableColumnProp } from '../types/table-column.type';\n\n// maybe rename this file to prop-getters.ts\n\nexport type ValueGetter = (obj: any, prop: TableColumnProp) => any;\n\n/**\n * Always returns the empty string ''\n */\nexport function emptyStringGetter(): string {\n  return '';\n}\n\n/**\n * Returns the appropriate getter function for this kind of prop.\n * If prop == null, returns the emptyStringGetter.\n */\nexport function getterForProp(prop: TableColumnProp): ValueGetter {\n  if (prop == null) {\n    return emptyStringGetter;\n  }\n\n  if (typeof prop === 'number') {\n    return numericIndexGetter;\n  } else {\n    // deep or simple\n    if (prop.indexOf('.') !== -1) {\n      return deepValueGetter;\n    } else {\n      return shallowValueGetter;\n    }\n  }\n}\n\n/**\n * Returns the value at this numeric index.\n * @param row array of values\n * @param index numeric index\n * @returns any or '' if invalid index\n */\nexport function numericIndexGetter(row: any[], index: number): any {\n  if (row == null) {\n    return '';\n  }\n  // mimic behavior of deepValueGetter\n  if (!row || index == null) {\n    return row;\n  }\n\n  const value = row[index];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n\n/**\n * Returns the value of a field.\n * (more efficient than deepValueGetter)\n * @param obj object containing the field\n * @param fieldName field name string\n */\nexport function shallowValueGetter(obj: any, fieldName: string): any {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !fieldName) {\n    return obj;\n  }\n\n  const value = obj[fieldName];\n  if (value == null) {\n    return '';\n  }\n  return value;\n}\n\n/**\n * Returns a deep object given a string. zoo['animal.type']\n */\nexport function deepValueGetter(obj: any, path: string): any {\n  if (obj == null) {\n    return '';\n  }\n  if (!obj || !path) {\n    return obj;\n  }\n\n  // check if path matches a root-level field\n  // { \"a.b.c\": 123 }\n  let current = obj[path];\n  if (current !== undefined) {\n    return current;\n  }\n\n  current = obj;\n  const split = path.split('.');\n\n  if (split.length) {\n    for (let i = 0; i < split.length; i++) {\n      current = current[split[i]];\n\n      // if found undefined, return empty string\n      if (current === undefined || current === null) {\n        return '';\n      }\n    }\n  }\n\n  return current;\n}\n","/**\n * Returns the columns by pin.\n */\nexport function columnsByPin(cols: any[]) {\n  const ret: { left: any; center: any; right: any } = {\n    left: [],\n    center: [],\n    right: []\n  };\n\n  if (cols) {\n    for (const col of cols) {\n      if (col.frozenLeft) {\n        ret.left.push(col);\n      } else if (col.frozenRight) {\n        ret.right.push(col);\n      } else {\n        ret.center.push(col);\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Returns the widths of all group sets of a column\n */\nexport function columnGroupWidths(groups: any, all: any) {\n  return {\n    left: columnTotalWidth(groups.left),\n    center: columnTotalWidth(groups.center),\n    right: columnTotalWidth(groups.right),\n    total: Math.floor(columnTotalWidth(all))\n  };\n}\n\n/**\n * Calculates the total width of all columns and their groups\n */\nexport function columnTotalWidth(columns: any[], prop?: string) {\n  let totalWidth = 0;\n\n  if (columns) {\n    for (const c of columns) {\n      const has = prop && c[prop];\n      const width = has ? c[prop] : c.width;\n      totalWidth = totalWidth + parseFloat(width);\n    }\n  }\n\n  return totalWidth;\n}\n\n/**\n * Calculates the total width of all columns and their groups\n */\nexport function columnsTotalWidth(columns: any, prop?: any) {\n  let totalWidth = 0;\n\n  for (const column of columns) {\n    const has = prop && column[prop];\n    totalWidth = totalWidth + (has ? column[prop] : column.width);\n  }\n\n  return totalWidth;\n}\n\nexport function columnsByPinArr(val: any) {\n  const colsByPinArr = [];\n  const colsByPin = columnsByPin(val);\n\n  colsByPinArr.push({ type: 'left', columns: colsByPin['left'] });\n  colsByPinArr.push({ type: 'center', columns: colsByPin['center'] });\n  colsByPinArr.push({ type: 'right', columns: colsByPin['right'] });\n\n  return colsByPinArr;\n}\n","if (typeof document !== 'undefined' && !document.elementsFromPoint) {\n  document.elementsFromPoint = elementsFromPoint;\n}\n\n/*tslint:disable*/\n/**\n * Polyfill for `elementsFromPoint`\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint\n * https://gist.github.com/iddan/54d5d9e58311b0495a91bf06de661380\n * https://gist.github.com/oslego/7265412\n */\nexport function elementsFromPoint(x: number, y: number) {\n  const elements = [];\n  const previousPointerEvents = [];\n  let current: any; // TODO: window.getComputedStyle should be used with inferred type (Element)\n  let i;\n  let d;\n\n  //if (document === undefined) return elements;\n\n  // get all elements via elementFromPoint, and remove them from hit-testing in order\n  while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1 && current != null) {\n    // push the element and its current style\n    elements.push(current);\n    previousPointerEvents.push({\n      value: current.style.getPropertyValue('pointer-events'),\n      priority: current.style.getPropertyPriority('pointer-events')\n    });\n\n    // add \"pointer-events: none\", to get to the underlying element\n    current.style.setProperty('pointer-events', 'none', 'important');\n  }\n\n  // restore the previous pointer-events values\n  for (i = previousPointerEvents.length; (d = previousPointerEvents[--i]); ) {\n    elements[i].style.setProperty('pointer-events', d.value ? d.value : '', d.priority);\n  }\n\n  // return our results\n  return elements;\n}\n/*tslint:enable*/\n","/**\n * Creates a unique object id.\n * http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n */\nexport function id() {\n  return ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n}\n","export enum Keys {\n  up = 38,\n  down = 40,\n  return = 13,\n  escape = 27,\n  left = 37,\n  right = 39\n}\n","import { columnsByPin, columnsTotalWidth } from './column';\n\n/**\n * Calculates the Total Flex Grow\n */\nexport function getTotalFlexGrow(columns: any[]) {\n  let totalFlexGrow = 0;\n\n  for (const c of columns) {\n    totalFlexGrow += c.flexGrow || 0;\n  }\n\n  return totalFlexGrow;\n}\n\n/**\n * Adjusts the column widths.\n * Inspired by: https://github.com/facebook/fixed-data-table/blob/master/src/FixedDataTableWidthHelper.js\n */\nexport function adjustColumnWidths(allColumns: any, expectedWidth: any) {\n  const columnsWidth = columnsTotalWidth(allColumns);\n  const totalFlexGrow = getTotalFlexGrow(allColumns);\n  const colsByGroup = columnsByPin(allColumns);\n\n  if (columnsWidth !== expectedWidth) {\n    scaleColumns(colsByGroup, expectedWidth, totalFlexGrow);\n  }\n}\n\n/**\n * Resizes columns based on the flexGrow property, while respecting manually set widths\n */\nfunction scaleColumns(colsByGroup: any, maxWidth: any, totalFlexGrow: any) {\n  // calculate total width and flexgrow points for coulumns that can be resized\n  for (const attr in colsByGroup) {\n    for (const column of colsByGroup[attr]) {\n      if (!column.canAutoResize) {\n        maxWidth -= column.width;\n        totalFlexGrow -= column.flexGrow ? column.flexGrow : 0;\n      } else {\n        column.width = 0;\n      }\n    }\n  }\n\n  const hasMinWidth = {};\n  let remainingWidth = maxWidth;\n\n  // resize columns until no width is left to be distributed\n  do {\n    const widthPerFlexPoint = remainingWidth / totalFlexGrow;\n    remainingWidth = 0;\n\n    for (const attr in colsByGroup) {\n      for (const column of colsByGroup[attr]) {\n        // if the column can be resize and it hasn't reached its minimum width yet\n        if (column.canAutoResize && !hasMinWidth[column.prop]) {\n          const newWidth = column.width + column.flexGrow * widthPerFlexPoint;\n          if (column.minWidth !== undefined && newWidth < column.minWidth) {\n            remainingWidth += newWidth - column.minWidth;\n            column.width = column.minWidth;\n            hasMinWidth[column.prop] = true;\n          } else {\n            column.width = newWidth;\n          }\n        }\n      }\n    }\n  } while (remainingWidth !== 0);\n}\n\n/**\n * Forces the width of the columns to\n * distribute equally but overflowing when necessary\n *\n * Rules:\n *\n *  - If combined withs are less than the total width of the grid,\n *    proportion the widths given the min / max / normal widths to fill the width.\n *\n *  - If the combined widths, exceed the total width of the grid,\n *    use the standard widths.\n *\n *  - If a column is resized, it should always use that width\n *\n *  - The proportional widths should never fall below min size if specified.\n *\n *  - If the grid starts off small but then becomes greater than the size ( + / - )\n *    the width should use the original width; not the newly proportioned widths.\n */\nexport function forceFillColumnWidths(\n  allColumns: any[],\n  expectedWidth: number,\n  startIdx: number,\n  allowBleed: boolean,\n  defaultColWidth: number = 300\n) {\n  const columnsToResize = allColumns.slice(startIdx + 1, allColumns.length).filter(c => {\n    return c.canAutoResize !== false;\n  });\n\n  for (const column of columnsToResize) {\n    if (!column.$$oldWidth) {\n      column.$$oldWidth = column.width;\n    }\n  }\n\n  let additionWidthPerColumn = 0;\n  let exceedsWindow = false;\n  let contentWidth = getContentWidth(allColumns, defaultColWidth);\n  let remainingWidth = expectedWidth - contentWidth;\n  const columnsProcessed: any[] = [];\n  const remainingWidthLimit = 1; // when to stop\n\n  // This loop takes care of the\n  do {\n    additionWidthPerColumn = remainingWidth / columnsToResize.length;\n    exceedsWindow = contentWidth >= expectedWidth;\n\n    for (const column of columnsToResize) {\n      if (exceedsWindow && allowBleed) {\n        column.width = column.$$oldWidth || column.width || defaultColWidth;\n      } else {\n        const newSize = (column.width || defaultColWidth) + additionWidthPerColumn;\n\n        if (column.minWidth && newSize < column.minWidth) {\n          column.width = column.minWidth;\n          columnsProcessed.push(column);\n        } else if (column.maxWidth && newSize > column.maxWidth) {\n          column.width = column.maxWidth;\n          columnsProcessed.push(column);\n        } else {\n          column.width = newSize;\n        }\n      }\n\n      column.width = Math.max(0, column.width);\n    }\n\n    contentWidth = getContentWidth(allColumns);\n    remainingWidth = expectedWidth - contentWidth;\n    removeProcessedColumns(columnsToResize, columnsProcessed);\n  } while (remainingWidth > remainingWidthLimit && columnsToResize.length !== 0);\n}\n\n/**\n * Remove the processed columns from the current active columns.\n */\nfunction removeProcessedColumns(columnsToResize: any[], columnsProcessed: any[]) {\n  for (const column of columnsProcessed) {\n    const index = columnsToResize.indexOf(column);\n    columnsToResize.splice(index, 1);\n  }\n}\n\n/**\n * Gets the width of the columns\n */\nfunction getContentWidth(allColumns: any, defaultColWidth: number = 300): number {\n  let contentWidth = 0;\n\n  for (const column of allColumns) {\n    contentWidth += column.width || defaultColWidth;\n  }\n\n  return contentWidth;\n}\n","import { camelCase } from './camel-case';\n\nconst cache = {};\nconst testStyle = typeof document !== 'undefined' ? document.createElement('div').style : undefined;\n\n// Get Prefix\n// http://davidwalsh.name/vendor-prefix\nconst prefix = (function () {\n  const styles = typeof window !== 'undefined' ? window.getComputedStyle(document.documentElement, '') : undefined;\n  const match =\n    typeof styles !== 'undefined'\n      ? Array.prototype.slice\n          .call(styles)\n          .join('')\n          .match(/-(moz|webkit|ms)-/)\n      : null;\n  const pre = match !== null ? match[1] : undefined;\n  // tslint:disable-next-line: tsr-detect-non-literal-regexp\n  const dom = typeof pre !== 'undefined' ? 'WebKit|Moz|MS|O'.match(new RegExp('(' + pre + ')', 'i'))[1] : undefined;\n\n  return dom\n    ? {\n        dom,\n        lowercase: pre,\n        css: `-${pre}-`,\n        js: pre[0].toUpperCase() + pre.substr(1)\n      }\n    : undefined;\n})();\n\nexport function getVendorPrefixedName(property: string) {\n  const name = camelCase(property);\n\n  if (!cache[name]) {\n    if (prefix !== undefined && testStyle[prefix.css + property] !== undefined) {\n      cache[name] = prefix.css + property;\n    } else if (testStyle[property] !== undefined) {\n      cache[name] = property;\n    }\n  }\n\n  return cache[name];\n}\n","/**\n * This object contains the cache of the various row heights that are present inside\n * the data table.   Its based on Fenwick tree data structure that helps with\n * querying sums that have time complexity of log n.\n *\n * Fenwick Tree Credits: http://petr-mitrichev.blogspot.com/2013/05/fenwick-tree-range-updates.html\n * https://github.com/mikolalysenko/fenwick-tree\n *\n */\nexport class RowHeightCache {\n  /**\n   * Tree Array stores the cumulative information of the row heights to perform efficient\n   * range queries and updates.  Currently the tree is initialized to the base row\n   * height instead of the detail row height.\n   */\n  private treeArray: number[] = [];\n\n  /**\n   * Clear the Tree array.\n   */\n  clearCache(): void {\n    this.treeArray = [];\n  }\n\n  /**\n   * Initialize the Fenwick tree with row Heights.\n   *\n   * @param rows The array of rows which contain the expanded status.\n   * @param rowHeight The row height.\n   * @param detailRowHeight The detail row height.\n   */\n  initCache(details: any): void {\n    const { rows, rowHeight, detailRowHeight, externalVirtual, rowCount, rowIndexes, rowExpansions } = details;\n    const isFn = typeof rowHeight === 'function';\n    const isDetailFn = typeof detailRowHeight === 'function';\n\n    if (!isFn && isNaN(rowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'rowHeight' is a\n        valid number or function value: (${rowHeight}) when 'scrollbarV' is enabled.`);\n    }\n\n    // Add this additional guard in case detailRowHeight is set to 'auto' as it wont work.\n    if (!isDetailFn && isNaN(detailRowHeight)) {\n      throw new Error(`Row Height cache initialization failed. Please ensure that 'detailRowHeight' is a\n        valid number or function value: (${detailRowHeight}) when 'scrollbarV' is enabled.`);\n    }\n\n    const n = externalVirtual ? rowCount : rows.length;\n    this.treeArray = new Array(n);\n\n    for (let i = 0; i < n; ++i) {\n      this.treeArray[i] = 0;\n    }\n\n    for (let i = 0; i < n; ++i) {\n      const row = rows[i];\n      let currentRowHeight = rowHeight;\n      if (isFn) {\n        currentRowHeight = rowHeight(row);\n      }\n\n      // Add the detail row height to the already expanded rows.\n      // This is useful for the table that goes through a filter or sort.\n      const expanded = rowExpansions.has(row);\n      if (row && expanded) {\n        if (isDetailFn) {\n          const index = rowIndexes.get(row);\n          currentRowHeight += detailRowHeight(row, index);\n        } else {\n          currentRowHeight += detailRowHeight;\n        }\n      }\n\n      this.update(i, currentRowHeight);\n    }\n  }\n\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.  Below handles edge cases.\n   */\n  getRowIndex(scrollY: number): number {\n    if (scrollY === 0) return 0;\n    return this.calcRowIndex(scrollY);\n  }\n\n  /**\n   * When a row is expanded or rowHeight is changed, update the height.  This can\n   * be utilized in future when Angular Data table supports dynamic row heights.\n   */\n  update(atRowIndex: number, byRowHeight: number): void {\n    if (!this.treeArray.length) {\n      throw new Error(`Update at index ${atRowIndex} with value ${byRowHeight} failed:\n        Row Height cache not initialized.`);\n    }\n\n    const n = this.treeArray.length;\n    atRowIndex |= 0;\n\n    while (atRowIndex < n) {\n      this.treeArray[atRowIndex] += byRowHeight;\n      atRowIndex |= atRowIndex + 1;\n    }\n  }\n\n  /**\n   * Range Sum query from 1 to the rowIndex\n   */\n  query(atIndex: number): number {\n    if (!this.treeArray.length) {\n      throw new Error(`query at index ${atIndex} failed: Fenwick tree array not initialized.`);\n    }\n\n    let sum = 0;\n    atIndex |= 0;\n\n    while (atIndex >= 0) {\n      sum += this.treeArray[atIndex];\n      atIndex = (atIndex & (atIndex + 1)) - 1;\n    }\n\n    return sum;\n  }\n\n  /**\n   * Find the total height between 2 row indexes\n   */\n  queryBetween(atIndexA: number, atIndexB: number): number {\n    return this.query(atIndexB) - this.query(atIndexA - 1);\n  }\n\n  /**\n   * Given the ScrollY position i.e. sum, provide the rowIndex\n   * that is present in the current view port.\n   */\n  private calcRowIndex(sum: number): number {\n    if (!this.treeArray.length) return 0;\n\n    let pos = -1;\n    const dataLength = this.treeArray.length;\n\n    // Get the highest bit for the block size.\n    const highestBit = Math.pow(2, dataLength.toString(2).length - 1);\n\n    for (let blockSize = highestBit; blockSize !== 0; blockSize >>= 1) {\n      const nextPos = pos + blockSize;\n      if (nextPos < dataLength && sum >= this.treeArray[nextPos]) {\n        sum -= this.treeArray[nextPos];\n        pos = nextPos;\n      }\n    }\n\n    return pos + 1;\n  }\n}\n","export function selectRows(selected: any[], row: any, comparefn: any) {\n  const selectedIndex = comparefn(row, selected);\n\n  if (selectedIndex > -1) {\n    selected.splice(selectedIndex, 1);\n  } else {\n    selected.push(row);\n  }\n\n  return selected;\n}\n\nexport function selectRowsBetween(\n  selected: any[],\n  rows: any[],\n  index: number,\n  prevIndex: number,\n  comparefn: any\n): any[] {\n  const reverse = index < prevIndex;\n\n  for (let i = 0; i < rows.length; i++) {\n    const row = rows[i];\n    const greater = i >= prevIndex && i <= index;\n    const lesser = i <= prevIndex && i >= index;\n\n    let range = { start: 0, end: 0 };\n    if (reverse) {\n      range = {\n        start: index,\n        end: prevIndex\n      };\n    } else {\n      range = {\n        start: prevIndex,\n        end: index + 1\n      };\n    }\n\n    if ((reverse && lesser) || (!reverse && greater)) {\n      // if in the positive range to be added to `selected`, and\n      // not already in the selected array, add it\n      if (i >= range.start && i <= range.end) {\n        selected.push(row);\n      }\n    }\n  }\n\n  return selected;\n}\n","import { getterForProp } from './column-prop-getters';\nimport { SortType } from '../types/sort.type';\nimport { SortDirection } from '../types/sort-direction.type';\nimport { SortPropDir } from '../types/sort-prop-dir.type';\n/**\n * Gets the next sort direction\n */\nexport function nextSortDir(sortType: SortType, current: SortDirection): SortDirection | undefined {\n  if (sortType === SortType.single) {\n    if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else {\n      return SortDirection.asc;\n    }\n  } else {\n    if (!current) {\n      return SortDirection.asc;\n    } else if (current === SortDirection.asc) {\n      return SortDirection.desc;\n    } else if (current === SortDirection.desc) {\n      return undefined;\n    }\n    // avoid TS7030: Not all code paths return a value.\n    return undefined;\n  }\n}\n\n/**\n * Adapted from fueld-ui on 6/216\n * https://github.com/FuelInteractive/fuel-ui/tree/master/src/pipes/OrderBy\n */\nexport function orderByComparator(a: any, b: any): number {\n  if (a === null || typeof a === 'undefined') a = 0;\n  if (b === null || typeof b === 'undefined') b = 0;\n  if (a instanceof Date && b instanceof Date) {\n    if (a < b) return -1;\n    if (a > b) return 1;\n  } else if (isNaN(parseFloat(a)) || !isFinite(a) || isNaN(parseFloat(b)) || !isFinite(b)) {\n    // Convert to string in case of a=0 or b=0\n    a = String(a);\n    b = String(b);\n    // Isn't a number so lowercase the string to properly compare\n    if (a.toLowerCase() < b.toLowerCase()) return -1;\n    if (a.toLowerCase() > b.toLowerCase()) return 1;\n  } else {\n    // Parse strings as numbers to compare properly\n    if (parseFloat(a) < parseFloat(b)) return -1;\n    if (parseFloat(a) > parseFloat(b)) return 1;\n  }\n\n  // equal each other\n  return 0;\n}\n\n/**\n * creates a shallow copy of the `rows` input and returns the sorted copy. this function\n * does not sort the `rows` argument in place\n */\nexport function sortRows(rows: any[], columns: any[], dirs: SortPropDir[]): any[] {\n  if (!rows) return [];\n  if (!dirs || !dirs.length || !columns) return [...rows];\n\n  /**\n   * record the row ordering of results from prior sort operations (if applicable)\n   * this is necessary to guarantee stable sorting behavior\n   */\n  const rowToIndexMap = new Map<any, number>();\n  rows.forEach((row, index) => rowToIndexMap.set(row, index));\n\n  const temp = [...rows];\n  const cols = columns.reduce((obj, col) => {\n    if (col.comparator && typeof col.comparator === 'function') {\n      obj[col.prop] = col.comparator;\n    }\n    return obj;\n  }, {});\n\n  // cache valueGetter and compareFn so that they\n  // do not need to be looked-up in the sort function body\n  const cachedDirs = dirs.map(dir => {\n    const prop = dir.prop;\n    return {\n      prop,\n      dir: dir.dir,\n      valueGetter: getterForProp(prop),\n      compareFn: cols[prop] || orderByComparator\n    };\n  });\n\n  return temp.sort(function (rowA: any, rowB: any) {\n    for (const cachedDir of cachedDirs) {\n      // Get property and valuegetters for column to be sorted\n      const { prop, valueGetter } = cachedDir;\n      // Get A and B cell values from rows based on properties of the columns\n      const propA = valueGetter(rowA, prop);\n      const propB = valueGetter(rowB, prop);\n\n      // Compare function gets five parameters:\n      // Two cell values to be compared as propA and propB\n      // Two rows corresponding to the cells as rowA and rowB\n      // Direction of the sort for this column as SortDirection\n      // Compare can be a standard JS comparison function (a,b) => -1|0|1\n      // as additional parameters are silently ignored. The whole row and sort\n      // direction enable more complex sort logic.\n      const comparison =\n        cachedDir.dir !== SortDirection.desc\n          ? cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir)\n          : -cachedDir.compareFn(propA, propB, rowA, rowB, cachedDir.dir);\n\n      // Don't return 0 yet in case of needing to sort by next property\n      if (comparison !== 0) return comparison;\n    }\n\n    if (!(rowToIndexMap.has(rowA) && rowToIndexMap.has(rowB))) return 0;\n\n    /**\n     * all else being equal, preserve original order of the rows (stable sort)\n     */\n    return rowToIndexMap.get(rowA) < rowToIndexMap.get(rowB) ? -1 : 1;\n  });\n}\n","/**\n * Throttle a function\n */\nexport function throttle(func: any, wait: number, options?: any) {\n  options = options || {};\n  let context: any;\n  let args: any;\n  let result: any;\n  let timeout: any = null;\n  let previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function (this: any) {\n    const now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nexport function throttleable(duration: number, options?: any) {\n  return function innerDecorator(target: any, key: PropertyKey, descriptor: PropertyDescriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n","import { getVendorPrefixedName } from './prefixes';\nimport { camelCase } from './camel-case';\n\n// browser detection and prefixing tools\nconst transform = typeof window !== 'undefined' ? getVendorPrefixedName('transform') : undefined;\nconst backfaceVisibility = typeof window !== 'undefined' ? getVendorPrefixedName('backfaceVisibility') : undefined;\nconst hasCSSTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('transform') : undefined;\nconst hasCSS3DTransforms = typeof window !== 'undefined' ? !!getVendorPrefixedName('perspective') : undefined;\nconst ua = typeof window !== 'undefined' ? window.navigator.userAgent : 'Chrome';\nconst isSafari = /Safari\\//.test(ua) && !/Chrome\\//.test(ua);\n\nexport function translateXY(styles: any, x: number, y: number) {\n  if (typeof transform !== 'undefined' && hasCSSTransforms) {\n    if (!isSafari && hasCSS3DTransforms) {\n      styles[transform] = `translate3d(${x}px, ${y}px, 0)`;\n      styles[backfaceVisibility] = 'hidden';\n    } else {\n      styles[camelCase(transform)] = `translate(${x}px, ${y}px)`;\n    }\n  } else {\n    styles.top = `${y}px`;\n    styles.left = `${x}px`;\n  }\n}\n","import { getterForProp } from './column-prop-getters';\nimport { TableColumnProp } from '../types/table-column.type';\n\nexport type OptionalValueGetter = (row: any) => any | undefined;\nexport function optionalGetterForProp(prop: TableColumnProp): OptionalValueGetter {\n  return prop && (row => getterForProp(prop)(row, prop));\n}\n\n/**\n * This functions rearrange items by their parents\n * Also sets the level value to each of the items\n *\n * Note: Expecting each item has a property called parentId\n * Note: This algorithm will fail if a list has two or more items with same ID\n * NOTE: This algorithm will fail if there is a deadlock of relationship\n *\n * For example,\n *\n * Input\n *\n * id -> parent\n * 1  -> 0\n * 2  -> 0\n * 3  -> 1\n * 4  -> 1\n * 5  -> 2\n * 7  -> 8\n * 6  -> 3\n *\n *\n * Output\n * id -> level\n * 1      -> 0\n * --3    -> 1\n * ----6  -> 2\n * --4    -> 1\n * 2      -> 0\n * --5    -> 1\n * 7     -> 8\n *\n *\n * @param rows\n *\n */\nexport function groupRowsByParents(rows: any[], from?: OptionalValueGetter, to?: OptionalValueGetter): any[] {\n  if (from && to) {\n    const nodeById = {};\n    const l = rows.length;\n    let node: TreeNode | null = null;\n\n    nodeById[0] = new TreeNode(); // that's the root node\n\n    const uniqIDs = rows.reduce((arr, item) => {\n      const toValue = to(item);\n      if (arr.indexOf(toValue) === -1) {\n        arr.push(toValue);\n      }\n      return arr;\n    }, []);\n\n    for (let i = 0; i < l; i++) {\n      // make TreeNode objects for each item\n      nodeById[to(rows[i])] = new TreeNode(rows[i]);\n    }\n\n    for (let i = 0; i < l; i++) {\n      // link all TreeNode objects\n      node = nodeById[to(rows[i])];\n      let parent = 0;\n      const fromValue = from(node.row);\n      if (!!fromValue && uniqIDs.indexOf(fromValue) > -1) {\n        parent = fromValue;\n      }\n      node.parent = nodeById[parent];\n      node.row['level'] = node.parent.row['level'] + 1;\n      node.parent.children.push(node);\n    }\n\n    let resolvedRows: any[] = [];\n    nodeById[0].flatten(function () {\n      resolvedRows = [...resolvedRows, this.row];\n    }, true);\n\n    return resolvedRows;\n  } else {\n    return rows;\n  }\n}\n\nclass TreeNode {\n  public row: any;\n  public parent: any;\n  public children: any[];\n\n  constructor(row: any | null = null) {\n    if (!row) {\n      row = {\n        level: -1,\n        treeStatus: 'expanded'\n      };\n    }\n    this.row = row;\n    this.parent = null;\n    this.children = [];\n  }\n\n  flatten(f: any, recursive: boolean) {\n    if (this.row['treeStatus'] === 'expanded') {\n      for (let i = 0, l = this.children.length; i < l; i++) {\n        const child = this.children[i];\n        f.apply(child, Array.prototype.slice.call(arguments, 2));\n        if (recursive) child.flatten.apply(child, arguments);\n      }\n    }\n  }\n}\n","/*\n * Public API Surface of ngx-datatable\n */\n\n// components\nexport * from './lib/ngx-datatable.module';\nexport * from './lib/components/datatable.component';\nexport * from './lib/components/header/header.component';\nexport * from './lib/components/header/header-cell.component';\nexport * from './lib/components/body/body.component';\nexport * from './lib/components/body/body-cell.component';\nexport * from './lib/components/body/body-row.component';\nexport * from './lib/components/body/progress-bar.component';\nexport * from './lib/components/body/scroller.component';\nexport * from './lib/components/body/body-row-wrapper.component';\nexport * from './lib/components/body/selection.component';\nexport * from './lib/components/body/body-group-header.directive';\nexport * from './lib/components/body/body-group-header-template.directive';\nexport * from './lib/components/body/summary/summary-row.component';\nexport * from './lib/components/footer/footer.component';\nexport * from './lib/components/footer/pager.component';\nexport * from './lib/components/footer/footer.directive';\nexport * from './lib/components/footer/footer-template.directive';\nexport * from './lib/components/columns/column.directive';\nexport * from './lib/components/columns/column-header.directive';\nexport * from './lib/components/columns/column-cell.directive';\nexport * from './lib/components/columns/tree.directive';\nexport * from './lib/components/row-detail/row-detail.directive';\nexport * from './lib/components/row-detail/row-detail-template.directive';\n\n// directives\nexport * from './lib/directives/draggable.directive';\nexport * from './lib/directives/long-press.directive';\nexport * from './lib/directives/orderable.directive';\nexport * from './lib/directives/resizeable.directive';\nexport * from './lib/directives/visibility.directive';\n\n// services\nexport * from './lib/services/scrollbar-helper.service';\nexport * from './lib/services/dimensions-helper.service';\nexport * from './lib/services/column-changes.service';\n\n// types\nexport * from './lib/types/column-mode.type';\nexport * from './lib/types/sort.type';\nexport * from './lib/types/sort-direction.type';\nexport * from './lib/types/selection.type';\nexport * from './lib/types/click.type';\nexport * from './lib/types/table-column.type';\nexport * from './lib/types/sort-prop-dir.type';\nexport * from './lib/types/contextmenu.type';\n\n// utils\nexport * from './lib/utils/id';\nexport * from './lib/utils/column';\nexport * from './lib/utils/column-prop-getters';\nexport * from './lib/utils/camel-case';\nexport * from './lib/utils/keys';\nexport * from './lib/utils/math';\nexport * from './lib/utils/prefixes';\nexport * from './lib/utils/selection';\nexport * from './lib/utils/translate';\nexport * from './lib/utils/throttle';\nexport * from './lib/utils/sort';\nexport * from './lib/utils/row-height-cache';\nexport * from './lib/utils/column-helper';\nexport * from './lib/utils/elm-from-point';\nexport * from './lib/utils/tree';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component, ViewEncapsulation } from '@angular/core';\nimport { LocationStrategy, HashLocationStrategy, Location } from '@angular/common';\nimport packageInfo from 'projects/swimlane/ngx-datatable/package.json';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: [\n    './app.component.scss',\n    '../../projects/swimlane/ngx-datatable/src/lib/themes/material.scss',\n    '../../projects/swimlane/ngx-datatable/src/lib/themes/dark.scss',\n    '../../projects/swimlane/ngx-datatable/src/lib/themes/bootstrap.scss'\n  ],\n  providers: [\n    Location,\n    {\n      provide: LocationStrategy,\n      useClass: HashLocationStrategy\n    }\n  ]\n})\nexport class AppComponent {\n  state: any;\n\n  version = packageInfo.version;\n\n  constructor(location: Location) {\n    this.state = location.path(true);\n  }\n}\n","<div [class.dark]=\"state === 'dark'\">\n  <nav>\n    <h3>\n      ngx-datatable <small>({{ version }})</small>\n    </h3>\n    <ul class=\"main-ul\">\n      <li>\n        <h4>Documentation</h4>\n        <ul>\n          <li>\n            <a href=\"https://swimlane.gitbooks.io/ngx-datatable/content/\" target=\"_black\">Online</a>\n          </li>\n          <li>\n            <a href=\"https://www.gitbook.com/download/pdf/book/swimlane/ngx-datatable\" target=\"_black\">PDF</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Basic</h4>\n        <ul>\n          <li>\n            <a href=\"#virtual-scroll\" (click)=\"state = 'virtual-scroll'\">10k Rows</a>\n          </li>\n          <li>\n            <a href=\"#full-screen\" (click)=\"state = 'full-screen'\">Full Screen</a>\n          </li>\n          <li>\n            <a href=\"#inline-edit\" (click)=\"state = 'inline-edit'\">Inline Editing</a>\n          </li>\n          <li>\n            <a href=\"#horz-vert-scrolling\" (click)=\"state = 'horz-vert-scrolling'\">Horz/Vert Scrolling</a>\n          </li>\n          <li>\n            <a href=\"#multiple-tables\" (click)=\"state = 'multiple-tables'\">Multiple Tables</a>\n          </li>\n          <li><a href=\"#filter\" (click)=\"state = 'filter'\">Filtering</a></li>\n          <li>\n            <a href=\"#hidden\" (click)=\"state = 'hidden'\">Hidden On Load</a>\n          </li>\n          <li><a href=\"#live\" (click)=\"state = 'live'\">Live Data</a></li>\n          <li><a href=\"#rx\" (click)=\"state = 'rx'\">RxJS</a></li>\n          <li>\n            <a href=\"#contextmenu\" (click)=\"state = 'contextmenu'\">Context Menu</a>\n          </li>\n          <li><a href=\"#css\" (click)=\"state = 'css'\">CSS Classes</a></li>\n          <li>\n            <a href=\"#footer\" (click)=\"state = 'footer'\">Footer Template</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Themes</h4>\n        <ul>\n          <li><a href=\"#dark\" (click)=\"state = 'dark'\">Dark theme</a></li>\n          <li>\n            <a href=\"#bootstrap\" (click)=\"state = 'bootstrap'\">Bootstrap theme</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Tree</h4>\n        <ul>\n          <li>\n            <a href=\"#fullscreen-tree\" (click)=\"state = 'fullscreen-tree'\">Full screen Tree</a>\n          </li>\n          <li>\n            <a href=\"#client-tree\" (click)=\"state = 'client-tree'\">Client Side Tree</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Rows</h4>\n        <ul>\n          <li>\n            <a href=\"#row-grouping\" (click)=\"state = 'row-grouping'\">Row Grouping</a>\n          </li>\n          <li><a href=\"#\" (click)=\"state = ''\">Fluid Row Height</a></li>\n          <li>\n            <a href=\"#basic-fixed\" (click)=\"state = 'basic-fixed'\">Fixed Row Height</a>\n          </li>\n          <li>\n            <a href=\"#dynamic\" (click)=\"state = 'dynamic'\">Dynamic Row Height</a>\n          </li>\n          <li>\n            <a href=\"#row-details\" (click)=\"state = 'row-details'\">Row Detail</a>\n          </li>\n          <li>\n            <a href=\"#responsive\" (click)=\"state = 'responsive'\">Responsive</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Paging</h4>\n        <ul>\n          <li>\n            <a href=\"#client-paging\" (click)=\"state = 'client-paging'\">Client-side</a>\n          </li>\n          <li>\n            <a href=\"#server-paging\" (click)=\"state = 'server-paging'\">Server-side</a>\n          </li>\n          <li>\n            <a href=\"#paging-scrolling-novirtualization\" (click)=\"state = 'paging-scrolling-novirtualization'\"\n              >Scrolling no virtual</a\n            >\n          </li>\n          <li>\n            <a href=\"#server-scrolling\" (click)=\"state = 'server-scrolling'\">Scrolling server-side</a>\n          </li>\n          <li>\n            <a href=\"#virtual-paging\" (click)=\"state = 'virtual-paging'\">Virtual server-side</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Sorting</h4>\n        <ul>\n          <li>\n            <a href=\"#client-sorting\" (click)=\"state = 'client-sorting'\">Client-side</a>\n          </li>\n          <li>\n            <a href=\"#default-sorting\" (click)=\"state = 'default-sorting'\">Default sort</a>\n          </li>\n          <li>\n            <a href=\"#server-sorting\" (click)=\"state = 'server-sorting'\">Server-side</a>\n          </li>\n          <li>\n            <a href=\"#comparator-sorting\" (click)=\"state = 'comparator-sorting'\">Comparator</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Selection</h4>\n        <ul>\n          <li>\n            <a href=\"#cell-selection\" (click)=\"state = 'cell-selection'\">Cell</a>\n          </li>\n          <li>\n            <a href=\"#single-selection\" (click)=\"state = 'single-selection'\">Single Row</a>\n          </li>\n          <li>\n            <a href=\"#multi-selection\" (click)=\"state = 'multi-selection'\">Multi Row</a>\n          </li>\n          <li>\n            <a href=\"#multi-click-selection\" (click)=\"state = 'multi-click-selection'\">Multi Click Row</a>\n          </li>\n          <li>\n            <a href=\"#multidisable-selection\" (click)=\"state = 'multidisable-selection'\">Disable Callback</a>\n          </li>\n          <li>\n            <a href=\"#chkbox-selection\" (click)=\"state = 'chkbox-selection'\">Checkbox</a>\n          </li>\n          <li>\n            <a href=\"#chkbox-selection-template\" (click)=\"state = 'chkbox-selection-template'\">Custom Checkbox</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Templates</h4>\n        <ul>\n          <li><a href=\"#inline\" (click)=\"state = 'inline'\">Inline</a></li>\n          <li>\n            <a href=\"#templateref\" (click)=\"state = 'templateref'\">TemplateRef</a>\n          </li>\n        </ul>\n      </li>\n      <li>\n        <h4>Column</h4>\n        <ul>\n          <li><a href=\"#flex\" (click)=\"state = 'flex'\">Flex</a></li>\n          <li><a href=\"#toggle\" (click)=\"state = 'toggle'\">Toggling</a></li>\n          <li><a href=\"#fixed\" (click)=\"state = 'fixed'\">Fixed</a></li>\n          <li><a href=\"#force\" (click)=\"state = 'force'\">Force</a></li>\n          <li><a href=\"#pinning\" (click)=\"state = 'pinning'\">Pinning</a></li>\n          <li><a href=\"#reorder\" (click)=\"state = 'reorder'\">Reorder</a></li>\n        </ul>\n      </li>\n      <li>\n        <h4>Summary Row</h4>\n        <ul>\n          <li>\n            <a href=\"#simple-summary\" (click)=\"state = 'simple-summary'\">Simple</a>\n          </li>\n          <li>\n            <a href=\"#custom-template-summary\" (click)=\"state = 'custom-template-summary'\">Custom Template</a>\n          </li>\n          <li>\n            <a href=\"#paging-summary\" (click)=\"state = 'paging-summary'\">Server-side paging</a>\n          </li>\n          <li>\n            <a href=\"#inline-html-summary\" (click)=\"state = 'inline-html-summary'\">Inline HTML</a>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n  <content>\n    <!-- Basic -->\n    <basic-auto-demo *ngIf=\"!state\"></basic-auto-demo>\n    <basic-fixed-demo *ngIf=\"state === 'basic-fixed'\"></basic-fixed-demo>\n    <full-screen-demo *ngIf=\"state === 'full-screen'\"></full-screen-demo>\n    <inline-edit-demo *ngIf=\"state === 'inline-edit'\"></inline-edit-demo>\n    <virtual-scroll-demo *ngIf=\"state === 'virtual-scroll'\"></virtual-scroll-demo>\n    <horz-vert-scrolling-demo *ngIf=\"state === 'horz-vert-scrolling'\"></horz-vert-scrolling-demo>\n    <multiple-tables-demo *ngIf=\"state === 'multiple-tables'\"></multiple-tables-demo>\n    <row-details-demo *ngIf=\"state === 'row-details'\"></row-details-demo>\n    <responsive-demo *ngIf=\"state === 'responsive'\"></responsive-demo>\n    <filter-demo *ngIf=\"state === 'filter'\"></filter-demo>\n    <tabs-demo *ngIf=\"state === 'hidden'\"></tabs-demo>\n    <live-data-demo *ngIf=\"state === 'live'\"></live-data-demo>\n    <rx-demo *ngIf=\"state === 'rx'\"></rx-demo>\n    <contextmenu-demo *ngIf=\"state === 'contextmenu'\"></contextmenu-demo>\n    <row-css-demo *ngIf=\"state === 'css'\"></row-css-demo>\n    <dynamic-height-demo *ngIf=\"state === 'dynamic'\"></dynamic-height-demo>\n    <footer-demo *ngIf=\"state === 'footer'\"></footer-demo>\n\n    <!-- Themes -->\n    <basic-dark-theme-demo *ngIf=\"state === 'dark'\"></basic-dark-theme-demo>\n    <basic-bootstrap-theme-demo *ngIf=\"state === 'bootstrap'\"></basic-bootstrap-theme-demo>\n\n    <!-- Tree -->\n    <full-screen-tree-demo *ngIf=\"state === 'fullscreen-tree'\"></full-screen-tree-demo>\n    <client-side-tree-demo *ngIf=\"state === 'client-tree'\"></client-side-tree-demo>\n\n    <!-- Paging -->\n    <row-grouping-demo *ngIf=\"state === 'row-grouping'\"></row-grouping-demo>\n    <client-paging-demo *ngIf=\"state === 'client-paging'\"></client-paging-demo>\n    <server-paging-demo *ngIf=\"state === 'server-paging'\"></server-paging-demo>\n    <paging-scrolling-novirtualization-demo\n      *ngIf=\"state === 'paging-scrolling-novirtualization'\"\n    ></paging-scrolling-novirtualization-demo>\n    <server-scrolling-demo *ngIf=\"state === 'server-scrolling'\"></server-scrolling-demo>\n    <virtual-paging-demo *ngIf=\"state === 'virtual-paging'\"></virtual-paging-demo>\n\n    <!-- Sorting -->\n    <client-sorting-demo *ngIf=\"state === 'client-sorting'\"></client-sorting-demo>\n    <default-sorting-demo *ngIf=\"state === 'default-sorting'\"></default-sorting-demo>\n    <server-sorting-demo *ngIf=\"state === 'server-sorting'\"></server-sorting-demo>\n    <comparator-sorting-demo *ngIf=\"state === 'comparator-sorting'\"></comparator-sorting-demo>\n\n    <!-- Selection -->\n    <cell-selection-demo *ngIf=\"state === 'cell-selection'\"></cell-selection-demo>\n    <single-selection-demo *ngIf=\"state === 'single-selection'\"></single-selection-demo>\n    <multi-selection-demo *ngIf=\"state === 'multi-selection'\"></multi-selection-demo>\n    <multidisable-selection-demo *ngIf=\"state === 'multidisable-selection'\"></multidisable-selection-demo>\n    <chkbox-selection-demo *ngIf=\"state === 'chkbox-selection'\"></chkbox-selection-demo>\n    <chkbox-selection-template-demo *ngIf=\"state === 'chkbox-selection-template'\"></chkbox-selection-template-demo>\n    <multi-click-selection-demo *ngIf=\"state === 'multi-click-selection'\"></multi-click-selection-demo>\n\n    <!-- Templates -->\n    <template-ref-demo *ngIf=\"state === 'templateref'\"></template-ref-demo>\n    <inline-templates-demo *ngIf=\"state === 'inline'\"></inline-templates-demo>\n\n    <!-- Columns -->\n    <column-flex-demo *ngIf=\"state === 'flex'\"></column-flex-demo>\n    <column-toggle-demo *ngIf=\"state === 'toggle'\"></column-toggle-demo>\n    <column-standard-demo *ngIf=\"state === 'fixed'\"></column-standard-demo>\n    <column-force-demo *ngIf=\"state === 'force'\"></column-force-demo>\n    <column-pinning-demo *ngIf=\"state === 'pinning'\"></column-pinning-demo>\n    <column-reorder-demo *ngIf=\"state === 'reorder'\"></column-reorder-demo>\n\n    <!-- Summary row -->\n    <summary-row-simple-demo *ngIf=\"state === 'simple-summary'\"></summary-row-simple-demo>\n    <summary-row-custom-template-demo *ngIf=\"state === 'custom-template-summary'\"> </summary-row-custom-template-demo>\n    <summary-row-server-paging-demo *ngIf=\"state === 'paging-summary'\"> </summary-row-server-paging-demo>\n    <summary-row-inline-html *ngIf=\"state === 'inline-html-summary'\"></summary-row-inline-html>\n  </content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { NgxDatatableModule } from '../../projects/swimlane/ngx-datatable/src/public-api';\nimport { AppComponent } from './app.component';\n\n// -- Basic\nimport { BasicFixedComponent } from './basic/basic-fixed.component';\nimport { BasicAutoComponent } from './basic/basic-auto.component';\nimport { VirtualScrollComponent } from './basic/virtual.component';\nimport { InlineEditComponent } from './basic/inline.component';\nimport { HorzVertScrolling } from './basic/scrolling.component';\nimport { MultipleTablesComponent } from './basic/multiple.component';\nimport { FullScreenComponent } from './basic/fullscreen.component';\nimport { RowDetailsComponent } from './basic/row-detail.component';\nimport { ResponsiveComponent } from './basic/responsive.component';\nimport { FilterBarComponent } from './basic/filter.component';\nimport { TabsDemoComponent } from './basic/tabs.component';\nimport { LiveDataComponent } from './basic/live.component';\nimport { RxDemoComponent } from './basic/rx.component';\nimport { ContextMenuDemoComponent } from './basic/contextmenu.component';\nimport { RowCssComponent } from './basic/css.component';\nimport { DynamicHeightComponent } from './basic/dynamic-height.component';\nimport { FooterDemoComponent } from './basic/footer.component';\nimport { RowGroupingComponent } from './basic/row-grouping.component';\n\n// -- Themes\nimport { BootstrapThemeComponent } from './basic/bootstrap.component';\nimport { DarkThemeComponent } from './basic/dark-theme.component';\n\n// -- Paging\nimport { ClientPagingComponent } from './paging/paging-client.component';\nimport { ServerPagingComponent } from './paging/paging-server.component';\nimport { ServerScrollingComponent } from './paging/scrolling-server.component';\nimport { VirtualPagingComponent } from './paging/paging-virtual.component';\nimport { PagingScrollingNoVirtualizationComponent } from './paging/paging-scrolling-novirtualization.component';\n\n// -- Sorting\nimport { SortingComparatorComponent } from './sorting/sorting-comparator.component';\nimport { DefaultSortingComponent } from './sorting/sorting-default.component';\nimport { ServerSortingComponent } from './sorting/sorting-server.component';\nimport { ClientSortingComponent } from './sorting/sorting-client.component';\n\n// -- Templates\nimport { InlineTemplatesComponent } from './templates/template-dom.component';\nimport { TemplateRefTemplatesComponent } from './templates/template-obj.component';\n\n// -- Tree\nimport { FullScreenTreeComponent } from './tree/fullscreen.component';\nimport { ClientTreeComponent } from './tree/client-tree.component';\n\n// -- Selection\nimport { CellSelectionComponent } from './selection/selection-cell.component';\nimport { MultiSelectionComponent } from './selection/selection-multi.component';\nimport { SingleSelectionComponent } from './selection/selection-single.component';\nimport { MultiDisableSelectionComponent } from './selection/selection-disabled.component';\nimport { CheckboxSelectionComponent } from './selection/selection-chkbox.component';\nimport { MultiClickSelectionComponent } from './selection/selection-multi-click.component';\nimport { CustomCheckboxSelectionComponent } from './selection/selection-chkbox-template.component';\n\n// -- Columns\nimport { ColumnToggleComponent } from './columns/column-toggle.component';\nimport { ColumnStandardComponent } from './columns/column-standard.component';\nimport { ColumnForceComponent } from './columns/column-force.component';\nimport { ColumnFlexComponent } from './columns/column-flex.component';\nimport { ColumnPinningComponent } from './columns/pinning.component';\nimport { ColumnReorderComponent } from './columns/column-reorder.component';\n\n// -- Summary row\nimport { SummaryRowSimpleComponent } from './summary/summary-row-simple.component';\nimport { SummaryRowCustomTemplateComponent } from './summary/summary-row-custom-template.component';\nimport { SummaryRowServerPagingComponent } from './summary/summary-row-server-paging.component';\nimport { SummaryRowInlineHtmlComponent } from './summary/summary-row-inline-html.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BasicAutoComponent,\n    BasicFixedComponent,\n    FullScreenComponent,\n    FullScreenTreeComponent,\n    InlineEditComponent,\n    VirtualScrollComponent,\n    HorzVertScrolling,\n    MultipleTablesComponent,\n    RowDetailsComponent,\n    ResponsiveComponent,\n    ClientPagingComponent,\n    ServerPagingComponent,\n    PagingScrollingNoVirtualizationComponent,\n    ServerScrollingComponent,\n    ClientSortingComponent,\n    DefaultSortingComponent,\n    ServerSortingComponent,\n    SortingComparatorComponent,\n    CellSelectionComponent,\n    MultiSelectionComponent,\n    InlineTemplatesComponent,\n    TemplateRefTemplatesComponent,\n    ColumnFlexComponent,\n    ColumnToggleComponent,\n    ColumnStandardComponent,\n    ColumnForceComponent,\n    ColumnPinningComponent,\n    ColumnReorderComponent,\n    FilterBarComponent,\n    VirtualPagingComponent,\n    DarkThemeComponent,\n    TabsDemoComponent,\n    SingleSelectionComponent,\n    LiveDataComponent,\n    MultiDisableSelectionComponent,\n    RxDemoComponent,\n    ContextMenuDemoComponent,\n    CheckboxSelectionComponent,\n    CustomCheckboxSelectionComponent,\n    MultiClickSelectionComponent,\n    RowCssComponent,\n    DynamicHeightComponent,\n    FooterDemoComponent,\n    RowGroupingComponent,\n    BootstrapThemeComponent,\n    ClientTreeComponent,\n    SummaryRowSimpleComponent,\n    SummaryRowCustomTemplateComponent,\n    SummaryRowServerPagingComponent,\n    SummaryRowInlineHtmlComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    AppRoutingModule,\n    NgxDatatableModule.forRoot({\n      messages: {\n        emptyMessage: 'No data to display', // Message to show when array is presented, but contains no values\n        totalMessage: 'total', // Footer total message\n        selectedMessage: 'selected' // Footer selected message\n      }\n    })\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'basic-auto-demo',\n  template: `\n    <div>\n      <h3>\n        Fluid Row Heights\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/basic-auto.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [loadingIndicator]=\"loadingIndicator\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [reorderable]=\"reorderable\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class BasicAutoComponent {\n  rows = [];\n  loadingIndicator = true;\n  reorderable = true;\n\n  columns = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company', sortable: false }];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n      setTimeout(() => {\n        this.loadingIndicator = false;\n      }, 1500);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'basic-fixed-demo',\n  template: `\n    <div>\n      <h3>\n        Fix Row Height\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/basic-fixed.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material striped\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class BasicFixedComponent {\n  rows = [];\n  columns = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'basic-bootstrap-theme-demo',\n  template: `\n    <div>\n      <h3>\n        Bootstrap Theme\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/bootstrap.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"bootstrap\"\n        [rows]=\"rows\"\n        [loadingIndicator]=\"loadingIndicator\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"40\"\n        [summaryRow]=\"true\"\n        [summaryPosition]=\"'bottom'\"\n        [footerHeight]=\"40\"\n        [limit]=\"10\"\n        rowHeight=\"auto\"\n        [reorderable]=\"reorderable\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class BootstrapThemeComponent {\n  rows = [];\n  loadingIndicator = true;\n  reorderable = true;\n\n  columns = [\n    { prop: 'name', summaryFunc: () => null },\n    { name: 'Gender', summaryFunc: cells => this.summaryForGender(cells) },\n    { name: 'Company', summaryFunc: () => null }\n  ];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n      setTimeout(() => {\n        this.loadingIndicator = false;\n      }, 1500);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  private summaryForGender(cells: string[]) {\n    const males = cells.filter(cell => cell === 'male').length;\n    const females = cells.filter(cell => cell === 'female').length;\n\n    return `males: ${males}, females: ${females}`;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'contextmenu-demo',\n  template: `\n    <div>\n      <h3>\n        Context Menu Event\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/contextmenu.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div class=\"info\">\n        <p>\n          <strong>Note:</strong> ngx-datatable does not provide a context menu feature. This demonstrates how you would\n          access the <code>contextmenu</code> event to display your own custom context menu.\n        </p>\n        <p *ngIf=\"rawEvent\">\n          <strong>Mouse position:</strong> <code>(x: {{ rawEvent?.x }}, y: {{ rawEvent?.y }})</code>\n        </p>\n        <p *ngIf=\"contextmenuRow\"><strong>Row:</strong> {{ contextmenuRow?.name }}</p>\n        <p *ngIf=\"contextmenuColumn\">\n          <strong>Header:</strong> name: {{ contextmenuColumn?.name }} prop: {{ contextmenuColumn?.prop }}\n        </p>\n      </div>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        (tableContextmenu)=\"onTableContextMenu($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ContextMenuDemoComponent {\n  rows = [];\n\n  columns = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company' }];\n\n  rawEvent: any;\n  contextmenuRow: any;\n  contextmenuColumn: any;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  onTableContextMenu(contextMenuEvent) {\n    console.log(contextMenuEvent);\n\n    this.rawEvent = contextMenuEvent.event;\n    if (contextMenuEvent.type === 'body') {\n      this.contextmenuRow = contextMenuEvent.content;\n      this.contextmenuColumn = undefined;\n    } else {\n      this.contextmenuColumn = contextMenuEvent.content;\n      this.contextmenuRow = undefined;\n    }\n\n    contextMenuEvent.event.preventDefault();\n    contextMenuEvent.event.stopPropagation();\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'row-css-demo',\n  template: `\n    <div>\n      <h3>\n        Row/Header/Cell CSS Class Demo\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/css.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [rowClass]=\"getRowClass\"\n        [scrollbarV]=\"true\"\n      >\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" headerClass=\"is-gender\" [cellClass]=\"getCellClass\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class RowCssComponent {\n  rows = [];\n  expanded = {};\n  timeout: any;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      const rows = JSON.parse(req.response);\n      cb(rows.splice(0, 50));\n    };\n\n    req.send();\n  }\n\n  getRowClass(row) {\n    return {\n      'age-is-ten': row.age % 10 === 0\n    };\n  }\n\n  getCellClass({ row, column, value }): any {\n    return {\n      'is-female': value === 'female'\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'basic-dark-theme-demo',\n  template: `\n    <div>\n      <h3>\n        Dark Theme\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/dark-theme.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"dark\"\n        [rows]=\"rows\"\n        [loadingIndicator]=\"loadingIndicator\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"40\"\n        [summaryRow]=\"true\"\n        [footerHeight]=\"40\"\n        [limit]=\"10\"\n        rowHeight=\"auto\"\n        [reorderable]=\"reorderable\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class DarkThemeComponent {\n  rows = [];\n  loadingIndicator = true;\n  reorderable = true;\n\n  columns = [\n    { prop: 'name', summaryFunc: () => null },\n    { name: 'Gender', summaryFunc: cells => this.summaryForGender(cells) },\n    { name: 'Company', summaryFunc: () => null }\n  ];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n      setTimeout(() => {\n        this.loadingIndicator = false;\n      }, 1500);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  private summaryForGender(cells: string[]) {\n    const males = cells.filter(cell => cell === 'male').length;\n    const females = cells.filter(cell => cell === 'female').length;\n\n    return `males: ${males}, females: ${females}`;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'dynamic-height-demo',\n  template: `\n    <div>\n      <h3>\n        Dynamic Height w/ Virtual Scrolling\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/dynamic-height.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"getRowHeight\"\n        [scrollbarV]=\"true\"\n      >\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Row Height\" prop=\"height\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class DynamicHeightComponent {\n  rows = [];\n  expanded = {};\n  timeout: any;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      const rows = JSON.parse(req.response).splice(0, 100);\n\n      for (const row of rows) {\n        row.height = Math.floor(Math.random() * 80) + 50;\n      }\n\n      cb(rows);\n    };\n\n    req.send();\n  }\n\n  getRowHeight(row) {\n    console.log('ROW', row);\n    if (!row) {\n      return 50;\n    }\n    if (row.height === undefined) {\n      return 50;\n    }\n    return row.height;\n  }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { DatatableComponent } from '../../../projects/swimlane/ngx-datatable/src/lib/components/datatable.component';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'filter-demo',\n  template: `\n    <div>\n      <h3>\n        Client-side Search and Filtering\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/filter.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <input\n        type=\"text\"\n        style=\"padding:8px;margin:15px auto;width:30%;\"\n        placeholder=\"Type to filter the name column...\"\n        (keyup)=\"updateFilter($event)\"\n      />\n      <ngx-datatable\n        #table\n        class=\"material\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [limit]=\"10\"\n        [rows]=\"rows\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class FilterBarComponent {\n  rows = [];\n\n  temp = [];\n\n  columns = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n  @ViewChild(DatatableComponent) table: DatatableComponent;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      // cache our list\n      this.temp = [...data];\n\n      // push our inital complete list\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    // filter our data\n    const temp = this.temp.filter(function (d) {\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n\n    // update the rows\n    this.rows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'footer-demo',\n  template: `\n    <div>\n      <h3>\n        Custom Footer\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/footer.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [footerHeight]=\"100\"\n        [headerHeight]=\"50\"\n        rowHeight=\"auto\"\n      >\n        <ngx-datatable-footer *ngIf=\"true\">\n          <ng-template\n            ngx-datatable-footer-template\n            let-rowCount=\"rowCount\"\n            let-pageSize=\"pageSize\"\n            let-selectedCount=\"selectedCount\"\n            let-curPage=\"curPage\"\n            let-offset=\"offset\"\n          >\n            <div style=\"padding: 5px 10px\">\n              <div><strong>Summary</strong>: Gender: Female</div>\n              <hr style=\"width:100%\" />\n              <div>Rows: {{ rowCount }} | Size: {{ pageSize }} | Current: {{ curPage }} | Offset: {{ offset }}</div>\n            </div>\n          </ng-template>\n        </ngx-datatable-footer>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class FooterDemoComponent {\n  rows = [];\n\n  columns = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company' }];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'full-screen-demo',\n  template: `\n    <div>\n      <h3>\n        Full Screen\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/fullscreen.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material fullscreen\"\n        style=\"top: 52px\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"0\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [scrollbarH]=\"true\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"Id\" [width]=\"80\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Name\" [width]=\"300\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"City\" [width]=\"300\" prop=\"address.city\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"State\" [width]=\"300\" prop=\"address.state\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class FullScreenComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'inline-edit-demo',\n  template: `\n    <div>\n      <h3>\n        Inline Editing\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/inline.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        #mydatatable\n        class=\"material\"\n        [headerHeight]=\"50\"\n        [limit]=\"5\"\n        [columnMode]=\"ColumnMode.force\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"Name\">\n          <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\" let-row=\"row\">\n            <span\n              title=\"Double click to edit\"\n              (dblclick)=\"editing[rowIndex + '-name'] = true\"\n              *ngIf=\"!editing[rowIndex + '-name']\"\n            >\n              {{ value }}\n            </span>\n            <input\n              autofocus\n              (blur)=\"updateValue($event, 'name', rowIndex)\"\n              *ngIf=\"editing[rowIndex + '-name']\"\n              type=\"text\"\n              [value]=\"value\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\">\n          <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-row=\"row\" let-value=\"value\">\n            <span\n              title=\"Double click to edit\"\n              (dblclick)=\"editing[rowIndex + '-gender'] = true\"\n              *ngIf=\"!editing[rowIndex + '-gender']\"\n            >\n              {{ value }}\n            </span>\n            <select\n              *ngIf=\"editing[rowIndex + '-gender']\"\n              (blur)=\"editing[rowIndex + '-gender'] = false\"\n              (change)=\"updateValue($event, 'gender', rowIndex)\"\n              [value]=\"value\"\n            >\n              <option value=\"male\">Male</option>\n              <option value=\"female\">Female</option>\n            </select>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\">\n          <ng-template ngx-datatable-cell-template let-value=\"value\">\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class InlineEditComponent {\n  editing = {};\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  updateValue(event, cell, rowIndex) {\n    console.log('inline editing rowIndex', rowIndex);\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\n  }\n}\n","import { Component, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'live-data-demo',\n  template: `\n    <div>\n      <h3>\n        Live Data Demo\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/live.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n        <small>\n          <a href=\"javascript:void(0)\" (click)=\"start()\">Start</a> |\n          <a href=\"javascript:void(0)\" (click)=\"stop()\">Stop</a> |\n          <a href=\"javascript:void(0)\" (click)=\"add()\">Add</a> |\n          <a href=\"javascript:void(0)\" (click)=\"remove()\">Remove</a>\n        </small>\n      </h3>\n      <ngx-datatable\n        #mydatatable\n        class=\"material\"\n        [headerHeight]=\"50\"\n        [limit]=\"5\"\n        [columnMode]=\"ColumnMode.force\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [trackByProp]=\"'updated'\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class LiveDataComponent {\n  @ViewChild('mydatatable') mydatatable: any;\n\n  count = 50;\n  rows: any[] = [];\n  active = true;\n  temp: any[] = [];\n  cols: any = ['name', 'gender', 'company'];\n\n  ColumnMode = ColumnMode;\n\n  constructor(private cd: ChangeDetectorRef) {\n    this.fetch(data => {\n      this.rows = data.map(d => {\n        d.updated = Date.now().toString();\n        return d;\n      });\n\n      this.temp = [...this.rows];\n    });\n\n    this.start();\n  }\n\n  randomNum(start: number, end: number): number {\n    return Math.floor(Math.random() * end) + start;\n  }\n\n  start(): void {\n    if (!this.active) {\n      return;\n    }\n\n    setTimeout(this.updateRandom.bind(this), 50);\n  }\n\n  stop(): void {\n    this.active = false;\n  }\n\n  add() {\n    this.rows.splice(0, 0, this.temp[this.count++]);\n  }\n\n  remove() {\n    this.rows.splice(0, this.rows.length);\n  }\n\n  updateRandom() {\n    const rowNum = this.randomNum(0, 5);\n    const cellNum = this.randomNum(0, 3);\n    const newRow = this.randomNum(0, 100);\n    const prop = this.cols[cellNum];\n    const rows = this.rows;\n\n    if (rows.length) {\n      const row = rows[rowNum];\n      row[prop] = rows[newRow][prop];\n      row.updated = Date.now().toString();\n    }\n\n    this.rows = [...this.rows];\n\n    // this.cd.markForCheck();\n    // this.mydatatable.update();\n    this.start();\n  }\n\n  fetch(cb: any): void {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'multiple-tables-demo',\n  template: `\n    <div>\n      <h3>\n        Multiple Tables\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/multiple.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows1\"\n        [columns]=\"columns1\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"0\"\n        [rowHeight]=\"100\"\n      >\n      </ngx-datatable>\n      <br />\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows2\"\n        [columns]=\"columns2\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class MultipleTablesComponent {\n  columns1 = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company' }];\n\n  columns2 = [{ prop: 'name', name: 'Name' }, { name: 'Gender' }];\n\n  rows1 = [\n    { name: 'Larry', gender: 'Male', company: 'Cisco' },\n    { name: 'Lauren', gender: 'Female', company: 'HP' }\n  ];\n\n  rows2 = [\n    { name: 'Callie', gender: 'Female' },\n    { name: 'Maggie', gender: 'Female' }\n  ];\n\n  ColumnMode = ColumnMode;\n}\n","import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'responsive-demo',\n  styles: [\n    `\n      @media screen and (max-width: 800px) {\n        .desktop-hidden {\n          display: initial;\n        }\n        .mobile-hidden {\n          display: none;\n        }\n      }\n      @media screen and (min-width: 800px) {\n        .desktop-hidden {\n          display: none;\n        }\n        .mobile-hidden {\n          display: initial;\n        }\n      }\n    `\n  ],\n  template: `\n    <div>\n      <h3>\n        Responsive Demo\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/responsive.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        #myTable\n        class=\"material expandable\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [rows]=\"rows\"\n        (page)=\"onPage($event)\"\n      >\n        <!-- Row Detail Template -->\n        <ngx-datatable-row-detail [rowHeight]=\"50\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\n            <div style=\"padding-left:60px; font-size:14px\">\n              <div>{{ row.gender }}, {{ row.age }}</div>\n            </div>\n          </ng-template>\n        </ngx-datatable-row-detail>\n\n        <!-- Column Templates -->\n        <ngx-datatable-column\n          [width]=\"50\"\n          [resizeable]=\"false\"\n          [sortable]=\"false\"\n          [draggable]=\"false\"\n          [canAutoResize]=\"false\"\n        >\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\n            <a\n              href=\"#\"\n              [class.datatable-icon-right]=\"!expanded\"\n              [class.datatable-icon-down]=\"expanded\"\n              title=\"Expand/Collapse Row\"\n              (click)=\"toggleExpandRow(row)\"\n              class=\"desktop-hidden\"\n            >\n            </a>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Name\" [flexGrow]=\"3\" [minWidth]=\"200\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Gender\" [flexGrow]=\"1\">\n          <ng-template let-column=\"column\" let-sort=\"sortFn\" ngx-datatable-header-template>\n            <span class=\"mobile-hidden\">{{ column.name }}</span>\n          </ng-template>\n\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            <span class=\"mobile-hidden\">{{ value }}</span>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Age\" [flexGrow]=\"1\">\n          <ng-template let-column=\"column\" let-sort=\"sortFn\" ngx-datatable-header-template>\n            <span class=\"mobile-hidden\">{{ column.name }}</span>\n          </ng-template>\n\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            <span class=\"mobile-hidden\">{{ value }}</span>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n\n    <div style=\"margin: 50px;\">\n      This demo combines the features used in the <i>Row Detail</i> Rows demo, <i>Flex</i> Column demo, and the\n      <i>Inline</i> Templates demo. When your browser is at 800px, the gender and age columns will be hidden and will\n      appear in the row detail view.\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class ResponsiveComponent {\n  @ViewChild('myTable') table: any;\n\n  rows: any[] = [];\n  expanded: any = {};\n  timeout: any;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  onPage(event) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      console.log('paged!', event);\n    }, 100);\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n}\n","import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'row-details-demo',\n  template: `\n    <div>\n      <h3>\n        Row Detail Demo\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/row-detail.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n        <small>\n          <a href=\"javascript:void(0)\" (click)=\"table.rowDetail.expandAllRows()\">Expand All</a>\n          |\n          <a href=\"javascript:void(0)\" (click)=\"table.rowDetail.collapseAllRows()\">Collapse All</a>\n        </small>\n      </h3>\n      <ngx-datatable\n        #myTable\n        class=\"material expandable\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [rows]=\"rows\"\n        (page)=\"onPage($event)\"\n      >\n        <!-- Row Detail Template -->\n        <ngx-datatable-row-detail [rowHeight]=\"100\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\n            <div style=\"padding-left:35px;\">\n              <div><strong>Address</strong></div>\n              <div>{{ row.address.city }}, {{ row.address.state }}</div>\n            </div>\n          </ng-template>\n        </ngx-datatable-row-detail>\n\n        <!-- Column Templates -->\n        <ngx-datatable-column\n          [width]=\"50\"\n          [resizeable]=\"false\"\n          [sortable]=\"false\"\n          [draggable]=\"false\"\n          [canAutoResize]=\"false\"\n        >\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\n            <a\n              href=\"javascript:void(0)\"\n              [class.datatable-icon-right]=\"!expanded\"\n              [class.datatable-icon-down]=\"expanded\"\n              title=\"Expand/Collapse Row\"\n              (click)=\"toggleExpandRow(row)\"\n            >\n            </a>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Index\" [width]=\"80\">\n          <ng-template let-rowIndex=\"rowIndex\" let-row=\"row\" ngx-datatable-cell-template>\n            <strong>{{ rowIndex }}</strong>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Expanded\" [width]=\"80\">\n          <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\n            <strong>{{ expanded === 1 }}</strong>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Name\" [width]=\"200\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            <strong>{{ value }}</strong>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [width]=\"300\">\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            <i [innerHTML]=\"row['name']\"></i> and <i>{{ value }}</i>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None\n})\nexport class RowDetailsComponent {\n  @ViewChild('myTable') table: any;\n\n  rows: any[] = [];\n  expanded: any = {};\n  timeout: any;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  onPage(event) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      console.log('paged!', event);\n    }, 100);\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n}\n","import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\nimport { NgStyle } from '@angular/common';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'row-grouping-demo',\n  template: `\n    <div>\n      <h3>\n        Row Grouping\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/row-grouping.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        #myTable\n        class=\"material expandable\"\n        [rows]=\"rows\"\n        [groupRowsBy]=\"'age'\"\n        [columnMode]=\"ColumnMode.force\"\n        [scrollbarH]=\"true\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"40\"\n        [limit]=\"4\"\n        [groupExpansionDefault]=\"true\"\n      >\n        <!-- Group Header Template -->\n        <ngx-datatable-group-header [rowHeight]=\"50\" #myGroupHeader (toggle)=\"onDetailToggle($event)\">\n          <ng-template let-group=\"group\" let-expanded=\"expanded\" ngx-datatable-group-header-template>\n            <div style=\"padding-left:5px;\">\n              <a\n                href=\"#\"\n                [class.datatable-icon-right]=\"!expanded\"\n                [class.datatable-icon-down]=\"expanded\"\n                title=\"Expand/Collapse Group\"\n                (click)=\"toggleExpandGroup(group)\"\n              >\n                <b>Age: {{ group.value[0].age }}</b>\n              </a>\n            </div>\n          </ng-template>\n        </ngx-datatable-group-header>\n\n        <!-- Row Column Template -->\n        <ngx-datatable-column name=\"Exp. Pay.\" prop=\"\" editable=\"true\" frozenLeft=\"True\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n            let-group=\"group\"\n          >\n            <label for=\"ep1{{ rowIndex }}\" class=\"datatable-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"ep1{{ rowIndex }}\"\n                name=\"{{ rowIndex }}\"\n                value=\"0\"\n                class=\"expectedpayment\"\n                (change)=\"checkGroup($event, row, rowIndex, group)\"\n                [checked]=\"row.exppayyes === 1\"\n              />\n            </label>\n            <label for=\"ep2{{ rowIndex }}\" class=\"datatable-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"ep2{{ rowIndex }}\"\n                name=\"{{ rowIndex }}\"\n                value=\"1\"\n                class=\"expectedpayment2\"\n                (change)=\"checkGroup($event, row, rowIndex, group)\"\n                [checked]=\"row.exppayno === 1\"\n              />\n            </label>\n            <label for=\"ep3{{ rowIndex }}\" class=\"datatable-checkbox\">\n              <input\n                type=\"checkbox\"\n                id=\"ep3{{ rowIndex }}\"\n                name=\"{{ rowIndex }}\"\n                value=\"2\"\n                class=\"expectedpayment3\"\n                (change)=\"checkGroup($event, row, rowIndex, group)\"\n                [checked]=\"row.exppaypending === 1\"\n              />\n            </label>\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Source\" prop=\"source\" editable=\"false\" frozenLeft=\"True\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Name\" prop=\"name\" editable=\"true\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" prop=\"gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\" prop=\"age\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Comment\" prop=\"comment\">\n          <ng-template\n            ngx-datatable-cell-template\n            let-rowIndex=\"rowIndex\"\n            let-value=\"value\"\n            let-row=\"row\"\n            let-group=\"group\"\n            let-rowHeight=\"rowHeight\"\n          >\n            <input\n              autofocus\n              (blur)=\"updateValue($event, 'comment', rowIndex)\"\n              type=\"text\"\n              name=\"comment\"\n              [value]=\"value\"\n            />\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class RowGroupingComponent {\n  @ViewChild('myTable') table: any;\n\n  funder = [];\n  calculated = [];\n  pending = [];\n  groups = [];\n\n  editing = {};\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/forRowGrouping.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  getGroupRowHeight(group, rowHeight) {\n    let style = {};\n\n    style = {\n      height: group.length * 40 + 'px',\n      width: '100%'\n    };\n\n    return style;\n  }\n\n  checkGroup(event, row, rowIndex, group) {\n    let groupStatus = 'Pending';\n    let expectedPaymentDealtWith = true;\n\n    row.exppayyes = 0;\n    row.exppayno = 0;\n    row.exppaypending = 0;\n\n    if (event.target.checked) {\n      if (event.target.value === '0') {\n        // expected payment yes selected\n        row.exppayyes = 1;\n      } else if (event.target.value === '1') {\n        // expected payment yes selected\n        row.exppayno = 1;\n      } else if (event.target.value === '2') {\n        // expected payment yes selected\n        row.exppaypending = 1;\n      }\n    }\n\n    if (group.length === 2) {\n      // There are only 2 lines in a group\n      // tslint:disable-next-line:max-line-length\n      if (\n        ['Calculated', 'Funder'].indexOf(group[0].source) > -1 &&\n        ['Calculated', 'Funder'].indexOf(group[1].source) > -1\n      ) {\n        // Sources are funder and calculated\n        // tslint:disable-next-line:max-line-length\n        if (group[0].startdate === group[1].startdate && group[0].enddate === group[1].enddate) {\n          // Start dates and end dates match\n          for (let index = 0; index < group.length; index++) {\n            if (group[index].source !== row.source) {\n              if (event.target.value === '0') {\n                // expected payment yes selected\n                group[index].exppayyes = 0;\n                group[index].exppaypending = 0;\n                group[index].exppayno = 1;\n              }\n            }\n\n            if (group[index].exppayyes === 0 && group[index].exppayno === 0 && group[index].exppaypending === 0) {\n              expectedPaymentDealtWith = false;\n            }\n            console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\n          }\n        }\n      }\n    } else {\n      for (let index = 0; index < group.length; index++) {\n        if (group[index].exppayyes === 0 && group[index].exppayno === 0 && group[index].exppaypending === 0) {\n          expectedPaymentDealtWith = false;\n        }\n        console.log('expectedPaymentDealtWith', expectedPaymentDealtWith);\n      }\n    }\n\n    // check if there is a pending selected payment or a row that does not have any expected payment selected\n    if (\n      group.filter(rowFilter => rowFilter.exppaypending === 1).length === 0 &&\n      group.filter(rowFilter => rowFilter.exppaypending === 0 && rowFilter.exppayyes === 0 && rowFilter.exppayno === 0)\n        .length === 0\n    ) {\n      console.log('expected payment dealt with');\n\n      // check if can set the group status\n      const numberOfExpPayYes = group.filter(rowFilter => rowFilter.exppayyes === 1).length;\n      const numberOfSourceFunder = group.filter(rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Funder')\n        .length;\n      const numberOfSourceCalculated = group.filter(\n        rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Calculated'\n      ).length;\n      const numberOfSourceManual = group.filter(rowFilter => rowFilter.exppayyes === 1 && rowFilter.source === 'Manual')\n        .length;\n\n      console.log('numberOfExpPayYes', numberOfExpPayYes);\n      console.log('numberOfSourceFunder', numberOfSourceFunder);\n      console.log('numberOfSourceCalculated', numberOfSourceCalculated);\n      console.log('numberOfSourceManual', numberOfSourceManual);\n\n      if (numberOfExpPayYes > 0) {\n        if (numberOfExpPayYes === numberOfSourceFunder) {\n          groupStatus = 'Funder Selected';\n        } else if (numberOfExpPayYes === numberOfSourceCalculated) {\n          groupStatus = 'Calculated Selected';\n        } else if (numberOfExpPayYes === numberOfSourceManual) {\n          groupStatus = 'Manual Selected';\n        } else {\n          groupStatus = 'Hybrid Selected';\n        }\n      }\n    }\n\n    group[0].groupstatus = groupStatus;\n  }\n\n  updateValue(event, cell, rowIndex) {\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n  }\n\n  toggleExpandGroup(group) {\n    console.log('Toggled Expand Group!', group);\n    this.table.groupHeader.toggleExpandGroup(group);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'rx-demo',\n  template: `\n    <div>\n      <h3>\n        RXjs Data\n        <small>\n          <a href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/rx.component.ts\" target=\"_blank\">\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material striped\"\n        [rows]=\"rows | async\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class RxDemoComponent {\n  rows: Observable<any[]>;\n\n  columns = [{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.rows = Observable.create(subscriber => {\n      this.fetch(data => {\n        subscriber.next(data.splice(0, 15));\n        subscriber.next(data.splice(15, 30));\n        subscriber.complete();\n      });\n    });\n\n    // Rx.DOM.ajax({ url: '/products', responseType: 'json'}).subscribe()\n    // this.rows = Observable.from(rows);\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'horz-vert-scrolling-demo',\n  template: `\n    <div>\n      <h3>\n        Horizontal and Vertical Scrolling\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/scrolling.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        columnMode=\"force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"0\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [scrollbarH]=\"true\"\n      >\n        <ngx-datatable-column name=\"Name\" [width]=\"300\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"City\" [width]=\"300\" prop=\"address.city\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"State\" [width]=\"300\" prop=\"address.state\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class HorzVertScrolling {\n  rows = [];\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'tabs-demo',\n  template: `\n    <div>\n      <h3>\n        Hidden By Default\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/tabs.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n\n      <div style=\"width:75%;margin:0 auto\">\n        <div>\n          <button type=\"button\" (click)=\"tab1 = true; tab2 = false; tab3 = false\">Nothing</button>\n          <button type=\"button\" (click)=\"tab2 = true; tab1 = false; tab3 = false\">Hidden</button>\n          <button type=\"button\" (click)=\"tab3 = true; tab1 = false; tab2 = false\">NgIf</button>\n        </div>\n\n        <div [hidden]=\"!tab1\">\n          <p>Click a button to toggle table visibilities</p>\n        </div>\n\n        <div [hidden]=\"!tab2\">\n          <h4>hidden Table</h4>\n          <ngx-datatable\n            class=\"material\"\n            [rows]=\"rows\"\n            [columnMode]=\"ColumnMode.force\"\n            [headerHeight]=\"50\"\n            [footerHeight]=\"50\"\n            [rowHeight]=\"50\"\n            [scrollbarV]=\"true\"\n          >\n            <ngx-datatable-column name=\"Name\" [width]=\"200\"></ngx-datatable-column>\n            <ngx-datatable-column name=\"Gender\" [width]=\"300\"></ngx-datatable-column>\n            <ngx-datatable-column name=\"Age\" [width]=\"80\"></ngx-datatable-column>\n          </ngx-datatable>\n        </div>\n\n        <div *ngIf=\"tab3\">\n          <h4>ngIf Table</h4>\n          <ngx-datatable\n            class=\"material\"\n            [rows]=\"rows\"\n            [columnMode]=\"ColumnMode.force\"\n            [headerHeight]=\"50\"\n            [footerHeight]=\"50\"\n            [rowHeight]=\"50\"\n            [scrollbarV]=\"true\"\n          >\n            <ngx-datatable-column name=\"Name\" [width]=\"200\"></ngx-datatable-column>\n            <ngx-datatable-column name=\"Gender\" [width]=\"300\"></ngx-datatable-column>\n            <ngx-datatable-column name=\"Age\" [width]=\"80\"></ngx-datatable-column>\n          </ngx-datatable>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class TabsDemoComponent {\n  rows = [];\n\n  tab1 = true;\n  tab2 = false;\n  tab3 = false;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'virtual-scroll-demo',\n  template: `\n    <div>\n      <h3>\n        Virtual Scrolling with 10k Rows\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/basic/virtual.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"getRowHeight\"\n        [scrollbarV]=\"true\"\n        (page)=\"onPage($event)\"\n      >\n        <ngx-datatable-column name=\"Name\" [width]=\"300\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            <strong>{{ value }}</strong>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [width]=\"300\">\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            <i [innerHTML]=\"row['name']\"></i> and <i>{{ value }}</i>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Row Height\" prop=\"height\" [width]=\"80\"> </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class VirtualScrollComponent {\n  rows;\n  expanded = {};\n  timeout: any;\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  onPage(event) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      console.log('paged!', event);\n    }, 100);\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      const rows = JSON.parse(req.response);\n\n      for (const row of rows) {\n        row.height = Math.floor(Math.random() * 80) + 50;\n      }\n\n      cb(rows);\n    };\n\n    req.send();\n  }\n\n  getRowHeight(row) {\n    return row.height;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'column-flex-demo',\n  template: `\n    <div>\n      <h3>\n        Flex Column Width Distribution\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-flex.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [columnMode]=\"ColumnMode.flex\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"Name\" [flexGrow]=\"3\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [flexGrow]=\"1\">\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\" [flexGrow]=\"1\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ColumnFlexComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'column-force-demo',\n  template: `\n    <div>\n      <h3>\n        Force Fill Column Width Distribution\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-force.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"Name\" [width]=\"100\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [width]=\"100\">\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\" [width]=\"300\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ColumnForceComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'column-reorder-demo',\n  styles: [\n    `\n      .icon {\n        position: absolute;\n      }\n      .datatable-icon-down {\n        top: 0px;\n      }\n      .datatable-icon-up {\n        top: 40px;\n      }\n      .dragFromLeft .icon {\n        left: -13px;\n      }\n    `\n  ],\n  template: `\n    <div>\n      <h3>\n        Reorder Column\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-reorder.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [loadingIndicator]=\"loadingIndicator\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [reorderable]=\"reorderable\"\n        [swapColumns]=\"swapColumns\"\n        [targetMarkerTemplate]=\"targetMarkerTemplate\"\n      >\n      </ngx-datatable>\n      <ng-template #targetMarkerTemplate let-class=\"class\">\n        <div [ngClass]=\"class\">\n          <div class=\"icon datatable-icon-down\"></div>\n          <div class=\"icon datatable-icon-up\"></div>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class ColumnReorderComponent {\n  rows = [];\n  loadingIndicator = true;\n  reorderable = true;\n  swapColumns = false;\n\n  columns = [{ prop: 'name' }, { name: 'Gender' }, { name: 'Company', sortable: false }];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n      setTimeout(() => {\n        this.loadingIndicator = false;\n      }, 1500);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'column-standard-demo',\n  template: `\n    <div>\n      <h3>\n        Fixed Column Widths\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-standard.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.standard\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n      >\n        <ngx-datatable-column name=\"Name\" [width]=\"300\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [width]=\"300\">\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\" [width]=\"300\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ColumnStandardComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'column-toggle-demo',\n  template: `\n    <div>\n      <h3>\n        Column Toggling\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/column-toggle.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <ngx-datatable\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n        >\n          <ngx-datatable-column *ngFor=\"let col of columns\" [name]=\"col.name\"> </ngx-datatable-column>\n        </ngx-datatable>\n      </div>\n      <div class=\"selected-column\">\n        <h4>Available Columns</h4>\n        <ul>\n          <li *ngFor=\"let col of allColumns\">\n            <input type=\"checkbox\" [id]=\"col.name\" (click)=\"toggle(col)\" [checked]=\"isChecked(col)\" />\n            <label [attr.for]=\"col.name\">{{ col.name }}</label>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class ColumnToggleComponent {\n  rows = [\n    {\n      name: 'Claudine Neal',\n      gender: 'female',\n      company: 'Sealoud'\n    },\n    {\n      name: 'Beryl Rice',\n      gender: 'female',\n      company: 'Velity'\n    }\n  ];\n\n  columns = [{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }];\n\n  allColumns = [{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }];\n\n  ColumnMode = ColumnMode;\n\n  toggle(col) {\n    const isChecked = this.isChecked(col);\n\n    if (isChecked) {\n      this.columns = this.columns.filter(c => {\n        return c.name !== col.name;\n      });\n    } else {\n      this.columns = [...this.columns, col];\n    }\n  }\n\n  isChecked(col) {\n    return (\n      this.columns.find(c => {\n        return c.name === col.name;\n      }) !== undefined\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'column-pinning-demo',\n  template: `\n    <div>\n      <h3>\n        Column Pinning\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/columns/pinning.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [scrollbarH]=\"true\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column name=\"Name\" [width]=\"300\" [frozenLeft]=\"true\"> </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"> </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\"> </ngx-datatable-column>\n        <ngx-datatable-column name=\"City\" [width]=\"150\" prop=\"address.city\"> </ngx-datatable-column>\n        <ngx-datatable-column name=\"State\" [width]=\"300\" prop=\"address.state\" [frozenRight]=\"true\">\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ColumnPinningComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { PagedData } from './model/paged-data';\nimport { CorporateEmployee } from './model/corporate-employee';\nimport { Page } from './model/page';\n\nimport companyData from 'src/assets/data/company.json';\n\n/**\n * A server used to mock a paged data result from a server\n */\n@Injectable()\nexport class MockServerResultsService {\n  /**\n   * A method that mocks a paged server response\n   * @param page The selected page\n   * @returns {any} An observable containing the employee data\n   */\n  public getResults(page: Page): Observable<PagedData<CorporateEmployee>> {\n    return of(companyData)\n      .pipe(map(d => this.getPagedData(page)))\n      .pipe(delay(1000 * Math.random()));\n  }\n\n  /**\n   * Package companyData into a PagedData object based on the selected Page\n   * @param page The page data used to get the selected data from companyData\n   * @returns {PagedData<CorporateEmployee>} An array of the selected data and page\n   */\n  private getPagedData(page: Page): PagedData<CorporateEmployee> {\n    const pagedData = new PagedData<CorporateEmployee>();\n    page.totalElements = companyData.length;\n    page.totalPages = page.totalElements / page.size;\n    const start = page.pageNumber * page.size;\n    const end = Math.min(start + page.size, page.totalElements);\n    for (let i = start; i < end; i++) {\n      const jsonObj = companyData[i];\n      const employee = new CorporateEmployee(jsonObj.name, jsonObj.gender, jsonObj.company, jsonObj.age);\n      pagedData.data.push(employee);\n    }\n    pagedData.page = page;\n    return pagedData;\n  }\n}\n","/**\n * A model for an individual corporate employee\n */\nexport class CorporateEmployee {\n  name: string;\n  gender: string;\n  company: string;\n  age: number;\n\n  constructor(name: string, gender: string, company: string, age: number) {\n    this.name = name;\n    this.gender = gender;\n    this.company = company;\n    this.age = age;\n  }\n}\n","/**\n * An object used to get page information from the server\n */\nexport class Page {\n  // The number of elements in the page\n  size: number = 0;\n  // The total number of elements\n  totalElements: number = 0;\n  // The total number of pages\n  totalPages: number = 0;\n  // The current page number\n  pageNumber: number = 0;\n}\n","import { Page } from './page';\n\n/**\n * An array of data with an associated page object used for paging\n */\nexport class PagedData<T> {\n  data = new Array<T>();\n  page = new Page();\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'client-paging-demo',\n  template: `\n    <div>\n      <h3>\n        Client-side Paging\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/paging-client.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }]\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [limit]=\"10\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ClientPagingComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { MockServerResultsService } from './mock-server-results-service';\nimport { CorporateEmployee } from './model/corporate-employee';\nimport { Page } from './model/page';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'paging-scrolling-novirtualization-demo',\n  providers: [MockServerResultsService],\n  template: `\n    <div>\n      <h3>\n        Server-side Paging\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/paging-scrolling-novirtualization.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }]\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [scrollbarV]=\"true\"\n        [virtualization]=\"false\"\n        [externalPaging]=\"true\"\n        [count]=\"page.totalElements\"\n        [offset]=\"page.pageNumber\"\n        [limit]=\"page.size\"\n        (page)=\"setPage($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class PagingScrollingNoVirtualizationComponent {\n  page = new Page();\n  rows = new Array<CorporateEmployee>();\n\n  ColumnMode = ColumnMode;\n\n  constructor(private serverResultsService: MockServerResultsService) {\n    this.page.pageNumber = 0;\n    this.page.size = 20;\n  }\n\n  ngOnInit() {\n    this.setPage({ offset: 0 });\n  }\n\n  /**\n   * Populate the table with new data based on the page number\n   * @param page The page to select\n   */\n  setPage(pageInfo) {\n    this.page.pageNumber = pageInfo.offset;\n    this.serverResultsService.getResults(this.page).subscribe(pagedData => {\n      this.page = pagedData.page;\n      this.rows = pagedData.data;\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { MockServerResultsService } from './mock-server-results-service';\nimport { CorporateEmployee } from './model/corporate-employee';\nimport { Page } from './model/page';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'server-paging-demo',\n  providers: [MockServerResultsService],\n  template: `\n    <div>\n      <h3>\n        Server-side Paging\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/paging-server.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }]\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [externalPaging]=\"true\"\n        [count]=\"page.totalElements\"\n        [offset]=\"page.pageNumber\"\n        [limit]=\"page.size\"\n        (page)=\"setPage($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ServerPagingComponent {\n  page = new Page();\n  rows = new Array<CorporateEmployee>();\n\n  ColumnMode = ColumnMode;\n\n  constructor(private serverResultsService: MockServerResultsService) {\n    this.page.pageNumber = 0;\n    this.page.size = 20;\n  }\n\n  ngOnInit() {\n    this.setPage({ offset: 0 });\n  }\n\n  /**\n   * Populate the table with new data based on the page number\n   * @param page The page to select\n   */\n  setPage(pageInfo) {\n    this.page.pageNumber = pageInfo.offset;\n    this.serverResultsService.getResults(this.page).subscribe(pagedData => {\n      this.page = pagedData.page;\n      this.rows = pagedData.data;\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { MockServerResultsService } from './mock-server-results-service';\nimport { CorporateEmployee } from './model/corporate-employee';\nimport { Page } from './model/page';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\nimport { delay } from 'rxjs/operators';\n\ninterface PageInfo {\n  offset: number;\n  pageSize: number;\n  limit: number;\n  count: number;\n}\n\n@Component({\n  selector: 'virtual-paging-demo',\n  providers: [MockServerResultsService],\n  template: `\n    <div>\n      <h3>\n        Virtual Server-side Paging\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/paging-virtual.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"[\n          { name: 'Name', sortable: false },\n          { name: 'Gender', sortable: false },\n          { name: 'Company', sortable: false }\n        ]\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [loadingIndicator]=\"isLoading > 0\"\n        [scrollbarV]=\"true\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [externalPaging]=\"true\"\n        [externalSorting]=\"true\"\n        [count]=\"totalElements\"\n        [offset]=\"pageNumber\"\n        (page)=\"setPage($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class VirtualPagingComponent {\n  totalElements: number;\n  pageNumber: number;\n  rows: CorporateEmployee[];\n  cache: any = {};\n\n  ColumnMode = ColumnMode;\n\n  isLoading = 0;\n\n  constructor(private serverResultsService: MockServerResultsService) {\n    this.pageNumber = 0;\n  }\n\n  setPage(pageInfo: PageInfo) {\n    // Current page number is determined by last call to setPage\n    // This is the page the UI is currently displaying\n    // The current page is based on the UI pagesize and scroll position\n    // Pagesize can change depending on browser size\n    this.pageNumber = pageInfo.offset;\n\n    // Calculate row offset in the UI using pageInfo\n    // This is the scroll position in rows\n    const rowOffset = pageInfo.offset * pageInfo.pageSize;\n\n    // When calling the server, we keep page size fixed\n    // This should be the max UI pagesize or larger\n    // This is not necessary but helps simplify caching since the UI page size can change\n    const page = new Page();\n    page.size = 20;\n    page.pageNumber = Math.floor(rowOffset / page.size);\n\n    // We keep a index of server loaded pages so we don't load same data twice\n    // This is based on the server page not the UI\n    if (this.cache[page.pageNumber]) return;\n    this.cache[page.pageNumber] = true;\n\n    // Counter of pending API calls\n    this.isLoading++;\n\n    this.serverResultsService.getResults(page).subscribe(pagedData => {\n      // Update total count\n      this.totalElements = pagedData.page.totalElements;\n\n      // Create array to store data if missing\n      // The array should have the correct number of with \"holes\" for missing data\n      if (!this.rows) {\n        this.rows = new Array<CorporateEmployee>(this.totalElements || 0);\n      }\n\n      // Calc starting row offset\n      // This is the position to insert the new data\n      const start = pagedData.page.pageNumber * pagedData.page.size;\n\n      // Copy existing data\n      const rows = [...this.rows];\n\n      // Insert new rows into correct position\n      rows.splice(start, pagedData.page.size, ...pagedData.data);\n\n      // Set rows to our new rows for display\n      this.rows = rows;\n\n      // Decrement the counter of pending API calls\n      this.isLoading--;\n    });\n  }\n}\n","import { Component, ElementRef, Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { delay, map } from 'rxjs/operators';\nimport { CorporateEmployee } from './model/corporate-employee';\n\nimport data from 'src/assets/data/company.json';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\nconst companyData = data as any[];\n\nclass PagedData<T> {\n  data: T[];\n}\n\n/**\n * A server used to mock a paged data result from a server\n */\n@Injectable()\nexport class MockServerResultsService {\n  public getResults(offset: number, limit: number): Observable<PagedData<CorporateEmployee>> {\n    return of(companyData.slice(offset, offset + limit)).pipe(\n      delay(new Date(Date.now() + 500)),\n      map(d => ({ data: d }))\n    );\n  }\n}\n\n@Component({\n  selector: 'server-scrolling-demo',\n  providers: [MockServerResultsService],\n  template: `\n    <div>\n      <h3>\n        Server-side Scrolling\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/paging/scrolling-server.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material server-scrolling-demo\"\n        [rows]=\"rows\"\n        [columns]=\"[{ name: 'Name' }, { name: 'Gender' }, { name: 'Company' }]\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"headerHeight\"\n        [rowHeight]=\"rowHeight\"\n        [loadingIndicator]=\"isLoading\"\n        [scrollbarV]=\"true\"\n        (scroll)=\"onScroll($event.offsetY)\"\n      ></ngx-datatable>\n    </div>\n  `,\n  styleUrls: ['./scrolling-server.component.css']\n})\nexport class ServerScrollingComponent {\n  readonly headerHeight = 50;\n  readonly rowHeight = 50;\n  readonly pageLimit = 10;\n\n  rows: CorporateEmployee[] = [];\n  isLoading: boolean;\n\n  ColumnMode = ColumnMode;\n\n  constructor(private serverResultsService: MockServerResultsService, private el: ElementRef) {}\n\n  ngOnInit() {\n    this.onScroll(0);\n  }\n\n  onScroll(offsetY: number) {\n    // total height of all rows in the viewport\n    const viewHeight = this.el.nativeElement.getBoundingClientRect().height - this.headerHeight;\n\n    // check if we scrolled to the end of the viewport\n    if (!this.isLoading && offsetY + viewHeight >= this.rows.length * this.rowHeight) {\n      // total number of results to load\n      let limit = this.pageLimit;\n\n      // check if we haven't fetched any results yet\n      if (this.rows.length === 0) {\n        // calculate the number of rows that fit within viewport\n        const pageSize = Math.ceil(viewHeight / this.rowHeight);\n\n        // change the limit to pageSize such that we fill the first page entirely\n        // (otherwise, we won't be able to scroll past it)\n        limit = Math.max(pageSize, this.pageLimit);\n      }\n      this.loadPage(limit);\n    }\n  }\n\n  private loadPage(limit: number) {\n    // set the loading flag, which serves two purposes:\n    // 1) it prevents the same page from being loaded twice\n    // 2) it enables display of the loading indicator\n    this.isLoading = true;\n\n    this.serverResultsService.getResults(this.rows.length, limit).subscribe(results => {\n      const rows = [...this.rows, ...results.data];\n      this.rows = rows;\n      this.isLoading = false;\n    });\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'cell-selection-demo',\n  template: `\n    <div>\n      <h3>\n        Cell Selection\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-cell.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material selection-cell\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.force\"\n        [columns]=\"columns\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [selected]=\"selected\"\n        [selectionType]=\"SelectionType.cell\"\n        (select)=\"onSelect($event)\"\n        (activate)=\"onActivate($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class CellSelectionComponent {\n  rows: any[] = [];\n  selected: any[] = [];\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect(event) {\n    console.log('Event: select', event, this.selected);\n  }\n\n  onActivate(event) {\n    console.log('Event: activate', event);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'chkbox-selection-template-demo',\n  template: `\n    <div>\n      <h3>\n        Custom Checkbox Selection\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-chkbox-template.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n        <small>\n          <a href=\"javascript:void(0)\" (click)=\"add()\">Add</a> |\n          <a href=\"javascript:void(0)\" (click)=\"update()\">Update</a> |\n          <a href=\"javascript:void(0)\" (click)=\"remove()\">Remove</a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <ngx-datatable\n          style=\"width: 90%\"\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n          [limit]=\"5\"\n          [selected]=\"selected\"\n          [selectionType]=\"SelectionType.checkbox\"\n          (activate)=\"onActivate($event)\"\n          (select)=\"onSelect($event)\"\n        >\n          <ngx-datatable-column\n            [width]=\"30\"\n            [sortable]=\"false\"\n            [canAutoResize]=\"false\"\n            [draggable]=\"false\"\n            [resizeable]=\"false\"\n          >\n            <ng-template\n              ngx-datatable-header-template\n              let-value=\"value\"\n              let-allRowsSelected=\"allRowsSelected\"\n              let-selectFn=\"selectFn\"\n            >\n              <input type=\"checkbox\" [checked]=\"allRowsSelected\" (change)=\"selectFn(!allRowsSelected)\" />\n            </ng-template>\n            <ng-template\n              ngx-datatable-cell-template\n              let-value=\"value\"\n              let-isSelected=\"isSelected\"\n              let-onCheckboxChangeFn=\"onCheckboxChangeFn\"\n            >\n              <input type=\"checkbox\" [checked]=\"isSelected\" (change)=\"onCheckboxChangeFn($event)\" />\n            </ng-template>\n          </ngx-datatable-column>\n          <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n          <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n          <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\n        </ngx-datatable>\n      </div>\n\n      <div class=\"selected-column\">\n        <h4>\n          Selections <small>({{ selected?.length }})</small>\n        </h4>\n        <ul>\n          <li *ngFor=\"let sel of selected\">\n            {{ sel.name }}\n          </li>\n          <li *ngIf=\"!selected?.length\">No Selections</li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class CustomCheckboxSelectionComponent {\n  rows = [];\n  selected = [];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n\n  add() {\n    this.selected.push(this.rows[1], this.rows[3]);\n  }\n\n  update() {\n    this.selected = [this.rows[1], this.rows[3]];\n  }\n\n  remove() {\n    this.selected = [];\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'chkbox-selection-demo',\n  template: `\n    <div>\n      <h3>\n        Checkbox Selection\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-chkbox.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n        <small>\n          <a href=\"javascript:void(0)\" (click)=\"add()\">Add</a> |\n          <a href=\"javascript:void(0)\" (click)=\"update()\">Update</a> |\n          <a href=\"javascript:void(0)\" (click)=\"remove()\">Remove</a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <ngx-datatable\n          style=\"width: 90%\"\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n          [limit]=\"5\"\n          [selected]=\"selected\"\n          [selectionType]=\"SelectionType.checkbox\"\n          [selectAllRowsOnPage]=\"false\"\n          [displayCheck]=\"displayCheck\"\n          (activate)=\"onActivate($event)\"\n          (select)=\"onSelect($event)\"\n        >\n          <ngx-datatable-column\n            [width]=\"30\"\n            [sortable]=\"false\"\n            [canAutoResize]=\"false\"\n            [draggable]=\"false\"\n            [resizeable]=\"false\"\n            [headerCheckboxable]=\"true\"\n            [checkboxable]=\"true\"\n          >\n          </ngx-datatable-column>\n          <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n          <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n          <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\n        </ngx-datatable>\n      </div>\n\n      <div class=\"selected-column\">\n        <h4>\n          Selections <small>({{ selected?.length }})</small>\n        </h4>\n        <ul>\n          <li *ngFor=\"let sel of selected\">\n            {{ sel.name }}\n          </li>\n          <li *ngIf=\"!selected?.length\">No Selections</li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class CheckboxSelectionComponent {\n  rows = [];\n  selected = [];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n\n  add() {\n    this.selected.push(this.rows[1], this.rows[3]);\n  }\n\n  update() {\n    this.selected = [this.rows[1], this.rows[3]];\n  }\n\n  remove() {\n    this.selected = [];\n  }\n\n  displayCheck(row) {\n    return row.name !== 'Ethel Price';\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'multidisable-selection-demo',\n  template: `\n    <div>\n      <h3>\n        Selection Callback to Disable Selections\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-disabled.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <ngx-datatable\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [columns]=\"columns\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n          [limit]=\"5\"\n          [selectCheck]=\"checkSelectable\"\n          [selected]=\"selected\"\n          [selectionType]=\"SelectionType.multi\"\n          (activate)=\"onActivate($event)\"\n          (select)=\"onSelect($event)\"\n        >\n        </ngx-datatable>\n      </div>\n\n      <div class=\"selected-column\">\n        <h4>Selections</h4>\n        <ul>\n          <li *ngFor=\"let sel of selected\">\n            {{ sel.name }}\n          </li>\n          <li *ngIf=\"!selected.length\">No Selections</li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class MultiDisableSelectionComponent {\n  rows = [];\n\n  selected = [];\n\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n\n  checkSelectable(event) {\n    console.log('Checking if selectable', event);\n    return event.name !== 'Ethel Price';\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'multi-click-selection-demo',\n  template: `\n    <div>\n      <h3>\n        Multi Click Selection\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-multi-click.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <div class=\"info\">\n          <p>This demonstrates multi selection table, where any click event causes a selection.</p>\n        </div>\n\n        <ngx-datatable\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [columns]=\"columns\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n          [limit]=\"5\"\n          [selected]=\"selected\"\n          [selectionType]=\"SelectionType.multiClick\"\n          (activate)=\"onActivate($event)\"\n          (select)=\"onSelect($event)\"\n        >\n        </ngx-datatable>\n      </div>\n\n      <div class=\"selected-column\">\n        <h4>Selections</h4>\n        <ul>\n          <li *ngFor=\"let sel of selected\">\n            {{ sel.name }}\n          </li>\n          <li *ngIf=\"!selected.length\">No Selections</li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class MultiClickSelectionComponent {\n  rows = [];\n\n  selected = [];\n\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'multi-selection-demo',\n  template: `\n    <div>\n      <h3>\n        Multi Select\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-multi.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <div class=\"info\">\n          <p>This demonstrates multi selection table, use CTRL or SHIFT click to select multiple items.</p>\n        </div>\n\n        <ngx-datatable\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [columns]=\"columns\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n          [limit]=\"5\"\n          [selected]=\"selected\"\n          [selectionType]=\"SelectionType.multi\"\n          (activate)=\"onActivate($event)\"\n          (select)=\"onSelect($event)\"\n        >\n        </ngx-datatable>\n      </div>\n\n      <div class=\"selected-column\">\n        <h4>Selections</h4>\n        <ul>\n          <li *ngFor=\"let sel of selected\">\n            {{ sel.name }}\n          </li>\n          <li *ngIf=\"!selected.length\">No Selections</li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class MultiSelectionComponent {\n  rows = [];\n\n  selected = [];\n\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SelectionType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'single-selection-demo',\n  template: `\n    <div>\n      <h3>\n        Single Row Selection\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/selection/selection-single.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div style=\"float:left;width:75%\">\n        <div class=\"info\">\n          <p>This demonstrates a simple single selection table with the 3rd row selected by default.</p>\n        </div>\n\n        <ngx-datatable\n          class=\"material\"\n          [rows]=\"rows\"\n          [columnMode]=\"ColumnMode.force\"\n          [columns]=\"columns\"\n          [headerHeight]=\"50\"\n          [footerHeight]=\"50\"\n          rowHeight=\"auto\"\n          [limit]=\"5\"\n          [selected]=\"selected\"\n          [selectionType]=\"SelectionType.single\"\n          (activate)=\"onActivate($event)\"\n          (select)=\"onSelect($event)\"\n        >\n        </ngx-datatable>\n      </div>\n\n      <div class=\"selected-column\">\n        <h4>Selections</h4>\n        <ul>\n          <li *ngFor=\"let sel of selected\">\n            {{ sel.name }}\n          </li>\n          <li *ngIf=\"!selected.length\">No Selections</li>\n        </ul>\n      </div>\n    </div>\n  `\n})\nexport class SingleSelectionComponent {\n  rows = [];\n\n  selected = [];\n\n  columns: any[] = [{ prop: 'name' }, { name: 'Company' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n  SelectionType = SelectionType;\n\n  constructor() {\n    this.fetch(data => {\n      this.selected = [data[2]];\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSelect({ selected }) {\n    console.log('Select Event', selected, this.selected);\n  }\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode, SortType } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'client-sorting-demo',\n  template: `\n    <div>\n      <h3>\n        Client-side Sorting\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/sorting/sorting-client.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [sortType]=\"SortType.multi\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ClientSortingComponent {\n  rows = [];\n\n  columns = [{ name: 'Company' }, { name: 'Name' }, { name: 'Gender' }];\n\n  ColumnMode = ColumnMode;\n  SortType = SortType;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'comparator-sorting-demo',\n  template: `\n    <div>\n      <h3>\n        Custom Sorting Comparator\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/sorting/sorting-comparator.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class SortingComparatorComponent {\n  rows = [];\n\n  columns = [\n    { name: 'Company', comparator: this.companyComparator.bind(this) },\n    { name: 'Name', sortable: false },\n    { name: 'Gender', sortable: false }\n  ];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data.splice(0, 20));\n    };\n\n    req.send();\n  }\n\n  companyComparator(propA, propB) {\n    console.log('Sorting Comparator', propA, propB);\n\n    // Just a simple sort function comparisoins\n    if (propA.toLowerCase() < propB.toLowerCase()) {\n      return -1;\n    }\n    if (propA.toLowerCase() > propB.toLowerCase()) {\n      return 1;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'default-sorting-demo',\n  template: `\n    <div>\n      <h3>\n        Client-side Sorting\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/sorting/sorting-default.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [sorts]=\"[{ prop: 'name', dir: 'desc' }]\"\n      >\n        <ngx-datatable-column name=\"Company\">\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\n            {{ row.company }}\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Name\">\n          <ng-template let-row=\"row\" ngx-datatable-cell-template>\n            {{ row.name }}\n          </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Gender\"> </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class DefaultSortingComponent implements OnInit {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  ngOnInit() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'server-sorting-demo',\n  template: `\n    <div>\n      <h3>\n        Server-side Sorting\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/sorting/sorting-server.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [externalSorting]=\"true\"\n        [loadingIndicator]=\"loading\"\n        (sort)=\"onSort($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class ServerSortingComponent {\n  loading = false;\n\n  rows = [];\n\n  columns = [\n    { name: 'Company', sortable: true },\n    { name: 'Name', sortable: true },\n    { name: 'Gender', sortable: true }\n  ];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data.splice(0, 20));\n    };\n\n    req.send();\n  }\n\n  onSort(event) {\n    // event was triggered, start sort sequence\n    console.log('Sort Event', event);\n    this.loading = true;\n    // emulate a server request with a timeout\n    setTimeout(() => {\n      const rows = [...this.rows];\n      // this is only for demo purposes, normally\n      // your server would return the result for\n      // you and you would just set the rows prop\n      const sort = event.sorts[0];\n      rows.sort((a, b) => {\n        return a[sort.prop].localeCompare(b[sort.prop]) * (sort.dir === 'desc' ? -1 : 1);\n      });\n\n      this.rows = rows;\n      this.loading = false;\n    }, 1000);\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'summary-row-custom-template-demo',\n  template: `\n    <div>\n      <h3>\n        Summary Row with Custom Template\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/summary/summary-row-custom-template.component.ts\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [summaryRow]=\"true\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [rowHeight]=\"'auto'\"\n        [summaryHeight]=\"55\"\n        [rows]=\"rows\"\n      >\n      </ngx-datatable>\n      <ng-template #nameSummaryCell let-row=\"row\" let-value=\"value\">\n        <div class=\"name-container\">\n          <div class=\"chip\" *ngFor=\"let name of getNames()\">\n            <span class=\"chip-content\">{{ name }}</span>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  `,\n  styleUrls: ['./summary-row-custom-template.component.scss']\n})\nexport class SummaryRowCustomTemplateComponent implements OnInit {\n  rows = [];\n\n  @ViewChild('nameSummaryCell')\n  nameSummaryCell: TemplateRef<any>;\n\n  columns = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        prop: 'name',\n        summaryFunc: () => null,\n        summaryTemplate: this.nameSummaryCell\n      },\n      { name: 'Gender', summaryFunc: cells => this.summaryForGender(cells) },\n      { prop: 'age', summaryFunc: cells => this.avgAge(cells) }\n    ];\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  getNames(): string[] {\n    return this.rows.map(row => row.name).map(fullName => fullName.split(' ')[1]);\n  }\n\n  private summaryForGender(cells: string[]) {\n    const males = cells.filter(cell => cell === 'male').length;\n    const females = cells.filter(cell => cell === 'female').length;\n\n    return `males: ${males}, females: ${females}`;\n  }\n\n  private avgAge(cells: number[]): number {\n    const filteredCells = cells.filter(cell => !!cell);\n    return filteredCells.reduce((sum, cell) => (sum += cell), 0) / filteredCells.length;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'summary-row-inline-html',\n  template: `\n    <div>\n      <h3>\n        Inline HTML template\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/summary/summary-row-inline-html.component.ts\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [summaryRow]=\"enableSummary\"\n        [summaryPosition]=\"summaryPosition\"\n        [summaryHeight]=\"100\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [rows]=\"rows\"\n      >\n        <ngx-datatable-column prop=\"name\" [summaryTemplate]=\"nameSummaryCell\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [summaryFunc]=\"summaryForGender\"></ngx-datatable-column>\n        <ngx-datatable-column prop=\"age\" [summaryFunc]=\"avgAge\"></ngx-datatable-column>\n      </ngx-datatable>\n      <ng-template #nameSummaryCell>\n        <div class=\"name-container\">\n          <div class=\"chip\" *ngFor=\"let name of getNames()\">\n            <span class=\"chip-content\">{{ name }}</span>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  `\n})\nexport class SummaryRowInlineHtmlComponent {\n  rows = [];\n\n  enableSummary = true;\n  summaryPosition = 'top';\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  getNames(): string[] {\n    return this.rows.map(row => row.name).map(fullName => fullName.split(' ')[1]);\n  }\n\n  summaryForGender(cells: string[]) {\n    const males = cells.filter(cell => cell === 'male').length;\n    const females = cells.filter(cell => cell === 'female').length;\n\n    return `males: ${males}, females: ${females}`;\n  }\n\n  avgAge(cells: number[]): number {\n    const filteredCells = cells.filter(cell => !!cell);\n    return filteredCells.reduce((sum, cell) => (sum += cell), 0) / filteredCells.length;\n  }\n}\n","import { Component } from '@angular/core';\nimport { MockServerResultsService } from '../paging/mock-server-results-service';\nimport { PagedData } from '../paging/model/paged-data';\nimport { CorporateEmployee } from '../paging/model/corporate-employee';\nimport { Page } from '../paging/model/page';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'summary-row-server-paging-demo',\n  providers: [MockServerResultsService],\n  template: `\n    <div>\n      <h3>\n        Server-side paging\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/summary/summary-row-server-paging.component.ts\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [summaryRow]=\"true\"\n        [summaryHeight]=\"55\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [externalPaging]=\"true\"\n        [count]=\"page.totalElements\"\n        [offset]=\"page.pageNumber\"\n        [limit]=\"page.size\"\n        (page)=\"setPage($event)\"\n      >\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class SummaryRowServerPagingComponent {\n  page = new Page();\n  rows = new Array<CorporateEmployee>();\n\n  columns = [\n    // NOTE: cells for current page only !\n    { name: 'Name', summaryFunc: cells => `${cells.length} total` },\n    { name: 'Gender', summaryFunc: () => this.getGenderSummary() },\n    { name: 'Company', summaryFunc: () => null }\n  ];\n\n  ColumnMode = ColumnMode;\n\n  constructor(private serverResultsService: MockServerResultsService) {\n    this.page.pageNumber = 0;\n    this.page.size = 20;\n  }\n\n  ngOnInit() {\n    this.setPage({ offset: 0 });\n  }\n\n  /**\n   * Populate the table with new data based on the page number\n   * @param page The page to select\n   */\n  setPage(pageInfo) {\n    this.page.pageNumber = pageInfo.offset;\n    this.serverResultsService.getResults(this.page).subscribe(pagedData => {\n      this.page = pagedData.page;\n      this.rows = pagedData.data;\n    });\n  }\n\n  getGenderSummary(): string {\n    // NOTE: there should be logic to get required informations from server\n    return '10 males, 10 females';\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'summary-row-simple-demo',\n  template: `\n    <div>\n      <h3>\n        Simple Summary Row\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/summary/summary-row-simple.component.ts\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <div class=\"controls\">\n        <div>\n          <input\n            id=\"enable-summary\"\n            type=\"checkbox\"\n            [checked]=\"enableSummary\"\n            (change)=\"enableSummary = !enableSummary\"\n          />\n          <label for=\"enable-summary\">Enable Summary Row</label>\n        </div>\n        <div>\n          <label for=\"position-select\">Position</label>\n          <select id=\"position-select\" (change)=\"onPositionSelectChange($event)\">\n            <option [value]=\"'top'\">Top</option>\n            <option [value]=\"'bottom'\">Bottom</option>\n          </select>\n        </div>\n      </div>\n      <ngx-datatable\n        class=\"material\"\n        [summaryRow]=\"enableSummary\"\n        [summaryPosition]=\"summaryPosition\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [summaryHeight]=\"55\"\n        [rows]=\"rows\"\n      >\n      </ngx-datatable>\n    </div>\n  `,\n  styleUrls: ['./summary-row-simple.component.scss']\n})\nexport class SummaryRowSimpleComponent {\n  rows = [];\n\n  columns = [\n    { prop: 'name', summaryFunc: null },\n    { name: 'Gender', summaryFunc: cells => this.summaryForGender(cells) },\n    { prop: 'age', summaryFunc: cells => this.avgAge(cells) }\n  ];\n\n  enableSummary = true;\n  summaryPosition = 'top';\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb: (data: [unknown]) => void) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onPositionSelectChange($event: Event) {\n    const target = $event.target as HTMLSelectElement;\n    this.summaryPosition = target.value;\n  }\n\n  private summaryForGender(cells: string[]) {\n    const males = cells.filter(cell => cell === 'male').length;\n    const females = cells.filter(cell => cell === 'female').length;\n\n    return `males: ${males}, females: ${females}`;\n  }\n\n  private avgAge(cells: number[]): number {\n    const filteredCells = cells.filter(cell => !!cell);\n    return filteredCells.reduce((sum, cell) => (sum += cell), 0) / filteredCells.length;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'inline-templates-demo',\n  template: `\n    <div>\n      <h3>\n        Expressive Templates\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/templates/template-dom.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n      >\n        <ngx-datatable-column name=\"Name\">\n          <ng-template let-column=\"column\" ngx-datatable-header-template> Holla! {{ column.name }} </ng-template>\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            Hi: <strong>{{ value }}</strong>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\">\n          <ng-template let-column=\"column\" let-sort=\"sortFn\" ngx-datatable-header-template>\n            <span (click)=\"sort()\">{{ column.name }}</span>\n          </ng-template>\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            My name is: <i [innerHTML]=\"row['name']\"></i> and <i>{{ value }}</i>\n            <div>{{ joke }}</div>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            <div style=\"border:solid 1px #ddd;margin:5px;padding:3px\">\n              <div style=\"background:#999;height:10px\" [style.width]=\"value + '%'\"></div>\n            </div>\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `\n})\nexport class InlineTemplatesComponent {\n  rows = [];\n  joke = 'knock knock';\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'template-ref-demo',\n  template: `\n    <div>\n      <h3>\n        TemplateRef via Column Property\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/templates/template-obj.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [rows]=\"rows\"\n        [columns]=\"columns\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n      >\n      </ngx-datatable>\n\n      <ng-template #hdrTpl let-column=\"column\"> <strong>Fancy</strong>: {{ column.name }} !! </ng-template>\n\n      <ng-template #editTmpl let-row=\"row\" let-value=\"value\">\n        <img *ngIf=\"value === 'male'\" width=\"150\" src=\"https://media.giphy.com/media/I8nepxWwlEuqI/giphy.gif\" />\n        <img *ngIf=\"value === 'female'\" width=\"150\" src=\"https://media.giphy.com/media/sxSVG3XHf7yww/giphy.gif\" />\n      </ng-template>\n    </div>\n  `\n})\nexport class TemplateRefTemplatesComponent {\n  @ViewChild('editTmpl', { static: true }) editTmpl: TemplateRef<any>;\n  @ViewChild('hdrTpl', { static: true }) hdrTpl: TemplateRef<any>;\n\n  rows = [];\n  columns = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data.splice(0, 5);\n    });\n  }\n\n  ngOnInit() {\n    this.columns = [\n      {\n        cellTemplate: this.editTmpl,\n        headerTemplate: this.hdrTpl,\n        name: 'Gender'\n      }\n    ];\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n}\n","import { Component } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'client-side-tree-demo',\n  template: `\n    <div>\n      <h3>\n        Flex Column Width Distribution\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/tree/client-tree.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material\"\n        [columnMode]=\"ColumnMode.flex\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"50\"\n        rowHeight=\"auto\"\n        [treeFromRelation]=\"'manager'\"\n        [treeToRelation]=\"'name'\"\n        [rows]=\"rows\"\n        (treeAction)=\"onTreeAction($event)\"\n      >\n        <ngx-datatable-column name=\"Name\" [flexGrow]=\"3\" [isTreeColumn]=\"true\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\" [flexGrow]=\"1\">\n          <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\" [flexGrow]=\"1\">\n          <ng-template let-value=\"value\" ngx-datatable-cell-template>\n            {{ value }}\n          </ng-template>\n        </ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `,\n  styles: ['.icon {height: 10px; width: 10px; }', '.disabled {opacity: 0.5; }']\n})\nexport class ClientTreeComponent {\n  rows = [];\n\n  ColumnMode = ColumnMode;\n\n  constructor() {\n    this.fetch(data => {\n      this.rows = data;\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/company_tree.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onTreeAction(event: any) {\n    const index = event.rowIndex;\n    const row = event.row;\n    if (row.treeStatus === 'collapsed') {\n      row.treeStatus = 'expanded';\n    } else {\n      row.treeStatus = 'collapsed';\n    }\n    this.rows = [...this.rows];\n  }\n}\n","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { ColumnMode } from 'projects/swimlane/ngx-datatable/src/public-api';\n\n@Component({\n  selector: 'full-screen-tree-demo',\n  template: `\n    <div>\n      <h3>\n        Full Screen\n        <small>\n          <a\n            href=\"https://github.com/swimlane/ngx-datatable/blob/master/src/app/tree/fullscreen.component.ts\"\n            target=\"_blank\"\n          >\n            Source\n          </a>\n        </small>\n      </h3>\n      <ngx-datatable\n        class=\"material fullscreen\"\n        style=\"top: 52px\"\n        [columnMode]=\"ColumnMode.force\"\n        [headerHeight]=\"50\"\n        [footerHeight]=\"0\"\n        [rowHeight]=\"50\"\n        [scrollbarV]=\"true\"\n        [scrollbarH]=\"true\"\n        [rows]=\"rows\"\n        [treeFromRelation]=\"'parentId'\"\n        [treeToRelation]=\"'id'\"\n        (treeAction)=\"onTreeAction($event)\"\n      >\n        <ngx-datatable-column name=\"Id\" [width]=\"80\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Name\" [isTreeColumn]=\"true\" [width]=\"300\" [treeLevelIndent]=\"20\">\n          <ng-template ngx-datatable-tree-toggle let-tree=\"cellContext\">\n            <button [disabled]=\"tree.treeStatus === 'disabled'\" (click)=\"tree.onTreeAction()\">\n              <span *ngIf=\"tree.treeStatus === 'loading'\">\n                ...\n              </span>\n              <span *ngIf=\"tree.treeStatus === 'collapsed'\">\n                ↑\n              </span>\n              <span *ngIf=\"tree.treeStatus === 'expanded'\">\n                ↓\n              </span>\n              <span *ngIf=\"tree.treeStatus === 'disabled'\">\n                ⃠\n              </span>\n            </button>\n          </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"City\" [width]=\"300\" prop=\"address.city\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"State\" [width]=\"300\" prop=\"address.state\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n  `,\n  styles: ['.icon {height: 10px; width: 10px; }', '.disabled {opacity: 0.5; }']\n})\nexport class FullScreenTreeComponent {\n  rows = [];\n  lastIndex = 15;\n\n  ColumnMode = ColumnMode;\n\n  constructor(private cd: ChangeDetectorRef) {\n    this.fetch(data => {\n      data = data.slice(1, this.lastIndex);\n      this.rows = data.map(d => {\n        d.treeStatus = 'collapsed';\n        d.parentId = null;\n        return d;\n      });\n    });\n  }\n\n  fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/100k.json`);\n\n    req.onload = () => {\n      setTimeout(() => {\n        cb(JSON.parse(req.response));\n      }, 500);\n    };\n\n    req.send();\n  }\n\n  onTreeAction(event: any) {\n    const index = event.rowIndex;\n    const row = event.row;\n    if (row.treeStatus === 'collapsed') {\n      row.treeStatus = 'loading';\n      this.fetch(data => {\n        data = data.slice(this.lastIndex, this.lastIndex + 3).map(d => {\n          d.treeStatus = 'collapsed';\n          d.parentId = row.id;\n          return d;\n        });\n        this.lastIndex = this.lastIndex + 3;\n        row.treeStatus = 'expanded';\n        this.rows = [...this.rows, ...data];\n        this.cd.detectChanges();\n      });\n    } else {\n      row.treeStatus = 'collapsed';\n      this.rows = [...this.rows];\n      this.cd.detectChanges();\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}